
Documentation()

OnInsert()

OnModify()

OnDelete()
ServiceLizenzTab.RESET;
ServiceLizenzTab.SETRANGE(Art,ServiceLizenzTab.Art :: Temporär);
ServiceLizenzTab.SETRANGE("Nr.","Belegnr.");
ServiceLizenzTab.SETRANGE("Belegzeilennr.","Belegzeilennr.");
ServiceLizenzTab.SETRANGE("Auftragsnr.","Nr.");
ServiceLizenzTab.SETRANGE("Auftragszeilennr.","Zeilennr.");
IF ServiceLizenzTab.FINDFIRST THEN
  ServiceLizenzTab.DELETEALL;

OnRename()

Art - OnValidate()

Art - OnLookup()

Nr. - OnValidate()

Nr. - OnLookup()

Zeilennr. - OnValidate()

Zeilennr. - OnLookup()

SUP Artikelnr. - OnValidate()

SUP Artikelnr. - OnLookup()

Geräte Artikelnr. - OnValidate()
IF Art = Art :: "SUP-AU" THEN
  BEGIN

    //Prüfung: Bei Fremderwerb müssen für ein und derselben Pseudo Belegnr. + Zeilennr. die Artikelnummern identisch sein
    IF Fremderwerb = TRUE THEN
      BEGIN
        ServiceRelaDoc.RESET;
        ServiceRelaDoc.SETRANGE(Art,ServiceRelaDoc.Art :: "SUP-AU");
        ServiceRelaDoc.SETRANGE("Belegnr.","Belegnr.");
        ServiceRelaDoc.SETRANGE("Belegzeilennr.","Belegzeilennr.");
        IF ServiceRelaDoc.FINDFIRST THEN
          REPEAT 
            IF ((ServiceRelaDoc."Nr." <> "Nr.") OR (ServiceRelaDoc."Zeilennr." <> "Zeilennr."))
            AND (ServiceRelaDoc."Geräte Artikelnr." <> "Geräte Artikelnr.") THEN
              ERROR(Text004,FIELDCAPTION("Belegnr."),ServiceRelaDoc."Belegnr.",FIELDCAPTION("Belegzeilennr."),
                    ServiceRelaDoc."Belegzeilennr.",FIELDCAPTION("Geräte Artikelnr."),
                    ServiceRelaDoc."Geräte Artikelnr.",ServiceRelaDoc."Nr.","Geräte Artikelnr.");
          UNTIL ServiceRelaDoc.NEXT = 0;
      END;

    Artikel.GET("Geräte Artikelnr.");
    IF Artikel.Serviceklassifizierung = '' THEN ERROR(Text000,"Geräte Artikelnr.");
    IF (Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
    OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT') THEN
      Basisgerät := TRUE
    ELSE
      Basisgerät := FALSE;

    "Service VK-Preis einzeln" := 0;
    "Service VK-Preis Zeilenbetrag" := 0;
    "Service DC einzeln" := 0;
    "Service DC Gesamt" := 0;
    "MSRP Service" := 0;

    IF (("Belegnr." <> '') AND ("Belegzeilennr." <> 0)) THEN
      Gruppierung := Gruppieren("Belegnr.","Belegzeilennr.",Basisgerät);

    //Re Instatement Fee soll für Arikelpositionen aus dem Auftrag unterbunden werden
    Artikel.GET("SUP Artikelnr.");
    IF (STRPOS(Artikel."No. 2",'INSTATEMENT') <> 0) AND (STRPOS(Artikel."No. 2",'FEE') <> 0) THEN
      BEGIN
        Auftrag.RESET;
        Auftrag.SETRANGE(Auftrag."No.","Belegnr.");
        IF Auftrag.FINDFIRST THEN
          BEGIN
            ERROR(Text006);
          END;
      END;

  END;

Geräte Artikelnr. - OnLookup()

Abw. Geräte Artikelnr. - OnValidate()

Abw. Geräte Artikelnr. - OnLookup()

Basisgerät - OnValidate()

Basisgerät - OnLookup()

Belegnr. - OnValidate()
Gruppierung := Gruppieren("Belegnr.","Belegzeilennr.",Basisgerät)

Belegnr. - OnLookup()

Belegzeilennr. - OnValidate()
Gruppierung := Gruppieren("Belegnr.","Belegzeilennr.",Basisgerät)

Belegzeilennr. - OnLookup()

Debitornr. - OnValidate()

Debitornr. - OnLookup()

Wartungsvertragsnr. - OnValidate()

Wartungsvertragsnr. - OnLookup()

Vertragsnr. übernommen - OnValidate()

Vertragsnr. übernommen - OnLookup()

Service VK-Preis einzeln - OnValidate()

Service VK-Preis einzeln - OnLookup()

Service VK-Preis Zeilenbetrag - OnValidate()

Service VK-Preis Zeilenbetrag - OnLookup()

Menge kalk. - OnValidate()
IF xRec."Menge kalk." <> "Menge kalk." THEN
  BEGIN
    "Service VK-Preis Zeilenbetrag" := 0;
    "Service DC Gesamt" := 0;
  END;

Menge kalk. - OnLookup()

Laufzeit - OnValidate()
PrüfeServiceQuote("SUP Artikelnr.",Laufzeit,"Quotenr.");

IF STRPOS(Laufzeit,'M') = 0 THEN
  ERROR('Im Feld %1 muss auch immer die Angabe M (Monate) enthalten sein.',FIELDCAPTION(Laufzeit));

IF xRec.Laufzeit <> Laufzeit THEN
  BEGIN
    "Service VK-Preis einzeln" := 0;
    "Service VK-Preis Zeilenbetrag" := 0;  
    "Service DC einzeln" := 0;
    "Service DC Gesamt" := 0;
    "Rabatt/Marge" := 0;
  END;

//VALIDATE(Startdatum);

Laufzeit - OnLookup()

Startdatum - OnValidate()
IF "SUP Artikelnr." = 'EXTD-HW-WARR/YR' THEN ERROR(Text005);

ServiceRelaDoc.RESET;
ServiceRelaDoc.SETRANGE(Art,ServiceRelaDoc.Art :: "SUP-AU");
ServiceRelaDoc.SETRANGE("Nr.","Nr.");
ServiceRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
ServiceRelaDoc.SETRANGE(Startdatum,Startdatum);
IF NOT ServiceRelaDoc.FINDFIRST THEN
  BEGIN
    IF (Startdatum < WORKDATE) AND (Startdatum <> 0D) THEN
      IF NOT CONFIRM(Text002,TRUE,FIELDCAPTION(Startdatum)) THEN
        BEGIN
          Startdatum := xRec.Startdatum;
          EXIT;
        END;
  END;

//2015-12-11 ST Zusatz Berechnung der Re Instatement Fee Monate
Artikel.GET("SUP Artikelnr.");
IF Artikel.Artikelgruppe = 'CHAMPS_FEE' THEN
  BEGIN
    champs_fee_monate := TOPAS_API.CalculateTimeDiff('M',Startdatum,WORKDATE);
    IF champs_fee_monate < 3 THEN
      champs_fee_monate := 0
    ELSE
      IF champs_fee_monate > 36 THEN
        champs_fee_monate := 36;
    VALIDATE(Laufzeit, FORMAT(champs_fee_monate)+ 'M');
  END
ELSE
  VALIDATE(Ablaufdatum);

Startdatum - OnLookup()

Ablaufdatum - OnValidate()
IF "SUP Artikelnr." = 'EXTD-HW-WARR/YR' THEN ERROR(Text005);

Artikel.GET("SUP Artikelnr.");
IF Artikel.Artikelgruppe = 'CHAMPS_FEE' THEN
  ERROR(Text007,FIELDCAPTION(Ablaufdatum),FIELDCAPTION(Startdatum));

IF ((Ablaufdatum < WORKDATE) OR (Ablaufdatum < Startdatum)) AND (Ablaufdatum <> 0D) THEN
  ERROR(Text003,FIELDCAPTION(Ablaufdatum));

//IF (xRec.Startdatum <> 0D) AND (Ablaufdatum = 0D) THEN
//  Startdatum := 0D;

//IF (Laufzeit <> '') AND (Startdatum <> 0D) THEN
//  Ablaufdatum := CALCDATE(Laufzeit,Startdatum);

IF Ablaufdatum <> 0D THEN
  VALIDATE(Laufzeit,FORMAT(TOPAS_API.CalculateTimeDiff('M',Startdatum,Ablaufdatum)) + 'M');

IF Startdatum = 0D THEN
  Ablaufdatum := 0D;

IF (Ablaufdatum = 0D) AND (Startdatum = 0D) THEN
  BEGIN
    Opt.RESET;
    Opt.SETRANGE("Tabellen ID",50024);
    Opt.SETRANGE("Feld ID",44);
    Opt.SETRANGE("Nr.","SUP Artikelnr.");
    IF Opt.FINDFIRST THEN
      VALIDATE(Laufzeit,Opt.Code);
  END;

Ablaufdatum - OnLookup()

Nachträgliche Service Order - OnValidate()

Nachträgliche Service Order - OnLookup()

Fremderwerb - OnValidate()

Fremderwerb - OnLookup()

Service DC einzeln - OnValidate()

Service DC einzeln - OnLookup()

Service DC Gesamt - OnValidate()

Service DC Gesamt - OnLookup()

MSRP Service - OnValidate()

MSRP Service - OnLookup()

Service DC Währungscode - OnValidate()

Service DC Währungscode - OnLookup()

Rabatt/Marge - OnValidate()

Rabatt/Marge - OnLookup()

Laufzeit ab Buchungsdatum - OnValidate()

Laufzeit ab Buchungsdatum - OnLookup()

Quotenr. - OnValidate()
PrüfeServiceQuote("SUP Artikelnr.",Laufzeit,"Quotenr.");

Quotenr. - OnLookup()

Beachte Startdatum - OnValidate()

Beachte Startdatum - OnLookup()

Gruppierung - OnValidate()

Gruppierung - OnLookup()

PseudoBelegNrErmitteln(auftragsnr : Code[20];auzeilennr : Integer) : Code[20]
PrüfeServRelaDoc.RESET;
PrüfeServRelaDoc.SETRANGE(Art,PrüfeServRelaDoc.Art :: "SUP-AU");
PrüfeServRelaDoc.SETRANGE("Nr.",auftragsnr);
PrüfeServRelaDoc.SETRANGE("Zeilennr.",auzeilennr);
PrüfeServRelaDoc.SETRANGE(Fremderwerb,TRUE);
IF PrüfeServRelaDoc.FINDFIRST THEN
  BEGIN
    EXIT(PrüfeServRelaDoc."Belegnr.");
  END
ELSE
  BEGIN
    // Prüfe, ob im Beleg eine andere Kalkulation mit Pseudo Belegnr. besteht und wenn ja biete diese an
    PrüfeServRelaDoc.RESET;
    PrüfeServRelaDoc.SETRANGE(Art,PrüfeServRelaDoc.Art :: "SUP-AU");
    PrüfeServRelaDoc.SETRANGE("Nr.",auftragsnr);
    //PrüfeServRelaDoc.SETRANGE(Basisgerät,TRUE);
    PrüfeServRelaDoc.SETRANGE(Fremderwerb,TRUE);
    IF PrüfeServRelaDoc.FINDLAST THEN
      IF CONFIRM(Text001,TRUE,PrüfeServRelaDoc."Zeilennr.",PrüfeServRelaDoc."SUP Artikelnr.",PrüfeServRelaDoc."Belegnr.") THEN
        EXIT(PrüfeServRelaDoc."Belegnr.");

    ok := EVALUATE(eingabe,'TOPAS-PSEU');
    laufende_nummer:='';
    NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
    EXIT('LS_' + laufende_nummer);
  END;

PrüfeServiceQuote(Service : Code[20];kalk_laufzeit : Code[20];kalk_quotenr : Code[10])
//Zunächst für AudioCodes Quotes gedacht, gelten grundsätzlich nur für Service-Laufzeiten von max. 1 Jahr
IF (kalk_quotenr = '') OR (kalk_laufzeit = '') THEN EXIT;

IF Artikel.GET(Service) THEN
  IF (Artikel.Artikelgruppe <> 'APSS_OB') AND (Artikel.Artikelgruppe <> 'ACTS') AND (Artikel.Artikelgruppe <> 'ACTS_MSS') THEN
    ERROR(Text009,FIELDCAPTION("Quotenr."));

EVALUATE(v_laufzeit,COPYSTR(kalk_laufzeit,1,STRPOS(kalk_laufzeit,'M')-1));
IF (kalk_quotenr <> '') AND (v_laufzeit > 12) THEN
  ERROR(Text008);

Gruppieren(Belegnr : Code[20];Belegzeile : Integer;Basisgerät : Boolean) : Text[50]
IF (Belegnr = '') OR (Belegzeile = 0) THEN
  EXIT;

IF Basisgerät = TRUE THEN
  Teil_string_a := 'B_'
ELSE
  Teil_string_a := 'M_';

//Damit 6 stellige Zeilennr. auch nach unten sortiert werden
zusatz_belegzeile := '';
IF STRLEN(FORMAT(Belegzeile)) >=6 THEN
  zusatz_belegzeile := '6ST_';

IF (STRPOS(Belegnr,'AU') <> 0) OR (STRPOS(Belegnr,'PSEU') <> 0) THEN
  //Ein X_ damit Auftrags- oder Pseudo Positionen nach unten sortiert werden
  Teil_string_b := 'X_' + zusatz_belegzeile + Belegnr + '_' + FORMAT(Belegzeile)
ELSE
  Teil_string_b := zusatz_belegzeile + Belegnr + '_' + FORMAT(Belegzeile);

EXIT(Teil_string_a + Teil_string_b);

UpdateLaufzeitabBuchungsdatum(VAR FromServiceRelaDoc : Record "Service Beleg Zuordnung") : Boolean
IF (FromServiceRelaDoc.HASFILTER) AND (FromServiceRelaDoc."Laufzeit ab Buchungsdatum" = TRUE) THEN BEGIN
  IF CONFIRM(Text010,TRUE) = TRUE THEN BEGIN
    UpdateServiceRelaDoc.RESET;
    UpdateServiceRelaDoc.SETRANGE(Art,FromServiceRelaDoc.Art);
    UpdateServiceRelaDoc.SETRANGE("Nr.",FromServiceRelaDoc."Nr.");
    UpdateServiceRelaDoc.SETRANGE("Zeilennr.",FromServiceRelaDoc."Zeilennr.");
    IF UpdateServiceRelaDoc.FIND('-') THEN BEGIN
      UpdateServiceRelaDoc.MODIFYALL("Laufzeit ab Buchungsdatum",TRUE);
      EXIT(TRUE);
    END;
  END;
END;

UpdateBeachteStartdatum(VAR FromServiceRelaDoc : Record "Service Beleg Zuordnung") : Boolean
IF (FromServiceRelaDoc.HASFILTER) AND (FromServiceRelaDoc."Beachte Startdatum" = TRUE) THEN BEGIN
  IF CONFIRM(Text010,TRUE) = TRUE THEN BEGIN
    UpdateServiceRelaDoc.RESET;
    UpdateServiceRelaDoc.SETRANGE(Art,FromServiceRelaDoc.Art);
    UpdateServiceRelaDoc.SETRANGE("Nr.",FromServiceRelaDoc."Nr.");
    UpdateServiceRelaDoc.SETRANGE("Zeilennr.",FromServiceRelaDoc."Zeilennr.");
    IF UpdateServiceRelaDoc.FIND('-') THEN BEGIN
      UpdateServiceRelaDoc.MODIFYALL("Beachte Startdatum",TRUE);
      EXIT(TRUE);
    END;
  END;
END;

Ablaufdatum_generieren(SUPArtikelnr : Code[20];Wartungsnr : Code[20]) : Date
Ermittle_Servicegruppe.RESET;
Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',SUPArtikelnr);
IF Ermittle_Servicegruppe.FINDFIRST THEN
  BEGIN
    PrüfeServiceTab.RESET;
    PrüfeServiceTab.SETFILTER(Art,'%1',PrüfeServiceTab.Art :: Service);
    PrüfeServiceTab.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
    PrüfeServiceTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
    //PrüfeServiceTab.SETFILTER("Zu exportieren",'%1',TRUE);
    PrüfeServiceTab.SETFILTER(Basisgerät,'%1',TRUE);
    PrüfeServiceTab.SETFILTER(Inaktiv,'%1',FALSE);
    PrüfeServiceTab.ASCENDING(FALSE);
    IF PrüfeServiceTab.FINDFIRST THEN
      REPEAT
        Artikel_Servicegruppe.RESET;
        Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
        Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
        Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PrüfeServiceTab."SUP Artikelnr.");
        IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
        Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
          BEGIN
            EXIT(PrüfeServiceTab."Ablaufdatum Serviceleistung");
          END;
    UNTIL PrüfeServiceTab.NEXT = 0;
  END;

EXIT(0D);
