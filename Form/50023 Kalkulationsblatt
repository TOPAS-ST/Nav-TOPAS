
Documentation()
# 2013-10-21 ST Splicecom Demo / Lizenz Anbindung

Form - OnInit()

Form - OnOpenForm()
CurrForm.btn_auswahl_sn.VISIBLE := FALSE;
CurrForm.txtbox_kalk_prozentsatz.VISIBLE := FALSE;
CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := FALSE;
AktFormTemplate;

Form - OnCloseForm()

Form - OnQueryCloseForm() : Boolean

Form - OnActivateForm()

Form - OnDeactivateForm()

Form - OnFindRecord(Which : Text[1024]) : Boolean

Form - OnNextRecord(Steps : Integer) : Integer

Form - OnAfterGetRecord()
KalkFehlerPrüfen;

Form - OnAfterGetCurrRecord()
IF "Nachträgliche Service Order" = TRUE THEN
  CurrForm.btn_auswahl_sn.VISIBLE := TRUE
ELSE
  CurrForm.btn_auswahl_sn.VISIBLE := FALSE;

IF Fremderwerb = TRUE THEN
  CurrForm."Geräte Artikelnr.".EDITABLE := TRUE
ELSE
  CurrForm."Geräte Artikelnr.".EDITABLE := FALSE;

IF Artikel.GET("SUP Artikelnr.") AND ((Artikel.Artikelgruppe = 'ACTS')
OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Artikel.Artikelgruppe = 'ACHAT')) THEN
  BEGIN
    CurrForm.txtbox_kalk_prozentsatz.VISIBLE := TRUE;
    CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := TRUE;
  END
ELSE
  BEGIN
    CurrForm.txtbox_kalk_prozentsatz.VISIBLE := FALSE;
    CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := FALSE;
  END;

Form - OnBeforePutRecord()

Form - OnNewRecord(BelowxRec : Boolean)

Form - OnInsertRecord(BelowxRec : Boolean) : Boolean

Form - OnModifyRecord() : Boolean
AusführungPrüfen;

Form - OnDeleteRecord() : Boolean

Form - OnTimer()

Form - OnCreateHyperlink(VAR URL : Text[1024])

Form - OnHyperlink(URL : Text[1024])

HoleArtikelPos()
IF (lieferscheinnr <> '') AND (wartungsnr <> '') THEN
  ERROR(Text012);

IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN
        IF (lieferscheinnr = '') AND (wartungsnr = '') THEN
          BEGIN
            "AU-Zeile".RESET;
            "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
            "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
            IF "AU-Zeile".FINDFIRST THEN

              ////CHAMPS bezieht sich auf Auftrag
              BEGIN
                REPEAT
                  Artikel.GET("AU-Zeile"."No.");
                  IF Artikel."Software Upgrade Protection" = FALSE THEN
                    BEGIN
                      TempChampRelaDoc.RESET;
                      TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                      TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                      TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                      TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                      TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                      IF NOT TempChampRelaDoc.FINDFIRST THEN
                        BEGIN
                          ChampRelaDoc.INIT;
                          ChampRelaDoc.Art := Art :: "SUP-AU";
                          ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                          ChampRelaDoc."Zeilennr." := v_zeilennr;
                          ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                          ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                          ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                          ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                          ChampRelaDoc.VALIDATE("Geräte Artikelnr.","AU-Zeile"."No.");
                          ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                          //Laufzeit vorbelegen
                          Opt.RESET;
                          Opt.SETFILTER("Tabellen ID",'%1',50024);
                          Opt.SETFILTER("Feld ID",'%1',44);
                          Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                          IF Opt.FINDFIRST THEN
                            ChampRelaDoc.Laufzeit := Opt.Code;
                          ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                          ChampRelaDoc.Basisgerät);
                          ChampRelaDoc.INSERT(TRUE);
                        END;
                    END;
                UNTIL "AU-Zeile".NEXT = 0;
                CurrForm.UPDATE;
              END;
          END
        ELSE
          BEGIN
            ////CHAMPS bezieht sich auf Lieferschein
            IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN
              BEGIN
                "Lief-Zeile".RESET;
                "Lief-Zeile".SETFILTER("Document No.",'%1',lieferscheinnr);
                "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                "Lief-Zeile".SETFILTER(Quantity,'>%1',0);
                IF "Lief-Zeile".FINDFIRST THEN
                  BEGIN
                    REPEAT
                      Artikel.GET("Lief-Zeile"."No.");
                      IF Artikel."Software Upgrade Protection" = FALSE THEN
                        BEGIN
                          TempChampRelaDoc.RESET;
                          TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                          TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                          TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                          TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"Lief-Zeile"."Document No.");
                          TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"Lief-Zeile"."Line No.");
                          IF NOT TempChampRelaDoc.FINDFIRST THEN
                            BEGIN
                              ChampRelaDoc.INIT;
                              ChampRelaDoc.Art := Art :: "SUP-AU";
                              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                              ChampRelaDoc."Zeilennr." := v_zeilennr;
                              ChampRelaDoc."Belegnr." := "Lief-Zeile"."Document No.";
                              ChampRelaDoc."Belegzeilennr." := "Lief-Zeile"."Line No.";
                              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                              ChampRelaDoc.VALIDATE("Geräte Artikelnr.","Lief-Zeile"."No.");
                              ChampRelaDoc."Menge kalk." := "Lief-Zeile".Quantity;
                              ChampRelaDoc."Nachträgliche Service Order" := TRUE;
                              //Laufzeit vorbelegen
                              Opt.RESET;
                              Opt.SETFILTER("Tabellen ID",'%1',50024);
                              Opt.SETFILTER("Feld ID",'%1',44);
                              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                              IF Opt.FINDFIRST THEN
                                ChampRelaDoc.Laufzeit := Opt.Code;
                              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                              ChampRelaDoc.Basisgerät);
                              ChampRelaDoc.INSERT(TRUE);
                            END;
                        END;
                    UNTIL "Lief-Zeile".NEXT = 0;
                    CurrForm.UPDATE;
                  END
                ELSE
                  ERROR(Text000);
              END
            ELSE
              BEGIN
                ////CHAMPS bezieht sich auf einen Wartungsvertrag
                IF (wartungsnr <> '') THEN
                  BEGIN
                    ServicePos.RESET;
                    ServicePos.SETFILTER(ServicePos.Art,'%1',ServicePos.Art :: Service);
                    ServicePos.SETFILTER(ServicePos."Wartungsvertragsnr.",'%1',wartungsnr);
                    //ServicePos.SETFILTER(Verlängerung,'%1',FALSE);
                    ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
                    IF ServicePos.FINDFIRST THEN
                      BEGIN
                        REPEAT
                          TempChampRelaDoc.RESET;
                          TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                          TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                          TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                          TempChampRelaDoc.SETFILTER("Belegnr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                          TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                          IF NOT TempChampRelaDoc.FINDFIRST THEN
                            BEGIN
                              ChampRelaDoc.INIT;
                              ChampRelaDoc.Art := Art :: "SUP-AU";
                              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                              ChampRelaDoc."Zeilennr." := v_zeilennr;
                              ChampRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                              ChampRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                              ChampRelaDoc.VALIDATE("Geräte Artikelnr.",ServicePos."Artikelnr.");
                              ChampRelaDoc."Menge kalk." := ServicePos.Menge;
                              ChampRelaDoc."Vertragsnr. übernommen" := wartungsnr;
                              ChampRelaDoc."Nachträgliche Service Order" := TRUE;
                              ChampRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                              //Laufzeit vorbelegen
                              Opt.RESET;
                              Opt.SETFILTER("Tabellen ID",'%1',50024);
                              Opt.SETFILTER("Feld ID",'%1',44);
                              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                              IF Opt.FINDFIRST THEN
                                ChampRelaDoc.Laufzeit := Opt.Code;
                              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                              ChampRelaDoc.Basisgerät);
                              ChampRelaDoc.INSERT(TRUE);
                            END
                          ELSE
                            BEGIN
                              VergleichSystemPos.RESET;
                              VergleichSystemPos.SETFILTER(Art,'%1',VergleichSystemPos.Art :: System);
                              VergleichSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                              VergleichSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
                              VergleichSystemPos.SETFILTER("Nr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                              VergleichSystemPos.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                              IF VergleichSystemPos.FINDFIRST THEN
                                BEGIN
                                  menge_gesamt := 0;
                                  REPEAT
                                    menge_gesamt := menge_gesamt + VergleichSystemPos.Menge;
                                  UNTIL VergleichSystemPos.NEXT = 0;
                                  IF TempChampRelaDoc."Menge kalk." < menge_gesamt THEN
                                    BEGIN
                                      TempChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk." + ServicePos.Menge;
                                      TempChampRelaDoc.MODIFY;
                                    END;
                                END;
                            END;
                        UNTIL ServicePos.NEXT = 0;
                        CurrForm.UPDATE;
                      END
                    ELSE
                      ERROR(Text000);
                  END
                ELSE
                  ERROR(Text000);
              END;
          END;
      END
    ELSE
      ERROR(Text000);
  END;

HoleArtikelPos_TEMP()
IF lieferscheinnr = '' THEN ERROR('TEMP Funktion nur mit Lieferscheinnr. ausführbar.');

IF (lieferscheinnr <> '') AND (wartungsnr <> '') THEN
  ERROR(Text012);

IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN
        IF (lieferscheinnr = '') AND (wartungsnr = '') THEN
          BEGIN
            "AU-Zeile".RESET;
            "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
            "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
            IF "AU-Zeile".FINDFIRST THEN

              ////CHAMPS bezieht sich auf Auftrag
              BEGIN
                REPEAT
                  Artikel.GET("AU-Zeile"."No.");
                  IF Artikel."Software Upgrade Protection" = FALSE THEN
                    BEGIN
                      TempChampRelaDoc.RESET;
                      TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                      TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                      TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                      TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                      TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                      IF NOT TempChampRelaDoc.FINDFIRST THEN
                        BEGIN
                          ChampRelaDoc.INIT;
                          ChampRelaDoc.Art := Art :: "SUP-AU";
                          ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                          ChampRelaDoc."Zeilennr." := v_zeilennr;
                          ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                          ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                          ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                          ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                          ChampRelaDoc.VALIDATE("Geräte Artikelnr.","AU-Zeile"."No.");
                          ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                          //Laufzeit vorbelegen
                          Opt.RESET;
                          Opt.SETFILTER("Tabellen ID",'%1',50024);
                          Opt.SETFILTER("Feld ID",'%1',44);
                          Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                          IF Opt.FINDFIRST THEN
                            ChampRelaDoc.Laufzeit := Opt.Code;
                          ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                          ChampRelaDoc.Basisgerät);
                          ChampRelaDoc.INSERT(TRUE);
                        END;
                    END;
                UNTIL "AU-Zeile".NEXT = 0;
                CurrForm.UPDATE;
              END;
          END
        ELSE
          BEGIN
            ////CHAMPS bezieht sich auf Lieferschein
            IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN
              BEGIN
                "Lief-Zeile".RESET;
                "Lief-Zeile".SETFILTER("Document No.",'%1',lieferscheinnr);
                "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                "Lief-Zeile".SETFILTER(Quantity,'>%1',0);
                IF "Lief-Zeile".FINDFIRST THEN
                  BEGIN
                    REPEAT
                      Artikel.GET("Lief-Zeile"."No.");
                      IF Artikel."Software Upgrade Protection" = FALSE THEN
                        BEGIN
                          TempChampRelaDoc.RESET;
                          TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                          TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                          TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                          TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"Lief-Zeile"."Document No.");
                          TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"Lief-Zeile"."Line No.");
                          IF NOT TempChampRelaDoc.FINDFIRST THEN
                            BEGIN
                              ChampRelaDoc.INIT;
                              ChampRelaDoc.Art := Art :: "SUP-AU";
                              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                              ChampRelaDoc."Zeilennr." := v_zeilennr;
                              ChampRelaDoc."Belegnr." := "Lief-Zeile"."Document No.";
                              ChampRelaDoc."Belegzeilennr." := "Lief-Zeile"."Line No.";
                              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                              ChampRelaDoc.VALIDATE("Geräte Artikelnr.","Lief-Zeile"."No.");
                              ChampRelaDoc."Menge kalk." := "Lief-Zeile".Quantity;
                              ChampRelaDoc."Nachträgliche Service Order" := TRUE;
                              //Laufzeit vorbelegen
                              Opt.RESET;
                              Opt.SETFILTER("Tabellen ID",'%1',50024);
                              Opt.SETFILTER("Feld ID",'%1',44);
                              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                              IF Opt.FINDFIRST THEN
                                ChampRelaDoc.Laufzeit := Opt.Code;
                              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                              ChampRelaDoc.Basisgerät);
                              ChampRelaDoc.INSERT(TRUE);
                            END;
                        END;
                    UNTIL "Lief-Zeile".NEXT = 0;
                    CurrForm.UPDATE;
                  END
                ELSE
                  ERROR(Text000);
              END
            ELSE
              BEGIN
                ////CHAMPS bezieht sich auf einen Wartungsvertrag
                IF (wartungsnr <> '') THEN
                  BEGIN
                    ServicePos.RESET;
                    ServicePos.SETFILTER(ServicePos.Art,'%1',ServicePos.Art :: Service);
                    ServicePos.SETFILTER(ServicePos."Wartungsvertragsnr.",'%1',wartungsnr);
                    //ServicePos.SETFILTER(Verlängerung,'%1',FALSE);
                    ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
                    IF ServicePos.FINDFIRST THEN
                      BEGIN
                        REPEAT
                          TempChampRelaDoc.RESET;
                          TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                          TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                          TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                          TempChampRelaDoc.SETFILTER("Belegnr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                          TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                          IF NOT TempChampRelaDoc.FINDFIRST THEN
                            BEGIN
                              ChampRelaDoc.INIT;
                              ChampRelaDoc.Art := Art :: "SUP-AU";
                              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                              ChampRelaDoc."Zeilennr." := v_zeilennr;
                              ChampRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                              ChampRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                              ChampRelaDoc.VALIDATE("Geräte Artikelnr.",ServicePos."Artikelnr.");
                              ChampRelaDoc.VALIDATE("Menge kalk.",ServicePos.Menge);
                              CurrForm."Menge kalk.".UPDATE;
                              ChampRelaDoc."Vertragsnr. übernommen" := wartungsnr;
                              ChampRelaDoc."Nachträgliche Service Order" := TRUE;
                              ChampRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                              //Laufzeit vorbelegen
                              Opt.RESET;
                              Opt.SETFILTER("Tabellen ID",'%1',50024);
                              Opt.SETFILTER("Feld ID",'%1',44);
                              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                              IF Opt.FINDFIRST THEN
                                ChampRelaDoc.Laufzeit := Opt.Code;
                              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                              ChampRelaDoc.Basisgerät);
                              ChampRelaDoc.INSERT(TRUE);
                            END
                          ELSE
                            BEGIN
                              VergleichSystemPos.RESET;
                              VergleichSystemPos.SETFILTER(Art,'%1',VergleichSystemPos.Art :: System);
                              VergleichSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                              VergleichSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
                              VergleichSystemPos.SETFILTER("Nr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                              VergleichSystemPos.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                              IF VergleichSystemPos.FINDFIRST THEN
                                BEGIN
                                  menge_gesamt := 0;
                                  REPEAT
                                    menge_gesamt := menge_gesamt + VergleichSystemPos.Menge;
                                  UNTIL VergleichSystemPos.NEXT = 0;
                                  IF TempChampRelaDoc."Menge kalk." < menge_gesamt THEN
                                    BEGIN
                                      TempChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk." + ServicePos.Menge;
                                      TempChampRelaDoc.MODIFY;
                                    END;
                                END;
                            END;
                        UNTIL ServicePos.NEXT = 0;
                        CurrForm.UPDATE;
                      END
                    ELSE
                      ERROR(Text000);
                  END
                ELSE
                  ERROR(Text000);
              END;
          END;
      END
    ELSE
      ERROR(Text000);
  END;

LogikÜbernahme()
IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(zeilennr,GETFILTER("Zeilennr."));

    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER(Type,'%1',"AU-Zeile_Champ".Type :: Item);
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN
        IF (lieferscheinnr <> '') THEN ERROR(Text008);

        //Finde die logisch nächst gelegene Position eines Champ Artikels, vor dieser Position
        zeilennr_champ := 0;
        zeilennr_gerät := 0;

        "AU-Zeile".RESET;
        "AU-Zeile".SETFILTER(Type,'%1',"AU-Zeile".Type :: Item);
        "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
        "AU-Zeile".SETFILTER("Line No.",'<%1',"AU-Zeile_Champ"."Line No.");
        "AU-Zeile".ASCENDING(FALSE);
        IF "AU-Zeile".FINDFIRST THEN
          REPEAT
            IF Artikel.GET("AU-Zeile"."No.") THEN
              BEGIN

                IF (Artikel."Software Upgrade Protection" = TRUE) AND (zeilennr_gerät <> 0) THEN
                  zeilennr_champ := "AU-Zeile"."Line No.";

                IF Artikel."Software Upgrade Protection" = FALSE THEN
                  zeilennr_gerät := "AU-Zeile"."Line No.";

              END;
          UNTIL ("AU-Zeile".NEXT = 0) OR ((zeilennr_gerät <> 0) AND (zeilennr_champ <> 0));

        "AU-Zeile".RESET;
        "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
        "AU-Zeile".SETFILTER("Line No.",'%1..%2',zeilennr_champ,"AU-Zeile_Champ"."Line No.");
        "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
        IF "AU-Zeile".FINDFIRST THEN
          ////CHAMPS bezieht sich auf Auftrag
          BEGIN
            REPEAT
              Artikel.GET("AU-Zeile"."No.");
              IF Artikel."Software Upgrade Protection" = FALSE THEN
                BEGIN
                  TempChampRelaDoc.RESET;
                  TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                  TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                  TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',zeilennr);
                  TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                  TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                  IF NOT TempChampRelaDoc.FINDFIRST THEN
                    BEGIN
                      ChampRelaDoc.INIT;
                      ChampRelaDoc.Art := Art :: "SUP-AU";
                      ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                      ChampRelaDoc."Zeilennr." := zeilennr;
                      ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                      ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                      ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                      ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                      ChampRelaDoc.VALIDATE("Geräte Artikelnr.","AU-Zeile"."No.");
                      ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                      //Laufzeit vorbelegen
                      Opt.RESET;
                      Opt.SETFILTER("Tabellen ID",'%1',50024);
                      Opt.SETFILTER("Feld ID",'%1',44);
                      Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                      IF Opt.FINDFIRST THEN
                        ChampRelaDoc.Laufzeit := Opt.Code;
                      ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                      ChampRelaDoc.Basisgerät);
                      ChampRelaDoc.INSERT(TRUE);
                    END;
                END;
            UNTIL "AU-Zeile".NEXT = 0;
            CurrForm.UPDATE;
          END;
      END;
  END;

AnlageFremderwerbsPos()
IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN
        ChampRelaDoc.INIT;
        ChampRelaDoc.Art := Art :: "SUP-AU";
        ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
        ChampRelaDoc."Zeilennr." := v_zeilennr;
        ChampRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
        PrüfeChampRelaDoc.RESET;
        PrüfeChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art);
        PrüfeChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile_Champ"."Document No.");
        PrüfeChampRelaDoc.SETFILTER("Zeilennr.",'%1',ChampRelaDoc."Zeilennr.");
        PrüfeChampRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
        IF NOT PrüfeChampRelaDoc.FINDLAST THEN
          ChampRelaDoc."Belegzeilennr." := 11111
        ELSE
          ChampRelaDoc."Belegzeilennr." := PrüfeChampRelaDoc."Belegzeilennr." + 11111;
        ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
        ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
        ChampRelaDoc.Fremderwerb := TRUE;
        ChampRelaDoc."Nachträgliche Service Order" := TRUE;
        //Laufzeit vorbelegen
        Opt.RESET;
        Opt.SETFILTER("Tabellen ID",'%1',50024);
        Opt.SETFILTER("Feld ID",'%1',44);
        Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
        IF Opt.FINDFIRST THEN
          ChampRelaDoc.Laufzeit := Opt.Code;
        ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
        ChampRelaDoc.Basisgerät);
        ChampRelaDoc.INSERT(TRUE);
      END;
  END;

AnlageFremderwerb_TEMP()
IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN
        ChampRelaDoc.INIT;
        ChampRelaDoc.Art := Art :: "SUP-AU";
        ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
        ChampRelaDoc."Zeilennr." := v_zeilennr;
        ChampRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
        PrüfeChampRelaDoc.RESET;
        PrüfeChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art);
        PrüfeChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile_Champ"."Document No.");
        PrüfeChampRelaDoc.SETFILTER("Zeilennr.",'%1',ChampRelaDoc."Zeilennr.");
        PrüfeChampRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
        IF NOT PrüfeChampRelaDoc.FINDLAST THEN
          ChampRelaDoc."Belegzeilennr." := 11111
        ELSE
          ChampRelaDoc."Belegzeilennr." := PrüfeChampRelaDoc."Belegzeilennr." + 11111;
        ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
        ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
        ChampRelaDoc.Fremderwerb := TRUE;
        ChampRelaDoc."Nachträgliche Service Order" := TRUE;
        //Laufzeit vorbelegen
        Opt.RESET;
        Opt.SETFILTER("Tabellen ID",'%1',50024);
        Opt.SETFILTER("Feld ID",'%1',44);
        Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
        IF Opt.FINDFIRST THEN
          ChampRelaDoc.Laufzeit := Opt.Code;
        ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
        ChampRelaDoc.Basisgerät);
        ChampRelaDoc.INSERT(TRUE);
      END;
  END;

PreiseKalkulieren()
IF Rec.HASFILTER THEN
  BEGIN

    //Verbindet zur Belegzeile des zu kalkulierenden Champ Artikels
    Belegzeile.RESET;
    Belegzeile.SETFILTER("Document No.",'%1',"Nr.");
    Belegzeile.SETFILTER("Line No.",'%1',"Zeilennr.");
    Belegzeile.FINDFIRST;

    //ACTS und ACHAT Prüfung
    Artikel.GET(Belegzeile."No.");
    IF (Artikel.Artikelgruppe <> 'ACTS') OR (Artikel.Artikelgruppe <> 'ACTS/ACHAT')
    OR (Artikel.Artikelgruppe <> 'ACHAT') THEN
      ACTS := FALSE
    ELSE
      ACTS := TRUE;

    //ACHAT
    IF (Artikel.Artikelgruppe = 'ACHAT') AND (kalk_prozentsatz < 50) THEN
      ERROR(Text018,Artikel.Artikelgruppe);

    //Verhindert jegliche Ausführungen oder Änderungen, solange noch kein Basisgerät hinterlegt ist
    ChampRelaDoc.RESET;
    ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
    ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
    ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
    ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
    ChampRelaDoc.SETFILTER(Basisgerät,'%1',TRUE);
    IF NOT ChampRelaDoc.FINDFIRST THEN
      BEGIN
        IF CONFIRM(Text010,FALSE) THEN
          BEGIN
          END
        ELSE
          EXIT;
      END
    ELSE
      IF ChampRelaDoc.COUNT > 1 THEN
        ERROR(Text016);

    champ_price_au := 0;
    champ_dc_au := 0;
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

    ChampRelaDoc.RESET;
    ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
    ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
    ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
    IF ChampRelaDoc.FINDFIRST THEN
      REPEAT
        IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",ChampRelaDoc.Basisgerät) = FALSE)
        AND (ChampRelaDoc."Menge kalk." > 1) THEN
          ERROR(Text001);

        ChampRelaDoc.TESTFIELD(Laufzeit);
        ChampRelaDoc.TESTFIELD("Menge kalk.");

        IF ChampRelaDoc.Fremderwerb = FALSE THEN
          BEGIN
            "AU-Zeile".RESET;
            "AU-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Belegnr.");
            "AU-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Belegzeilennr.");
            "AU-Zeile".SETFILTER("AU-Zeile"."Outstanding Quantity",'>%1',0);
            "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
            IF "AU-Zeile".FINDFIRST THEN
              //CHAMPS bezieht sich auf Auftrag
              BEGIN
                EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
                champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
                ChampRelaDoc."Geräte Artikelnr.",v_laufzeit,ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisgerät,FALSE,kalk_prozentsatz);
                ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
                ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
                champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
                champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",
                v_laufzeit,FALSE,Belegzeile.Einkaufswährungscode);
                champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
                ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
                ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
                ChampRelaDoc."Service DC Währungscode" := EKWährungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
                ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Geräte Artikelnr.",WORKDATE,
                "AU-Zeile"."Currency Code","AU-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.",ACTS);
                ChampRelaDoc."ACTS Rabatt" := kalk_prozentsatz;
                ChampRelaDoc.MODIFY;
              END
            ELSE
              //CHAMPS bezieht sich auf Lieferschein
              BEGIN
                "Lief-Zeile".RESET;
                "Lief-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Belegnr.");
                "Lief-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Belegzeilennr.");
                "Lief-Zeile".SETFILTER("Lief-Zeile".Quantity,'>%1',0);
                "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                IF "Lief-Zeile".FINDFIRST THEN
                  BEGIN
                    EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
                    //Funktion im Lieferschein einbauen???
                    champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
                    ChampRelaDoc."Geräte Artikelnr.",v_laufzeit,ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                    ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisgerät,FALSE,kalk_prozentsatz);
                    ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
                    ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
                    champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
                    champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",
                    v_laufzeit,FALSE,Belegzeile.Einkaufswährungscode);
                    champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
                    ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
                    ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
                    ChampRelaDoc."Service DC Währungscode" := EKWährungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
                    ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Geräte Artikelnr.",WORKDATE,
                    "Lief-Zeile"."Currency Code","Lief-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.",ACTS);
                    ChampRelaDoc."ACTS Rabatt" := kalk_prozentsatz;
                    ChampRelaDoc.MODIFY;
                  END;
              END;
          END
        ELSE
          //CHAMPS bezieht sich auf Pseudo Positionen
          BEGIN
            EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
            champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
            ChampRelaDoc."Geräte Artikelnr.",v_laufzeit,ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.",
            ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisgerät,FALSE,kalk_prozentsatz);
            ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
            ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
            champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
            champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",
            v_laufzeit,FALSE,Belegzeile.Einkaufswährungscode);
            champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
            ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
            ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
            ChampRelaDoc."Service DC Währungscode" := EKWährungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
            ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Geräte Artikelnr.",WORKDATE,
            "AU-Zeile"."Currency Code","AU-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.",ACTS);
            ChampRelaDoc."ACTS Rabatt" := kalk_prozentsatz;
            ChampRelaDoc.MODIFY;
          END;

      UNTIL ChampRelaDoc.NEXT = 0;

      IF champ_price_au <> 0 THEN
        BEGIN
          champ_price_au := ROUND(champ_price_au,1);
          "AU-Zeile".RESET;
          "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile".FINDFIRST THEN
            BEGIN
              IF ("AU-Zeile"."Unit Price" <> champ_price_au) AND ("AU-Zeile"."Unit Price" <> 0) THEN
                IF NOT CONFIRM(Text003,TRUE,Artikel.Artikelgruppe) THEN
                  EXIT;

              "AU-Zeile".VALIDATE("AU-Zeile"."DC-Preis (EKW)",champ_dc_au);
              "AU-Zeile".VALIDATE("Unit Price",champ_price_au);
              "AU-Zeile".MODIFY;

              MESSAGE(Text004,Artikel.Artikelgruppe,champ_price_au,"AU-Zeile".FIELDCAPTION("DC-Preis (EKW)"),
                      "AU-Zeile"."DC-Preis (EKW)");
           END;
        END
      ELSE
        MESSAGE(Text005,Artikel.Artikelgruppe);
  END;

EKWährungholen(Belegnr : Code[20];Belegzeilennr : Integer) : Code[20]
Belegzeile.RESET;
Belegzeile.SETFILTER("Document No.",'%1',Belegnr);
Belegzeile.SETFILTER("Line No.",'%1',Belegzeilennr);
IF Belegzeile.FINDFIRST THEN
  EXIT(Belegzeile.Einkaufswährungscode)
ELSE
  EXIT('');

TempSeriennrhinzu()
TESTFIELD("Nr.");
TESTFIELD("Zeilennr.");
TESTFIELD(Art,Art::"SUP-AU");
TESTFIELD("Debitornr.");
TESTFIELD("Menge kalk.");
TESTFIELD("Geräte Artikelnr.");

//***************************************************************************************************
//                          Es muss ein System Basisgeräte vorhanden sein
//              Ausnahme: Alle Champ Kalkulationszeilen haben eine Wartungsvertragsnr.
//***************************************************************************************************

ChampRelaDoc.RESET;
ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art :: "SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
ChampRelaDoc.SETFILTER(Basisgerät,'%1',TRUE);
IF NOT ChampRelaDoc.FINDFIRST THEN
  BEGIN
    ChampRelaDoc.SETFILTER(Basisgerät,'%1|%2',TRUE,FALSE);
    IF ChampRelaDoc.FINDFIRST THEN
      REPEAT
        IF ChampRelaDoc."Wartungsvertragsnr." = '' THEN
          ERROR(Text010);
      UNTIL ChampRelaDoc.NEXT = 0;
  END;

ChampRelaDoc.RESET;
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
ChampRelaDoc.SETFILTER("Nachträgliche Service Order",'%1',TRUE);
IF ChampRelaDoc.FINDFIRST THEN
  REPEAT
    IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",ChampRelaDoc.Basisgerät) = FALSE)
    AND (ChampRelaDoc."Menge kalk." > 1)  THEN
      ERROR(Text001);
    ÖffneLizenzTab.RESET;
    ÖffneLizenzTab.ACSLizenzenHinzu(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                   ChampRelaDoc."Menge kalk.",ChampRelaDoc."Debitornr.",ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
  UNTIL ChampRelaDoc.NEXT = 0;

LizenzTab.RESET;
LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Temporär);
LizenzTab.SETFILTER("Auftragsnr.",'%1',"Nr.");
LizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Zeilennr.");
IF LizenzTab.FINDFIRST THEN
  FORM.RUN(50027,LizenzTab);

TempSeriennrhinzu_TEMP()
TESTFIELD("Nr.");
TESTFIELD("Zeilennr.");
TESTFIELD(Art,Art::"SUP-AU");
TESTFIELD("Debitornr.");
TESTFIELD("Menge kalk.");
TESTFIELD("Geräte Artikelnr.");

//***************************************************************************************************
//                          Es muss ein System Basisgeräte vorhanden sein
//              Ausnahme: Alle Champ Kalkulationszeilen haben eine Wartungsvertragsnr.
//***************************************************************************************************

ChampRelaDoc.RESET;
ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art :: "SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
ChampRelaDoc.SETFILTER(Basisgerät,'%1',TRUE);
IF NOT ChampRelaDoc.FINDFIRST THEN
  BEGIN
    ChampRelaDoc.SETFILTER(Basisgerät,'%1|%2',TRUE,FALSE);
    IF ChampRelaDoc.FINDFIRST THEN
      REPEAT
        IF ChampRelaDoc."Wartungsvertragsnr." = '' THEN
          ERROR(Text010);
      UNTIL ChampRelaDoc.NEXT = 0;
  END;

ChampRelaDoc.RESET;
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
ChampRelaDoc.SETFILTER("Nachträgliche Service Order",'%1',TRUE);
IF ChampRelaDoc.FINDFIRST THEN
  REPEAT
    IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Geräte Artikelnr.",ChampRelaDoc.Basisgerät) = FALSE)
    AND (ChampRelaDoc."Menge kalk." > 1)  THEN
      ERROR(Text001);
    ÖffneLizenzTab.RESET;
    ÖffneLizenzTab.ACSLizenzenHinzu(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                   ChampRelaDoc."Menge kalk.",ChampRelaDoc."Debitornr.",ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
  UNTIL ChampRelaDoc.NEXT = 0;

LizenzTab.RESET;
LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Temporär);
LizenzTab.SETFILTER("Auftragsnr.",'%1',"Nr.");
LizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Zeilennr.");
IF LizenzTab.FINDFIRST THEN
  FORM.RUN(50027,LizenzTab);

KalkFehlerPrüfen()
hinweistext := '';
kalk_preis_gesamt := 0;

AktBeleg.RESET;
AktBeleg.SETFILTER("No.",'%1',"Nr.");
IF NOT AktBeleg.FINDFIRST THEN
  EXIT;

ChampRelaDoc.RESET;
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
IF ChampRelaDoc.FINDFIRST THEN
  REPEAT

    //Prüft, ob die Angaben der Kalkulation bgzl. Geräte Artikelnr. noch stimmig zum Beleg sind
    IF (ChampRelaDoc."Nachträgliche Service Order" = FALSE) AND (ChampRelaDoc.Fremderwerb = FALSE) THEN
      BEGIN
        "AU-Zeile".RESET;
        "AU-Zeile".SETFILTER(Type,'%1',"AU-Zeile".Type :: Item);
        "AU-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Belegnr.");
        "AU-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Belegzeilennr.");
        IF "AU-Zeile".FINDFIRST THEN
          BEGIN
            IF "AU-Zeile"."No." <> ChampRelaDoc."Geräte Artikelnr." THEN
              hinweistext := 'Die Artikelnr. '+ ChampRelaDoc."Geräte Artikelnr." + ' entspricht nicht mehr der Angabe '+
                             'aus ' + ChampRelaDoc."Belegnr." + ', ' + FORMAT(ChampRelaDoc."Belegzeilennr.");
          END
        ELSE
          hinweistext := 'Die Angabe ' + ChampRelaDoc."Geräte Artikelnr." + ' in ' + ChampRelaDoc."Belegnr." + ', ' +
          FORMAT(ChampRelaDoc."Belegzeilennr.") + ' existiert nicht mehr im Beleg.';
      END;

    //Prüft, ob noch Seriennr. ausgewählt werden müssen
    IF ChampRelaDoc."Nachträgliche Service Order" = TRUE THEN
      BEGIN
        TempLizenzTab.RESET;
        TempLizenzTab.SETFILTER(Art,'%1',TempLizenzTab.Art :: Temporär);
        TempLizenzTab.SETFILTER("Auftragsnr.",'%1',ChampRelaDoc."Nr.");
        TempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',ChampRelaDoc."Zeilennr.");
        TempLizenzTab.SETFILTER("Nr.",'%1',ChampRelaDoc."Belegnr.");
        TempLizenzTab.SETFILTER("Belegzeilennr.",'%1',ChampRelaDoc."Belegzeilennr.");
        TempLizenzTab.SETFILTER("Artikelnr.",'%1',ChampRelaDoc."Geräte Artikelnr.");
        TempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
        IF NOT TempLizenzTab.FINDFIRST THEN
          BEGIN
            hinweistext := 'Für Artikelnr. ' + ChampRelaDoc."Geräte Artikelnr." + ' wurden noch nicht genügend ' +
                           'Seriennr. ausgewählt.';
          END
        ELSE
          BEGIN
            menge_auswahl := 0;
            REPEAT
              menge_auswahl := menge_auswahl + TempLizenzTab.Menge;
            UNTIL TempLizenzTab.NEXT = 0;
            IF ChampRelaDoc."Menge kalk." > menge_auswahl THEN
              hinweistext := 'Für Artikelnr. ' + ChampRelaDoc."Geräte Artikelnr." + ' wurden noch nicht genügend ' +
                             'Seriennr. ausgewählt.';
          END;
      END;

    //Prüft, ob eine Zeile einen Champ Zeilenbetrag von 0 ausweist
    IF ChampRelaDoc."Service VK-Preis Zeilenbetrag" = 0 THEN
      hinweistext := 'Der ' + ChampRelaDoc.FIELDCAPTION("Service VK-Preis Zeilenbetrag")
                      + ' für ' + ChampRelaDoc."Geräte Artikelnr." + ' beträgt 0.';

    kalk_preis_gesamt := kalk_preis_gesamt + ChampRelaDoc."Service VK-Preis Zeilenbetrag";

  UNTIL ChampRelaDoc.NEXT = 0;

//Prüft, ob der Beleg VK-Preis noch mit dem Kalkulations Gesamtpreis übereinstimmt
"AU-Zeile".RESET;
"AU-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Nr.");
"AU-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Zeilennr.");
IF "AU-Zeile".FINDFIRST THEN
  IF ROUND(kalk_preis_gesamt,1) <> "AU-Zeile"."Unit Price" THEN
    hinweistext := 'Der Vk-Preis im Beleg stimmt nicht mit dem Gesamtpreis der Kalkulation überein.';

//Warnung,wenn nur Module hinterlegt sind und die Vertragsnr. leer bleiben
ChampRelaDoc.RESET;
ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
ChampRelaDoc.SETRANGE(Art,ChampRelaDoc.Art::"SUP-AU");
ChampRelaDoc.SETRANGE("Nr.","Nr.");
ChampRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
ChampRelaDoc.SETRANGE(Basisgerät,TRUE);
IF NOT ChampRelaDoc.FINDFIRST THEN
  BEGIN
    ChampRelaDoc.SETRANGE(Basisgerät);
    ChampRelaDoc.SETRANGE("Wartungsvertragsnr.",'');
    IF ChampRelaDoc.FINDFIRST THEN
      hinweistext := 'Bitte füllen Sie die Wartungsvertragsnr. aus.';
  END;

MengeKalkPrüfen()
IF Fremderwerb = TRUE THEN
  EXIT;

"AU-Zeile".RESET;
"AU-Zeile".SETFILTER("Document No.",'%1',"Belegnr.");
"AU-Zeile".SETFILTER("Line No.",'%1',"Belegzeilennr.");
IF "AU-Zeile".FINDFIRST THEN
  BEGIN
    IF "Menge kalk." > "AU-Zeile".Quantity THEN
      ERROR(Text006,FIELDCAPTION("Menge kalk."),"AU-Zeile".Quantity);
  END
ELSE
  BEGIN
    "Lief-Zeile".RESET;
    "Lief-Zeile".SETFILTER("Document No.",'%1',"Belegnr.");
    "Lief-Zeile".SETFILTER("Line No.",'%1',"Belegzeilennr.");
    IF "Lief-Zeile".FINDFIRST THEN
      BEGIN
        IF "Menge kalk." > "Lief-Zeile".Quantity THEN
          ERROR(Text006,FIELDCAPTION("Menge kalk."),"Lief-Zeile".Quantity);
      END
    ELSE
      ERROR('Error');
  END;

AusführungPrüfen()
AktBeleg.RESET;
AktBeleg.SETFILTER("No.",'%1',"Nr.");
IF NOT AktBeleg.FINDFIRST THEN
  ERROR(Text007);

VorgängerKopieren()
IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(zeilennr,GETFILTER("Zeilennr."));

    "AU-Zeile_Champ".RESET;
    "AU-Zeile_Champ".SETFILTER(Type,'%1',"AU-Zeile_Champ".Type :: Item);
    "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile_Champ".SETFILTER("Line No.",'%1',zeilennr);
    IF "AU-Zeile_Champ".FINDFIRST THEN
      BEGIN

        //Finde die logisch nächst gelegene Position eines Champ Artikels, vor dieser Position
        zeilennr_champ := 0;

        "AU-Zeile".RESET;
        "AU-Zeile".SETFILTER(Type,'%1',"AU-Zeile".Type :: Item);
        "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
        "AU-Zeile".SETFILTER("Line No.",'<%1',zeilennr);
        "AU-Zeile".ASCENDING(FALSE);
        IF "AU-Zeile".FINDFIRST THEN
          BEGIN
            REPEAT
              IF Artikel.GET("AU-Zeile"."No.") THEN
                BEGIN

                  IF (Artikel."Software Upgrade Protection" = TRUE) THEN
                    zeilennr_champ := "AU-Zeile"."Line No.";

                END;
            UNTIL ("AU-Zeile".NEXT = 0) OR (zeilennr_champ <> 0);
          END;

          IF zeilennr_champ = 0 THEN EXIT;

          TempChampRelaDoc.RESET;
          TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
          TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
          TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',zeilennr_champ);
          //TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
          //TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
          IF TempChampRelaDoc.FINDFIRST THEN
            BEGIN
              REPEAT
                ChampRelaDoc.INIT;
                ChampRelaDoc.Art := Art :: "SUP-AU";
                ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                ChampRelaDoc."Zeilennr." := zeilennr;
                ChampRelaDoc."Belegnr." := TempChampRelaDoc."Belegnr.";
                ChampRelaDoc."Belegzeilennr." := TempChampRelaDoc."Belegzeilennr.";
                ChampRelaDoc."Debitornr." := TempChampRelaDoc."Debitornr.";
                ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                ChampRelaDoc.VALIDATE("Geräte Artikelnr.",TempChampRelaDoc."Geräte Artikelnr.");
                ChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk.";
                ChampRelaDoc."Vertragsnr. übernommen" := TempChampRelaDoc."Vertragsnr. übernommen";
                ChampRelaDoc."Abw. Geräte Artikelnr." := TempChampRelaDoc."Abw. Geräte Artikelnr.";
                ChampRelaDoc."Nachträgliche Service Order" := TempChampRelaDoc."Nachträgliche Service Order";
                ChampRelaDoc.Fremderwerb := TempChampRelaDoc.Fremderwerb;
                //Laufzeit vorbelegen
                Opt.RESET;
                Opt.SETFILTER("Tabellen ID",'%1',50024);
                Opt.SETFILTER("Feld ID",'%1',44);
                Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                IF Opt.FINDFIRST THEN
                  ChampRelaDoc.Laufzeit := Opt.Code;
                ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                ChampRelaDoc.Basisgerät);
                ChampRelaDoc.INSERT(TRUE);
              UNTIL TempChampRelaDoc.NEXT = 0;
            END;
          CurrForm.UPDATE;

     END;
  END;

InfosExcelExport()
// Definiert die zu importierende Datei
IF (wartungsnr = '') AND ("Vertragsnr. übernommen" = '') THEN
  ERROR(Text013,Wartungsvertrag.FIELDCAPTION("Wartungsvertragsnr."));

CLEAR(Excel);

CREATE (Excel);
Book := Excel.Workbooks.Add(-4167);           //legt neue datei in excel an
Sheet := Excel.ActiveSheet;                   //definiert aktives worksheet

//array 1 = Lieferschein Nr.
//array 2 = Vertragsablaufdatum
//array 3 = Geräte Artikelnr.

//Feste Werte
Sheet.Range('A1').Value := 'Serviceverlängerung für folgendes System:';
Sheet.Range('A2').Value := 'Lieferscheinnr.: ';
Sheet.Range('A3').Value := 'Ende der Vertragslaufzeit: ';
Wartungsvertrag.GET(wartungsnr);
IF Wartungsvertrag.Endkunde = '' THEN
  j := '6'
ELSE
  j := '7';


ChampRelaDoc.RESET;
ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
ChampRelaDoc.SETFILTER(Fremderwerb,'%1',FALSE);
IF ChampRelaDoc.FINDFIRST THEN
  REPEAT

    ServicePos.RESET;
    ServicePos.SETFILTER(Art,'%1',ServicePos.Art :: Service);
    IF wartungsnr <> '' THEN
      ServicePos.SETFILTER("Wartungsvertragsnr.",wartungsnr)
    ELSE
      ServicePos.SETFILTER("Wartungsvertragsnr.",'%1',"Vertragsnr. übernommen");
    ServicePos.SETFILTER("Urspr. Lieferscheinnr.",'%1',ChampRelaDoc."Belegnr.");
    ServicePos.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',ChampRelaDoc."Belegzeilennr.");
    ServicePos.SETFILTER(Lizenzdatum,'<>%1',0D);
    ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
    IF ServicePos.FINDFIRST THEN
      BEGIN
        REPEAT

          text_array[1] := Sheet.Range('A2').Value;
          IF STRPOS(text_array[1],ServicePos."Urspr. Lieferscheinnr.") = 0 THEN
            IF STRPOS(text_array[1],'LS') > 0 THEN
              text_array[1] := text_array[1] + ', ' + ServicePos."Urspr. Lieferscheinnr."
            ELSE
              text_array[1] := text_array[1] + ServicePos."Urspr. Lieferscheinnr.";
          Sheet.Range('A2').Value := text_array[1];

          k := 1;
          text_array[3] := ChampRelaDoc."Geräte Artikelnr.";

          IF STRLEN(text_array[3]) = STRLEN(ChampRelaDoc."Geräte Artikelnr.") THEN
            BEGIN
              Lieferung.GET(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.");
              text_array[3] := FORMAT(ChampRelaDoc."Menge kalk.") + 'x ' + text_array[3];
            END;
          IF STRPOS(text_array[3],ServicePos."Seriennr.") = 0 THEN
            BEGIN
              IF k = 1 THEN
                text_array[3] := text_array[3] + '  ' + ServicePos."Seriennr."
              ELSE
                text_array[3] := text_array[3] + ', ' + ServicePos."Seriennr.";
              k += 1;
            END;
        UNTIL ServicePos.NEXT = 0;

        Sheet.Range('A'+j).Value := text_array[3];
        j := INCSTR(j);

      END;

    IF ChampRelaDoc.Basisgerät = TRUE THEN
      BEGIN
        PruefeLizenzTab.RESET;
        PruefeLizenzTab.SETFILTER(Art,'%1',PruefeLizenzTab.Art :: Service);
        PruefeLizenzTab.SETFILTER("Artikelnr.",'%1',ChampRelaDoc."Geräte Artikelnr.");
        PruefeLizenzTab.SETFILTER("Seriennr.",'%1',ServicePos."Seriennr.");
        IF PruefeLizenzTab.FINDFIRST THEN
          Wartungsvertrag.GET(PruefeLizenzTab."Wartungsvertragsnr.");
          text_array[2] := Sheet.Range('A3').Value;
          text_array[2] := text_array[2] + FORMAT(Wartungsvertrag.Vertragsablaufdatum);
          Sheet.Range('A3').Value := text_array[2];
          Sheet.Range('A4').Value := 'Vertragsnr.: ' + Wartungsvertrag."Wartungsvertragsnr.";
          IF Wartungsvertrag.Endkunde <> '' THEN
            Sheet.Range('A5').Value := 'Endkunde: ' + Wartungsvertrag.Endkunde;
      END;

  UNTIL ChampRelaDoc.NEXT = 0;

Excel.Visible(TRUE);

CLEAR(Excel);

LöschAllePos()
IF Rec.HASFILTER THEN
  BEGIN
    IF CONFIRM('Wollen Sie diese Kalkulation wirklich löschen?') THEN
      DELETEALL(TRUE);
  END;

AktFormTemplate()
EVALUATE(v_Art,GETFILTER(Art));
CASE v_Art OF
  'SUP-AU' :
    BEGIN
      CurrForm.btn_neue_pos.VISIBLE(FALSE);
      CurrForm.btn_demo_vorlage.VISIBLE(FALSE);
      CurrForm."Service VK-Preis einzeln".VISIBLE(TRUE);
      CurrForm."Service VK-Preis Zeilenbetrag".VISIBLE(TRUE);
      CurrForm."Service DC einzeln".VISIBLE(TRUE);
      CurrForm."Service DC Gesamt".VISIBLE(TRUE);
      CurrForm."Service DC Währungscode".VISIBLE(TRUE);
      CurrForm."Wartungsvertragsnr.".VISIBLE(TRUE);
      CurrForm.Laufzeit.VISIBLE(TRUE);
      CurrForm.Startdatum.VISIBLE(TRUE);
      CurrForm.Ablaufdatum.VISIBLE(TRUE);
      CurrForm."Vertragsnr. übernommen".VISIBLE(TRUE);
      CurrForm."MSRP Service".VISIBLE(TRUE);
    END;
  'SPL-AU' :
    BEGIN
      CurrForm.btn_auswahl_sn.VISIBLE(FALSE);
      CurrForm.label_hinweistext.VISIBLE(FALSE);
      CurrForm.btn_alle_pos_holen.VISIBLE(FALSE);
      CurrForm.btn_preise_berechnen.VISIBLE(FALSE);
      CurrForm.btn_auswahl_sn.VISIBLE(FALSE);
      CurrForm.btn_extra_funktionen.VISIBLE(FALSE);
      CurrForm.btn_exportto_excel.VISIBLE(FALSE);
      CurrForm.label_hinweistext.VISIBLE(FALSE);
      CurrForm.label_hinweis_lieferschein.VISIBLE(FALSE);
      CurrForm.txtbox_lieferscheinnr.VISIBLE(FALSE);
      CurrForm.txtbox_vertragsnr.VISIBLE(FALSE);
      CurrForm.label_hinweis_verträge.VISIBLE(FALSE);
      CurrForm."Service VK-Preis einzeln".VISIBLE(FALSE);
      CurrForm."Service VK-Preis Zeilenbetrag".VISIBLE(FALSE);
      CurrForm."Service DC einzeln".VISIBLE(FALSE);
      CurrForm."Service DC Gesamt".VISIBLE(FALSE);
      CurrForm."Service DC Währungscode".VISIBLE(FALSE);
      CurrForm."Wartungsvertragsnr.".VISIBLE(FALSE);
      CurrForm.Laufzeit.VISIBLE(FALSE);
      CurrForm.Startdatum.VISIBLE(FALSE);
      CurrForm.Ablaufdatum.VISIBLE(FALSE);
      CurrForm."Vertragsnr. übernommen".VISIBLE(FALSE);
      CurrForm."MSRP Service".VISIBLE(FALSE);
    END;
END;

DemoVorlage()
//Splicecom Funktion
EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
"AU-Zeile".RESET;
"AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
"AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
IF "AU-Zeile".FINDFIRST THEN ;

IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
    "AU-Zeile".RESET;
    "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile".FINDFIRST THEN
      BEGIN
        Opt_License.RESET;
        Opt_License.SETCURRENTKEY("Tabellen ID","Feld ID","Lfd.-Nr.");
        Opt_License.SETFILTER("Tabellen ID",'%1',50027);
        Opt_License.SETFILTER("Feld ID",'%1',5);
        Opt_License.SETFILTER(Code,'%1',"AU-Zeile"."No.");
        IF Opt_License.FINDFIRST THEN
          REPEAT
            DemolistRelaDoc.INIT;
            DemolistRelaDoc.Art := Art :: "SPL-AU";
            DemolistRelaDoc."Nr." := "AU-Zeile"."Document No.";
            DemolistRelaDoc."Zeilennr." := v_zeilennr;
            DemolistRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
            PrüfeDemolistRelaDoc.RESET;
            PrüfeDemolistRelaDoc.SETFILTER(Art,'%1',DemolistRelaDoc.Art);
            PrüfeDemolistRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
            PrüfeDemolistRelaDoc.SETFILTER("Zeilennr.",'%1',DemolistRelaDoc."Zeilennr.");
            IF NOT PrüfeDemolistRelaDoc.FINDLAST THEN
              DemolistRelaDoc."Belegzeilennr." := 11111
            ELSE
              DemolistRelaDoc."Belegzeilennr." := PrüfeDemolistRelaDoc."Belegzeilennr." + 11111;

            DemolistRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
            DemolistRelaDoc."SUP Artikelnr." := "AU-Zeile"."No.";
            DemolistRelaDoc."Geräte Artikelnr." := Opt_License."Nr.";
            DemolistRelaDoc."Menge kalk." := Opt_License.Werte;
            DemolistRelaDoc.Fremderwerb := TRUE;
            DemolistRelaDoc.INSERT(TRUE);
          UNTIL Opt_License.NEXT = 0;
      END;
  END;

NeueDemoPos()
//Splicecom Funktion
IF Rec.HASFILTER THEN
  BEGIN
    EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

    "AU-Zeile".RESET;
    "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
    "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
    IF "AU-Zeile".FINDFIRST THEN
      BEGIN
        DemolistRelaDoc.INIT;
        DemolistRelaDoc.Art := Art :: "SPL-AU";
        DemolistRelaDoc."Nr." := "AU-Zeile"."Document No.";
        DemolistRelaDoc."Zeilennr." := v_zeilennr;
        DemolistRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
        PrüfeDemolistRelaDoc.RESET;
        PrüfeDemolistRelaDoc.SETFILTER(Art,'%1',DemolistRelaDoc.Art);
        PrüfeDemolistRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
        PrüfeDemolistRelaDoc.SETFILTER("Zeilennr.",'%1',DemolistRelaDoc."Zeilennr.");
        IF NOT PrüfeDemolistRelaDoc.FINDLAST THEN
          DemolistRelaDoc."Belegzeilennr." := 11111
        ELSE
          DemolistRelaDoc."Belegzeilennr." := PrüfeDemolistRelaDoc."Belegzeilennr." + 11111;
        DemolistRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
        DemolistRelaDoc."SUP Artikelnr." := "AU-Zeile"."No.";
        DemolistRelaDoc.Fremderwerb := TRUE;
        DemolistRelaDoc.INSERT(TRUE);
      END;
  END;

Pruefung_ignorieren(Service_Artikelnr : Code[20];Geräte_Artikelnr : Code[20];Basis : Boolean) : Boolean
Geräte_Artikel.GET(Geräte_Artikelnr);
Service_Artikel.GET(Service_Artikelnr);

IF (Basis = TRUE) AND ((Service_Artikel.Artikelgruppe = 'CHAMPS')
OR (Service_Artikel.Artikelgruppe = 'ACHAT') OR (Service_Artikel.Artikelgruppe = 'ACTS')
OR (Service_Artikel.Artikelgruppe = 'ACTS/ACHAT')) 
AND (Geräte_Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
  EXIT(FALSE)
ELSE
  EXIT(TRUE);
