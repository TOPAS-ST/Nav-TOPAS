OBJECT Dataport 50035 ACS Artikel Anlage
{
  OBJECT-PROPERTIES
  {
    Date=20.12.16;
    Time=09:41:04;
    Modified=Yes;
    Version List=Fertig!!!;
  }
  PROPERTIES
  {
    OnPreDataport=BEGIN
                    // Excel Datei Definitionen ******************************************************************
                    // *******************************************************************************************

                    CLEAR(Quelle_Excel);
                    CLEAR(Quelle_Sheet);
                    CLEAR(Quelle_Book);

                    // Definiert die zu importierende Datei
                    IF CREATE (Quelle_Excel,FALSE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
                    Quelle_Book := Quelle_Excel.Workbooks._Open(CurrDataport.FILENAME,0,FALSE);
                    Quelle_Sheet := Quelle_Book.Worksheets.Item(1);
                    //Quelle_Sheet := Quelle_Book.ActiveSheet;


                    Quelle_j:='1';

                    excel_datens„tze := 0;

                    //********************************************************************************************
                    //                         Eigentliches Einspielen der Artikel
                    //********************************************************************************************

                    excel_datens„tze := Quelle_Sheet.UsedRange.Rows.Count;

                    IF excel_datens„tze > 0 THEN
                      BEGIN
                        // Definiert die Preislisten Datei
                        CREATE(PL_Excel);

                        excel_msrp := 0;
                        dc := 0;

                        Quelle_j := '1';

                        REPEAT

                          dc := 0;
                          excel_msrp := 0;
                          sonderartikel_schaeffler := FALSE;
                          ek_system_w„hrung := '';

                          IF ek_system_w„hrung = '' THEN
                            Kred := '880045';
                          IF ek_system_w„hrung = 'USD' THEN
                            Kred := '880072';

                          Artikelname := RemoveSpecialChars(FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Part+Quelle_j).Value));
                          IF Artikelname <> '' THEN
                            BEGIN
                              IF COPYSTR(Artikelname,STRLEN(Artikelname)) =  '.' THEN
                                BEGIN
                                  sonderartikel_schaeffler := TRUE;
                                  v_PL_EURO_Pfad := PL_EURO_Schaeffler_Pfad;
                                  v_PL_USD_Pfad :=  PL_USD_Schaeffler_Pfad;
                                  ek_system_w„hrung := '';
                                  Artikelname := COPYSTR(Artikelname,1,STRLEN(Artikelname)-1);
                                  PL_Version_Systeme := PL_Version_Schaeffler;
                                  startdatum := 220415D;
                                END
                              ELSE
                                BEGIN
                                  v_PL_EURO_Pfad := PL_EURO_Pfad;
                                  v_PL_USD_Pfad :=  PL_USD_Pfad;
                                  PL_Version_Systeme := FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Version+Quelle_j).Value);
                                END;
                            END;

                          IF (sonderartikel_schaeffler= FALSE) AND (FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Startdatum+Quelle_j).Value) <> '') THEN
                            startdatum := Quelle_Sheet.Range(Spalte_Quelle_Startdatum+Quelle_j).Value;
                          klassifizierung := Quelle_Sheet.Range(Spalte_Quelle_Klass+Quelle_j).Value;
                          artgruppe := Quelle_Sheet.Range(Spalte_Quelle_Artgruppe+Quelle_j).Value;

                          IF ek_system_w„hrung = 'USD' THEN
                            BEGIN
                              PL_Book := PL_Excel.Workbooks._Open(v_PL_USD_Pfad,0,TRUE);
                              PL_Sheet := PL_Book.Worksheets.Item('CHAMPS_USD_PRICEBOOK');
                              IF FORMAT(PL_Sheet.Range(Spalte_PL_MSRP+'1').Value) <> 'MSRP USD' THEN
                                ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_PL_MSRP + ' muss MSRP USD lauten.');
                            END
                          ELSE
                            BEGIN
                              IF ek_system_w„hrung = '' THEN
                                BEGIN
                                  PL_Book := PL_Excel.Workbooks._Open(v_PL_EURO_Pfad,0,TRUE);
                                  PL_Sheet := PL_Book.Worksheets.Item('CHAMPS_EUR_PRICEBOOK');
                                  IF FORMAT(PL_Sheet.Range(Spalte_PL_MSRP+'1').Value) <> 'MSRP EUR' THEN
                                    ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_PL_MSRP + ' muss MSRP EUR lauten.');
                                END;
                            END;

                          cell_services := FindRow('Service',Spalte_PL_ProductGroup);
                          cell_part := FindRow(Artikelname,Spalte_PL_Part);
                          cell_training := FindRow('Technical Training',Spalte_Product);

                          //ACHTUNG!!! Artikel wird neu eingelesen, da Schaeffler Artikel und anders lautend mit Punkt am Ende
                          IF sonderartikel_schaeffler THEN
                            BEGIN
                              Artikelname := RemoveSpecialChars(FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Part+Quelle_j).Value));
                              Kred := '880045';
                              ek_system_w„hrung := '';
                            END;

                          IF cell_part <> '' THEN
                            BEGIN
                              cell_part := CONVERTSTR(cell_part,'F',Spalte_PL_MSRP);
                              IF (FORMAT(PL_Sheet.Range(cell_part).Value) <> '')
                              AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'EOL')
                              AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'No Charge')
                              AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'Quotation')
                              AND (STRPOS(FORMAT(PL_Sheet.Range(cell_part).Value),'Contact') = 0) THEN
                                excel_msrp := PL_Sheet.Range(cell_part).Value;
                              excel_msrp := ROUND(excel_msrp,0.01);

                              //Hier noch Abfrage Zelle Artikel gr”áer Zelle Service
                              row_part := TOPAS_API.ConvertStrToNum(cell_part);
                              row_services := TOPAS_API.ConvertStrToNum(cell_services);
                              row_training := TOPAS_API.ConvertStrToNum(cell_training);

                              services_artikel := FALSE;
                              training_artikel := FALSE;

                              IF row_training < row_part THEN
                                BEGIN
                                  dc := excel_msrp * 0.9;
                                  training_artikel := TRUE
                                END
                              ELSE
                                BEGIN
                                  IF row_services < row_part THEN
                                    BEGIN
                                      dc := excel_msrp * 0.8;
                                      services_artikel := TRUE;
                                    END
                                  ELSE
                                    BEGIN
                                      IF sonderartikel_schaeffler THEN
                                        dc := excel_msrp * 0.5
                                      ELSE
                                        dc := excel_msrp * 0.6;
                                    END;
                                END;

                              dc := ROUND(dc,0.01);

                              pl_short_descr := RemoveSpecialChars(PL_Sheet.Range(CONVERTSTR(cell_part,Spalte_PL_MSRP,Spalte_PL_ShortDescr)).Value);
                              pl_long_descr := RemoveSpecialChars(PL_Sheet.Range( CONVERTSTR(cell_part,Spalte_PL_MSRP,Spalte_PL_LongDescr)).Value);
                              pl_product_group := PL_Sheet.Range( CONVERTSTR(cell_part,Spalte_PL_MSRP,Spalte_PL_ProductGroup)).Value;

                            END;

                          IF (Artikelname = '') OR (STRLEN(Artikelname) > 40) OR (cell_part = '') THEN
                            BEGIN
                              IF (STRLEN(Artikelname) <> 0) AND (cell_part = '') THEN
                                Quelle_Sheet.Range('F'+Quelle_j).Value := 'Artikel nicht gefunden';
                            END
                          ELSE
                            BEGIN
                              Artikel.RESET;
                              Artikel.SETFILTER("No. 2",'%1',Artikelname);
                              IF NOT Artikel.FINDFIRST THEN
                                BEGIN

                                  //*********************************************************************************************
                                  //                                    EK-Preise updaten
                                  //*********************************************************************************************


                                  art_20 := art_verw.ACS_anlegen_40(Artikelname,dc,ek_system_w„hrung,Kred,startdatum,sonderartikel_schaeffler);

                                  Artikel.RESET;
                                  Artikel.SETFILTER(Artikel."No.",'%1',art_20);
                                  IF Artikel.FINDFIRST THEN;

                                  IF training_artikel = TRUE THEN
                                    BEGIN
                                      Artikel.Preisinfo := 'MSRP -10%';
                                      Artikel."Item Tracking Code" := 'KEINE';
                                      Artikel.Serviceklassifizierung := 'KEINE';
                                      Artikel.Artikelgruppe := 'DIENSTLEISTUNG';
                                      Artikel."Gen. Prod. Posting Group" := 'SCHULUNG';
                                      Artikel."VAT Prod. Posting Group" := '19DL';
                                    END
                                  ELSE
                                    IF services_artikel = TRUE THEN
                                      BEGIN
                                        Artikel.Preisinfo := 'MSRP -20%';
                                        Artikel."Item Tracking Code" := 'KEINE';
                                        Artikel.Serviceklassifizierung := 'KEINE';
                                        Artikel.Artikelgruppe := 'DIENSTLEISTUNG';
                                        Artikel."Gen. Prod. Posting Group" := 'SERVICE';
                                        Artikel."VAT Prod. Posting Group" := '19DL';
                                      END
                                    ELSE
                                      BEGIN
                                        Artikel.Preisinfo := 'MSRP -40%';
                                        IF sonderartikel_schaeffler THEN Artikel.Preisinfo := 'MSRP -50%';
                                        IF (klassifizierung = 'KEINE') OR (klassifizierung = 'SOFTWARE') THEN
                                          BEGIN
                                            Artikel."Item Tracking Code" := 'KEINE';
                                            IF (STRPOS(UPPERCASE(Artikelname),'RMK') <> 0) OR (STRPOS(UPPERCASE(Artikelname),'MRK') <> 0)
                                            OR (STRPOS(UPPERCASE(Artikelname),'WALL-MK') <> 0) OR (STRPOS(UPPERCASE(Artikelname),'RMSHL') <> 0) THEN
                                              Artikel.Artikelgruppe := 'ZUBEH™R'
                                            ELSE
                                              Artikel.Artikelgruppe := 'LIZENZEN/SOFTWARE';
                                            IF klassifizierung = 'KEINE' THEN Artikel.Serviceklassifizierung := 'KEINE';
                                          END
                                        ELSE
                                          BEGIN
                                            IF (klassifizierung = 'SYSTEM FLAT') THEN
                                              IF LOWERCASE(pl_product_group) = 'ip phones' THEN
                                                Artikel.Artikelgruppe := 'TELEFONE'
                                              ELSE
                                                Artikel.Artikelgruppe := 'ANALOGE SYSTEME';
                                            IF (klassifizierung = 'SYSTEM CHAMPS') THEN
                                              Artikel.Artikelgruppe := 'SYSTEME';
                                            IF (klassifizierung = 'MODUL') THEN
                                              Artikel.Artikelgruppe := 'BAUGRUPPEN';
                                            Artikel."Item Tracking Code" := 'SERIENNR';
                                            Artikel."Lead Free" := TRUE;
                                          END;
                                      END;

                                  IF sonderartikel_schaeffler THEN Artikel.Preisinfo := Artikel.Preisinfo + ' fr Schaeffler';

                                  //Beschreibung und Textbaustein fllen
                                  IF STRLEN(pl_short_descr) < 30 THEN
                                    BEGIN
                                      Artikel.Description := pl_short_descr;
                                    END
                                  ELSE
                                    BEGIN
                                      Artikel.Description := Trim_ShortDescr(pl_short_descr,30);
                                      Artikel."Description 2" := Trim_ShortDescr(COPYSTR(pl_short_descr,STRLEN(Artikel.Description)+1),30);
                                    END;

                                  IF STRLEN(pl_long_descr) > 1 THEN
                                    BEGIN
                                      Artikel."Automatic Ext. Texts" := TRUE;
                                      LongDescrToExtendedText(Artikel."No.",pl_long_descr,50);
                                    END;

                                  IF Artikel.Artikelgruppe = 'DIENSTLEISTUNG' THEN
                                    Artikel.VALIDATE("Handlingskosten %",0)
                                  ELSE
                                    IF sonderartikel_schaeffler THEN
                                      Artikel.VALIDATE("Handlingskosten %",2)
                                    ELSE
                                      Artikel.VALIDATE("Handlingskosten %",5);

                                  Artikel.VALIDATE("Handlingskosten %");
                                  Artikel.UStG_13b_frei := TRUE;
                                  Artikel."Country/Region of Origin Code" := 'IL';
                                  Artikel."Country/Region Purchased Code" := 'IL';
                                  Artikel."Manufacturer Code" := '59';
                                  Artikel."Search Description" := 'ACS';
                                  Artikel.Herstellerkurzname := 'ACS';
                                  Artikel.Quotesystem := 'BROKEN COST';
                                  Artikel.Verpackungsmenge := 1;
                                  Artikel.Mindestbestellmenge := 1;
                                  Artikel.Serviceklassifizierung := klassifizierung;
                                  Artikel."Allow Invoice Disc." := FALSE;

                                  //IP Phones werden nun ber Westcon eingekauft
                                  IF LOWERCASE(pl_product_group) = 'ip phones' THEN BEGIN
                                    Artikel.Preisinfo := 'MSRP -36.5% Westcon';
                                    Artikel."Vendor No." := '600095';
                                    Artikel.VALIDATE("Handlingskosten %",2);
                                  END;

                                  Artikel."Update letzte Preisliste" := TRUE;
                                  Artikel.MODIFY(TRUE);

                                  //*********************************************************************************************
                                  //                                    VK-Preise updaten
                                  //*********************************************************************************************

                                  IF excel_msrp <> 0 THEN
                                    BEGIN
                                      verkaufspreis.RESET;
                                      verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type" :: "All Customers");
                                      verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                                      verkaufspreis.SETFILTER("Currency Code",'%1',ek_system_w„hrung);
                                      verkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                                      IF NOT verkaufspreis.FINDFIRST THEN
                                        BEGIN
                                          verkaufspreis.INIT;
                                          verkaufspreis."Sales Type" := verkaufspreis."Sales Type" :: "All Customers";
                                          verkaufspreis."Item No.":= Artikel."No.";
                                          verkaufspreis."Starting Date" := startdatum;
                                          verkaufspreis."Currency Code" := ek_system_w„hrung;
                                          verkaufspreis."Unit of Measure Code" := 'STšCK';
                                          verkaufspreis."Unit Price" := excel_msrp;
                                          verkaufspreis.INSERT(TRUE);
                                        END;
                                    END;

                                  IF (STRPOS(Artikel.Bezeichnung2_lang,'Nicht in der Preisliste') <> 0)
                                  OR (STRPOS(Artikel.Bezeichnung2_lang,'Stand Preisliste') <> 0)
                                  OR (Artikel.Bezeichnung2_lang = '') THEN
                                    BEGIN
                                      Artikel.Bezeichnung2_lang := 'Stand Preisliste: ' + PL_Version_Systeme;
                                      Artikel.MODIFY(TRUE);
                                    END;

                                  IF FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Part+Quelle_j).Value) = Artikel."No. 2" THEN
                                    Quelle_Sheet.Range(Spalte_Quelle_Part+Quelle_j).Value := TOPAS_API.CreateExcelHyperlinkToNav
                                    (Artikel.TABLENAME,1,30,FORMAT(Quelle_Sheet.Range(Spalte_Quelle_Part+Quelle_j).Value));
                                  Quelle_Sheet.Range('F'+Quelle_j).Value := 'OK';
                                  IF training_artikel = TRUE THEN
                                    Quelle_Sheet.Range('G'+Quelle_j).Value := 'MSRP * 0.9'
                                  ELSE
                                    IF services_artikel = TRUE THEN
                                      Quelle_Sheet.Range('G'+Quelle_j).Value := 'MSRP * 0.8'
                                    ELSE
                                      IF sonderartikel_schaeffler THEN
                                        Quelle_Sheet.Range('G'+Quelle_j).Value := 'MSRP * 0.5'
                                      ELSE
                                        Quelle_Sheet.Range('G'+Quelle_j).Value := 'MSRP * 0.6';

                                  Quelle_Sheet.Range('H'+Quelle_j).Value := FORMAT(dc);
                                  //Quelle_Sheet.Range('H'+Quelle_j).NumberFormat := 0.00;
                                  Quelle_Sheet.Range('I'+Quelle_j).Value := FORMAT(excel_msrp);
                                  //Quelle_Sheet.Range('I'+Quelle_j).NumberFormat := 0.00;
                                  Quelle_Sheet.Range('K'+Quelle_j).Value := 'A: ' + FORMAT(row_part);
                                  Quelle_Sheet.Range('L'+Quelle_j).Value := 'S: ' + FORMAT(row_services);
                                  Quelle_Sheet.Range('M'+Quelle_j).Value := 'T: ' + FORMAT(row_training);

                                  //*********************************************************************************************
                                  //                              VK-Preise EURO bzw. USD einspielen
                                  //*********************************************************************************************

                                  {
                                  IF ek_system_w„hrung = 'USD' THEN
                                    vk_system_w„hrung_einspielen := '';
                                  IF ek_system_w„hrung = '' THEN
                                    vk_system_w„hrung_einspielen := 'USD';

                                  IF (sonderartikel_schaeffler = FALSE) THEN
                                    BEGIN

                                      IF vk_system_w„hrung_einspielen = '' THEN
                                        BEGIN
                                          //PL_Book.Close;
                                          PL_Book := PL_Excel.Workbooks._Open(v_PL_EURO_Pfad,0,TRUE);
                                          PL_Sheet := PL_Book.Worksheets.Item('CHAMPS_EUR_PRICEBOOK');
                                          IF FORMAT(PL_Sheet.Range(Spalte_PL_MSRP+'1').Value) <> 'MSRP EUR' THEN
                                            ERROR(Text002);
                                        END;

                                      IF vk_system_w„hrung_einspielen = 'USD' THEN
                                        BEGIN
                                          //PL_Book.Close;
                                          PL_Book := PL_Excel.Workbooks._Open(v_PL_USD_Pfad,0,TRUE);
                                          PL_Sheet := PL_Book.Worksheets.Item('CHAMPS_USD_PRICEBOOK');
                                          IF FORMAT(PL_Sheet.Range(Spalte_PL_MSRP+'1').Value) <> 'MSRP USD' THEN
                                            ERROR(Text003);

                                        END;

                                      cell_services := FindRow('Service',Spalte_PL_PGroup);
                                      cell_training := FindRow('Technical Training',Spalte_Product);
                                      cell_part := FindRow(Artikelname,Spalte_PL_Part);
                                      cell_part := CONVERTSTR(cell_part,'F',Spalte_PL_MSRP);

                                      excel_msrp := 0;
                                      IF (FORMAT(PL_Sheet.Range(cell_part).Value) <> '')
                                      AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'EOL')
                                      AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'No Charge')
                                      AND (FORMAT(PL_Sheet.Range(cell_part).Value) <> 'Quotation')
                                      AND (STRPOS(FORMAT(PL_Sheet.Range(cell_part).Value),'Contact') = 0) THEN
                                        excel_msrp := PL_Sheet.Range(cell_part).Value;
                                      excel_msrp := ROUND(excel_msrp,0.01);

                                      IF excel_msrp <> 0 THEN
                                        BEGIN
                                          verkaufspreis.RESET;
                                          verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type" :: "All Customers");
                                          verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                                          verkaufspreis.SETFILTER("Currency Code",'%1',vk_system_w„hrung_einspielen);
                                          verkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                                          IF NOT verkaufspreis.FINDFIRST THEN
                                            BEGIN
                                              verkaufspreis.INIT;
                                              verkaufspreis."Sales Type" := verkaufspreis."Sales Type" :: "All Customers";
                                              verkaufspreis."Item No.":= Artikel."No.";
                                              verkaufspreis."Starting Date" := startdatum;
                                              verkaufspreis."Currency Code" := vk_system_w„hrung_einspielen;
                                              verkaufspreis."Unit of Measure Code" := 'STšCK';
                                              verkaufspreis."Unit Price" := excel_msrp;
                                              verkaufspreis.INSERT(TRUE);

                                              Quelle_Sheet.Range('J'+Quelle_j).Value := FORMAT(excel_msrp);
                                              //Quelle_Sheet.Range('J'+Quelle_j).NumberFormat := 0.00;

                                            END;
                                        END;

                                      PL_Book.Close;
                                    END;
                                  }
                                END
                              ELSE
                                Quelle_Sheet.Range('F'+Quelle_j).Value := 'BEREITS ANGELEGT';

                            END;

                          //*********************************************************************************************
                          // Abbruchbedingung
                          // Wenn in der Quelldatei 1 Leere Zeilen hintereinander kommen, ist das Dateiende erreicht
                          IF Artikelname = '' THEN                                       // erkennt das Ende der Excel Datei
                             BEGIN
                               leere_zeilen := leere_zeilen+1;
                             END
                             ELSE
                             BEGIN
                               leere_zeilen :=0;
                             END;

                           Quelle_j:=INCSTR(Quelle_j);                                                 // n„chste Zeile Importdatei

                         UNTIL (Max_Datens„tze = Quelle_j) OR (leere_zeilen = 1);  // Nach 1 Zeilen ohne Artikel ist Schluss

                         PL_Book.Close;

                      END;



                    //Quelle_Book.Save;
                    Quelle_Book.Close(TRUE);
                    Quelle_Book := Quelle_Excel.Workbooks._Open(CurrDataport.FILENAME,0,TRUE);
                    Quelle_Excel.Visible(TRUE);

                    //CLEAR(Quelle_Book);
                    //CLEAR(Quelle_Sheet);
                    //CLEAR(Quelle_Excel);

                    //REPEAT
                    //UNTIL ISCLEAR(Quelle_Excel) AND ISCLEAR(Quelle_Book) AND ISCLEAR(Quelle_Sheet);
                  END;

    OnPostDataport=VAR
                     Datum_date@1140001 : Date;
                     Datum_text@1140000 : Text[30];
                   BEGIN
                     //MESSAGE('Import der CHAMP Artikel abgeschlossen.'+ '\' + 'Neue bzw. ge„nderte Datens„tze: %1\\'+
                     //        'Excel Datens„tze: %2\Obsolete Bezeichnungen: %3',ge„nderte_eintr„ge,excel_datens„tze,obsolete_eintr„ge);

                     //Quelle_Excel.Visible(TRUE);
                   END;

  }
  DATAITEMS
  {
  }
  REQUESTFORM
  {
    PROPERTIES
    {
      Width=9020;
      Height=3410;
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR

      Spalte_Quelle_Part@1140001 : TextConst
        'DEU=A';

      Spalte_PL_ProductGroup@1140050 : TextConst
        'DEU=A';

      Spalte_Product@1140056 : TextConst
        'DEU=B';

      Spalte_PL_Part@1140051 : TextConst
        'DEU=F';

      Spalte_PL_MSRP@1140005 : TextConst
        'DEU=H';

      Spalte_PL_LongDescr@1140009 : TextConst
        'DEU=I';
      einkaufspreis@1140031 : Record 7012;
      verkaufspreis@1140041 : Record 7002;
      Artikel@1140036 : Record 27;
      Kreditor@1140038 : Record 23;
      art_verw@1140018 : Codeunit 50012;
      TOPAS_API@1140033 : Codeunit 50001;
      Quelle_Excel@1140020 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Quelle_Book@1140019 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Quelle_Sheet@1140017 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      Quelle_j@1140016 : Text[7];

      Spalte_PL_ShortDescr@1140049 : TextConst
        'DEU=G';

      Spalte_Quelle_Version@1140023 : TextConst
        'DEU=C';

      Spalte_Quelle_Startdatum@1140008 : TextConst
        'DEU=B';

      Spalte_Quelle_Klass@1140011 : TextConst
        'DEU=D';

      Spalte_Quelle_Artgruppe@1140012 : TextConst
        'DEU=E';

      PL_USD_Pfad@1140006 : TextConst
        'DEU=F:\Daten NEU\Gemeinsame Ordner\Preislisten\AudioCodes\Aktuelle Preislisten\Systeme\gltig ab 2016-07-01 v5.2.1\AudioCodes Channel Price Book - Networking Products and CHAMPS - v5.2.1 - USD.xlsx';

      PL_EURO_Pfad@1140007 : TextConst
        'DEU=F:\Daten NEU\Gemeinsame Ordner\Preislisten\AudioCodes\Aktuelle Preislisten\Systeme\gltig ab 2016-07-01 v5.2.1\AudioCodes Channel Price Book - Networking Products and CHAMPS - v5.2.1 - Euro.xlsx';

      PL_USD_Schaeffler_Pfad@1140061 : TextConst
        'DEU=F:\Daten NEU\Gemeinsame Ordner\Preislisten\AudioCodes\Aktuelle Preislisten\Systeme\Alte Preislisten\gltig ab 2014-02-01 v4.7.04\AudioCodes Channel Price Book - Networking Products and CHAMPS - v4.7.04 - USD.xlsx';

      PL_EURO_Schaeffler_Pfad@1140062 : TextConst
        'DEU=F:\Daten NEU\Gemeinsame Ordner\Preislisten\AudioCodes\Aktuelle Preislisten\Systeme\Alte Preislisten\gltig ab 2014-02-01 v4.7.04\AudioCodes Channel Price Book - Networking Products and CHAMPS - v4.7.04 - Euro.xlsx';

      PL_Version_Schaeffler@1140066 : TextConst
        'DEU=4.7.04';

      Max_Datens„tze@1140064 : TextConst
        'DEU=10000';

      Text000@1140037 : TextConst
        'DEU=Fehler in der Syntax der Quelldatei.\Spalte: %1';
      PL_Excel@1140045 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024500-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Application";
      PL_Book@1140046 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";
      PL_Sheet@1140047 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      v_PL_EURO_Pfad@1140063 : Text[250];
      v_PL_USD_Pfad@1140065 : Text[250];
      cell_part@1140048 : Text[30];
      cell_services@1140003 : Text[30];
      cell_training@1140053 : Text[30];
      row_part@1140027 : Integer;
      row_services@1140030 : Integer;
      row_training@1140054 : Integer;
      Artikelname@1140000 : Text[120];
      PL_Version@1140024 : Text[30];
      PL_Version_Systeme@1140043 : Text[30];
      PL_W„h@1140025 : Code[20];
      Kred@1140034 : Code[20];
      excel_msrp@1140004 : Decimal;
      dc@1140010 : Decimal;
      ek_system_w„hrung@1140029 : Code[20];
      vk_system_w„hrung_einspielen@1140058 : Code[20];
      startdatum@1140032 : Date;
      a@1140073 : Integer;
      leere_zeilen@1140055 : Integer;
      excel_datens„tze@1140021 : Integer;
      ge„nderte_eintr„ge@1140013 : Integer;
      obsolete_eintr„ge@1140022 : Integer;
      update_job@1140015 : Boolean;
      auswahl@1140026 : 'Champs Import,ACTS,DC in USD';

      Text001@1140035 : TextConst
        'DEU=Der W„hrungscode des Kreditors %1 und der in der Excel Liste angebene W„hrungscode weichen voneinander ab.';

      Text002@1140059 : TextConst
        'DEU=Fehlerhafte Syntax in der System Preisliste > Spalte '' + Spalte_PL_MSRP + '' muss MSRP EUR lauten.';

      Text003@1140060 : TextConst
        'DEU=Fehlerhafte Syntax in der System Preisliste > Spalte '' + Spalte_PL_MSRP + '' muss MSRP USD lauten.';

      Text100@1140028 : TextConst
        'DEU=Champ Import,ACTS Import,ACS Artikel DC und MSRP Import';
      art_20@1140014 : Code[20];
      services_artikel@1140002 : Boolean;
      training_artikel@1140057 : Boolean;
      pl_short_descr@1140039 : Text[1024];
      pl_long_descr@1140040 : Text[1024];
      pl_product_group@1140067 : Text[50];
      klassifizierung@1140042 : Text[50];
      artgruppe@1140044 : Text[50];
      sonderartikel_schaeffler@1140052 : Boolean;

    PROCEDURE FindRow@1140003(What@1140000 : Code[40];Spalte@1140001 : Code[10]) : Text[30];
    VAR
      Range1@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Cell@1140003 : Code[40];
      vorherige_zeile@1140004 : Integer;
      naechste_zeile@1140005 : Integer;
      i@1140007 : Integer;
    BEGIN
      WITH PL_Sheet.Range(Spalte+':'+Spalte) DO
        BEGIN
          i := 1;
          Range1 :=
          (PL_Sheet.Columns.Find(
            What));
          // Wird der Artikel nicht gefunden, steigt er sofort aus den Schleifen aus
          IF ISCLEAR(Range1) THEN EXIT('');
          Cell := Range1.Address;
          // Schleife notwendig, da die šbergabe der Range nicht richtig funktioniert
          IF ((STRPOS(Cell,Spalte) = 0) AND (Spalte = 'A'))
          OR ((STRPOS(Cell,Spalte) = 0) AND (Spalte = 'F')) THEN
            BEGIN
              REPEAT
                Range1 := PL_Sheet.Rows.FindNext(Range1);
                Cell := Range1.Address;
                i += 1;
              UNTIL (STRPOS(Cell,Spalte) = 2) OR (i > 100);
            END
          ELSE
            IF Spalte = 'F' THEN
              BEGIN
                // mehr als ein Parameter gibt Probleme bei der Find Methode > HRESULT Fehler, vermutlich
                // liegt es an einer fehlenden Instanz im 2. Parameter, deshalb wird solange gesucht,
                // bis der Suchbegriff auch exakt mit dem Treffer bereinstimmt
                IF (FORMAT(PL_Sheet.Range(Cell).Value) <> What) AND (STRPOS(Cell,Spalte) <> 0) THEN
                  REPEAT
                    Range1 := PL_Sheet.Rows.FindNext(Range1);
                    EVALUATE(vorherige_zeile,COPYSTR(Cell,4));
                    Cell := Range1.Address;
                    EVALUATE(naechste_zeile,COPYSTR(Cell,4));
                    IF (vorherige_zeile = naechste_zeile) AND (UPPERCASE(FORMAT(PL_Sheet.Range(Cell).Value)) <> UPPERCASE(What)) THEN
                      EXIT(''); //Abbruch, sonst Endlosschleife wegen unterschiedlicher Gross- und Kleinschreibung
                  UNTIL (UPPERCASE(FORMAT(PL_Sheet.Range(Cell).Value)) = UPPERCASE(What));
              END;
          EXIT(Cell);
      END;
    END;

    PROCEDURE Trim_ShortDescr@1140000(string@1140001 : Text[1024];max_length@1140002 : Integer) : Text[30];
    VAR
      temp_string@1140000 : Text[1024];
      leer_pos@1140003 : Integer;
      cr@1140004 : Char;
    BEGIN
      cr := 32;
      temp_string := string;
      IF COPYSTR(temp_string,1,1) = FORMAT(cr) THEN
        temp_string := COPYSTR(temp_string,2);
      IF STRLEN(temp_string) > max_length THEN
        BEGIN
          leer_pos := max_length;
          temp_string := COPYSTR(temp_string,1,leer_pos);
          IF COPYSTR(temp_string,leer_pos,1) <> FORMAT(cr) THEN
            REPEAT
              leer_pos -= 1;
              //temp_char := COPYSTR(temp_string,leer_pos,1);
            UNTIL (leer_pos = 1) OR (COPYSTR(temp_string,leer_pos,1) = FORMAT(cr));
          temp_string := COPYSTR(temp_string,1,leer_pos-1);
        END;
      EXIT(temp_string);
    END;

    PROCEDURE Trim_LongDescr@1140004(string@1140001 : Text[1024];max_length@1140002 : Integer) : Text[50];
    VAR
      temp_string@1140000 : Text[1024];
      leer_pos@1140003 : Integer;
      cr@1140004 : Char;
    BEGIN
      cr := 32;
      temp_string := string;
      IF COPYSTR(temp_string,1,1) = FORMAT(cr) THEN
        temp_string := COPYSTR(temp_string,2);
      IF STRLEN(temp_string) > max_length THEN
        BEGIN
          leer_pos := max_length;
          temp_string := COPYSTR(temp_string,1,leer_pos);
          IF COPYSTR(temp_string,leer_pos,1) <> FORMAT(cr) THEN
            REPEAT
              leer_pos -= 1;
              //temp_char := COPYSTR(temp_string,leer_pos,1);
            UNTIL (leer_pos = 1) OR (COPYSTR(temp_string,leer_pos,1) = FORMAT(cr));
          temp_string := COPYSTR(temp_string,1,leer_pos);
        END;
      EXIT(temp_string);
    END;

    PROCEDURE LongDescrToExtendedText@1140002(artikelnr@1140000 : Code[20];string@1140001 : Text[1024];length@1140002 : Integer);
    VAR
      ExtendHead@1140003 : Record 279;
      ExtendLine@1140004 : Record 280;
      rest_string@1140006 : Text[1024];
      temp_string@1140005 : Text[1024];
      line@1140007 : Integer;
    BEGIN
      WITH ExtendHead DO
        BEGIN
          INIT;
          "Table Name" := "Table Name" :: Item;
          "No." := artikelnr;
          INSERT(TRUE);
          "All Language Codes" := TRUE;
          "Purchase Quote" := FALSE;
          "Purchase Invoice" := FALSE;
          "Purchase Order" := FALSE;
          "Purchase Credit Memo" := FALSE;
          "Purchase Blanket Order" := FALSE;
          "Prepmt. Purchase Invoice" := FALSE;
          "Prepmt. Purchase Credit Memo" := FALSE;
          "Service Order" := FALSE;
          "Service Quote" := FALSE;
          "Service Invoice" := FALSE;
          "Service Credit Memo" := FALSE;
          "Purchase Return Order" := FALSE;
          "Delivery Reminder" := FALSE;
          MODIFY(TRUE);

          rest_string := string;
          line := 10000;

          REPEAT
            temp_string := Trim_LongDescr(rest_string,length);
            rest_string := COPYSTR(rest_string,STRLEN(temp_string)+1);
            ExtendLine.INIT;
            ExtendLine."Table Name" := "Table Name";
            ExtendLine."No." := "No.";
            ExtendLine."Language Code" := "Language Code";
            ExtendLine."Text No." := "Text No.";
            ExtendLine.Text := temp_string;
            ExtendLine."Line No." := line;
            ExtendLine.INSERT;
            line += 10000;
          UNTIL STRLEN(rest_string) <= 1;
        END;
    END;

    PROCEDURE RemoveSpecialChars@1140005(string@1140000 : Text[1024]) : Text[1024];
    VAR
      cr@1140001 : Char;
    BEGIN
      // Tab, LF und CR aus Text l”schen
      cr := 13;
      string := DELCHR(string,'=',FORMAT(cr));
      cr := 10;
      string := DELCHR(string,'=',FORMAT(cr));
      cr := 9;
      string := DELCHR(string,'=',FORMAT(cr));
      EXIT(string);
    END;

    EVENT Quelle_Sheet@1140017::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::Activate@304();
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::Deactivate@1530();
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::Calculate@279();
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::PivotTableBeforeAllocateChange@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1140017::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::Open@1923();
    BEGIN
    END;

    EVENT Quelle_Book@1140019::Activate@304();
    BEGIN
    END;

    EVENT Quelle_Book@1140019::Deactivate@1530();
    BEGIN
    END;

    EVENT Quelle_Book@1140019::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::AddinInstall@1552();
    BEGIN
    END;

    EVENT Quelle_Book@1140019::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Quelle_Book@1140019::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1140019::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1140019::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookPivotTableOpenConnecti@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1140020::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT PL_Excel@1140045::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT PL_Excel@1140045::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT PL_Excel@1140045::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Excel@1140045::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT PL_Excel@1140045::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Excel@1140045::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Excel@1140045::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Excel@1140045::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT PL_Excel@1140045::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT PL_Excel@1140045::AfterCalculate@2612();
    BEGIN
    END;

    EVENT PL_Excel@1140045::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT PL_Excel@1140045::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT PL_Book@1140046::Open@1923();
    BEGIN
    END;

    EVENT PL_Book@1140046::Activate@304();
    BEGIN
    END;

    EVENT PL_Book@1140046::Deactivate@1530();
    BEGIN
    END;

    EVENT PL_Book@1140046::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT PL_Book@1140046::AddinInstall@1552();
    BEGIN
    END;

    EVENT PL_Book@1140046::AddinUninstall@1553();
    BEGIN
    END;

    EVENT PL_Book@1140046::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Book@1140046::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Book@1140046::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT PL_Book@1140046::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT PL_Book@1140046::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT PL_Book@1140046::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT PL_Book@1140046::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT PL_Book@1140046::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Book@1140046::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT PL_Sheet@1140047::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT PL_Sheet@1140047::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Sheet@1140047::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT PL_Sheet@1140047::Activate@304();
    BEGIN
    END;

    EVENT PL_Sheet@1140047::Deactivate@1530();
    BEGIN
    END;

    EVENT PL_Sheet@1140047::Calculate@279();
    BEGIN
    END;

    EVENT PL_Sheet@1140047::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT PL_Sheet@1140047::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT PL_Sheet@1140047::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT PL_Sheet@1140047::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    BEGIN
    END.
  }
}

