OBJECT Form 50023 Kalkulationsblatt
{
  OBJECT-PROPERTIES
  {
    Date=12.05.15;
    Time=14:31:32;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    Width=13750;
    Height=10890;
    InsertAllowed=No;
    TableBoxID=1140000;
    SourceTable=Table50027;
    SourceTableView=SORTING(Art,Nr.,Zeilennr.,Gruppierung);
    OnOpenForm=BEGIN
                 CurrForm.btn_auswahl_sn.VISIBLE := FALSE;
                 CurrForm.txtbox_kalk_prozentsatz.VISIBLE := FALSE;
                 CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := FALSE;
                 AktFormTemplate;
               END;

    OnAfterGetRecord=BEGIN
                       diff := TOPAS_API.CalculateTimeDiff('M',Startdatum,Ablaufdatum);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           IF "Nachtr„gliche Service Order" = TRUE THEN
                             CurrForm.btn_auswahl_sn.VISIBLE := TRUE
                           ELSE
                             CurrForm.btn_auswahl_sn.VISIBLE := FALSE;

                           IF Fremderwerb = TRUE THEN
                             CurrForm."Ger„te Artikelnr.".EDITABLE := TRUE
                           ELSE
                             CurrForm."Ger„te Artikelnr.".EDITABLE := FALSE;

                           IF Artikel.GET("SUP Artikelnr.") AND ((Artikel.Artikelgruppe = 'ACTS')
                           OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Artikel.Artikelgruppe = 'ACHAT')
                           OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS')
                           OR (Artikel.Artikelgruppe = 'APSS_OB')) THEN
                             BEGIN
                               CurrForm.txtbox_kalk_prozentsatz.VISIBLE := TRUE;
                               CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := TRUE;
                             END
                           ELSE
                             BEGIN
                               CurrForm.txtbox_kalk_prozentsatz.VISIBLE := FALSE;
                               CurrForm.label_hinweis_kalk_prozentsatz.VISIBLE := FALSE;
                             END;

                           KalkFehlerPrfen;
                         END;

    OnModifyRecord=BEGIN
                     AusfhrungPrfen;
                   END;

  }
  CONTROLS
  {
    { 1140059;CommandButton;2750;1210;3300;700  ;Name=btn_demo_vorlage;
                                                 CaptionML=DEU=Demo Vorlage;
                                                 OnPush=BEGIN
                                                          DemoVorlage;
                                                        END;
                                                         }
    { 1140060;CommandButton;220;1210;2200 ;700  ;Name=btn_neue_pos;
                                                 CaptionML=DEU=Neue Pos.;
                                                 OnPush=BEGIN
                                                          NeueDemoPos;
                                                        END;
                                                         }
    { 1140000;TableBox  ;220  ;4620 ;13420;5500 ;HorzGlue=Both;
                                                 VertGlue=Both }
    { 1140001;TextBox   ;0    ;0    ;2100 ;0    ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Nr." }
    { 1140002;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140001;
                                                 InColumnHeading=Yes }
    { 1140003;TextBox   ;0    ;0    ;1700 ;0    ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Zeilennr." }
    { 1140004;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140003;
                                                 InColumnHeading=Yes }
    { 1140028;TextBox   ;5382 ;2530 ;4000 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="SUP Artikelnr." }
    { 1140029;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140028;
                                                 InColumnHeading=Yes }
    { 1140016;TextBox   ;3974 ;1870 ;4000 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Ger„te Artikelnr.";
                                                 OnFormat=BEGIN
                                                            IF Artikel.GET("Ger„te Artikelnr.") THEN
                                                              BEGIN
                                                                IF (Artikel.Blocked = TRUE) THEN
                                                                  CurrForm."Ger„te Artikelnr.".UPDATEFORECOLOR := 255;
                                                              END
                                                            ELSE
                                                              CurrForm."Ger„te Artikelnr.".UPDATEFORECOLOR := 255;
                                                          END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 1140017;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140016;
                                                 InColumnHeading=Yes }
    { 1140055;TextBox   ;10950;4510 ;2100 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Abw. Ger„te Artikelnr." }
    { 1140056;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140055;
                                                 InColumnHeading=Yes }
    { 1140039;TextBox   ;11292;4840 ;2200 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="MSRP Service" }
    { 1140040;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140039;
                                                 InColumnHeading=Yes }
    { 1140052;TextBox   ;13419;5170 ;1700 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Vertragsnr. bernommen" }
    { 1140053;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140052;
                                                 InColumnHeading=Yes }
    { 1140067;TextBox   ;23072;5280 ;2000 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Rabatt/Marge" }
    { 1140068;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140067;
                                                 InColumnHeading=Yes }
    { 1140007;TextBox   ;0    ;0    ;2100 ;0    ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Belegnr.";
                                                 OnValidate=BEGIN
                                                              IF Fremderwerb = FALSE THEN
                                                                ERROR(Text011);
                                                            END;
                                                             }
    { 1140008;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140007;
                                                 InColumnHeading=Yes }
    { 1140009;TextBox   ;0    ;0    ;1700 ;0    ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Belegzeilennr.";
                                                 OnValidate=BEGIN
                                                              IF Fremderwerb = FALSE THEN
                                                                ERROR(Text011);
                                                            END;
                                                             }
    { 1140010;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140009;
                                                 InColumnHeading=Yes }
    { 1140030;TextBox   ;1056 ;2200 ;1500 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr=Laufzeit;
                                                 OnValidate=BEGIN
                                                              //IF STRPOS("SUP Artikelnr.",'CHAMPS') = 0 THEN
                                                              //  ERROR(Text009);
                                                            END;
                                                             }
    { 1140031;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140030;
                                                 InColumnHeading=Yes }
    { 1140018;TextBox   ;14813;2200 ;1700 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr=Startdatum }
    { 1140019;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140018;
                                                 InColumnHeading=Yes }
    { 1140020;TextBox   ;16513;2200 ;1700 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr=Ablaufdatum;
                                                 OnFormat=BEGIN
                                                            IF FORMAT(diff) <> DELCHR(Laufzeit,'=','M') THEN
                                                              CurrForm.Ablaufdatum.UPDATEFORECOLOR := 255
                                                            ELSE
                                                              CurrForm.Ablaufdatum.UPDATEFORECOLOR := 0;
                                                          END;
                                                           }
    { 1140021;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140020;
                                                 InColumnHeading=Yes }
    { 1140026;TextBox   ;15316;2420 ;1700 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 FontBold=Yes;
                                                 DecimalPlaces=0:0;
                                                 SourceExpr="Menge kalk.";
                                                 OnValidate=BEGIN
                                                              MengeKalkPrfen;
                                                            END;
                                                             }
    { 1140027;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140026;
                                                 InColumnHeading=Yes;
                                                 FontBold=No }
    { 1140022;TextBox   ;15265;1980 ;2500 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 FontBold=Yes;
                                                 SourceExpr="Service VK-Preis einzeln" }
    { 1140023;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140022;
                                                 InColumnHeading=Yes;
                                                 FontBold=No }
    { 1140024;TextBox   ;17504;2530 ;2500 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 FontBold=No;
                                                 SourceExpr="Service VK-Preis Zeilenbetrag" }
    { 1140025;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140024;
                                                 InColumnHeading=Yes;
                                                 FontBold=No }
    { 1140035;TextBox   ;26029;5390 ;2200 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Service DC einzeln" }
    { 1140036;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140035;
                                                 InColumnHeading=Yes }
    { 1140037;TextBox   ;28229;5390 ;2200 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Service DC Gesamt" }
    { 1140038;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140037;
                                                 InColumnHeading=Yes }
    { 1140057;TextBox   ;37932;5170 ;2308 ;440  ;Editable=No;
                                                 ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Service DC W„hrungscode" }
    { 1140058;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140057;
                                                 InColumnHeading=Yes }
    { 1140045;TextBox   ;17353;3850 ;2100 ;440  ;ParentControl=1140000;
                                                 InColumn=Yes;
                                                 SourceExpr="Wartungsvertragsnr.";
                                                 OnValidate=BEGIN
                                                              //***************************************************************************************************
                                                              //         Der Wartungsvertrag muss bei nachtr„glicher Zubuchung neuer Pos. noch gltig sein
                                                              //***************************************************************************************************

                                                              IF "Wartungsvertragsnr." <> '' THEN
                                                                BEGIN
                                                                  Wartungsvertrag.GET("Wartungsvertragsnr.");
                                                                  IF (Wartungsvertrag.Vertragsablaufdatum < WORKDATE)
                                                                  AND ((Wartungsvertrag.Status = Wartungsvertrag.Status :: Auftrag)
                                                                  OR (Wartungsvertrag.Status = Wartungsvertrag.Status :: ACTS)
                                                                  OR (Wartungsvertrag.Status = Wartungsvertrag.Status :: ACHAT)) THEN
                                                                    ERROR(Text014,Wartungsvertrag."Wartungsvertragsnr.");
                                                                  IF ((Wartungsvertrag.Status <> Wartungsvertrag.Status :: Auftrag)
                                                                  AND (Wartungsvertrag.Status <> Wartungsvertrag.Status :: ACTS)
                                                                  AND (Wartungsvertrag.Status <> Wartungsvertrag.Status :: ACHAT)) THEN
                                                                    ERROR(Text015,Wartungsvertrag."Wartungsvertragsnr.");

                                                                  IF Ablaufdatum = 0D THEN
                                                                    BEGIN
                                                                       v_ablaufdatum := Ablaufdatum_generieren("SUP Artikelnr.","Wartungsvertragsnr.");
                                                                      IF v_ablaufdatum <> 0D THEN
                                                                        BEGIN
                                                                          Laufzeit := FORMAT(TOPAS_API.CalculateTimeDiff('M',WORKDATE,v_ablaufdatum)) + 'M';
                                                                          MESSAGE(Text020,Laufzeit);
                                                                        END;
                                                                    END;

                                                                END;

                                                              //Bei Basisger„ten nicht gestattet, sonst wird evtl. nicht das Vertragsablaufdatum im Vertragskopf ge„ndert

                                                              IF Basisger„t =  TRUE THEN
                                                                TESTFIELD("Wartungsvertragsnr.",'');
                                                            END;

                                                 OnAfterValidate=BEGIN
                                                                   CurrForm.UPDATE;
                                                                 END;
                                                                  }
    { 1140046;Label     ;0    ;0    ;0    ;0    ;ParentControl=1140045;
                                                 InColumnHeading=Yes }
    { 1140011;CommandButton;6600;10230;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Default=Yes;
                                                 PushAction=LookupOK;
                                                 InvalidActionAppearance=Hide }
    { 1140012;CommandButton;9020;10230;2200;550 ;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 Cancel=Yes;
                                                 PushAction=LookupCancel;
                                                 InvalidActionAppearance=Hide }
    { 1140013;CommandButton;11440;10230;2200;550;HorzGlue=Right;
                                                 VertGlue=Bottom;
                                                 PushAction=FormHelp }
    { 1140014;CommandButton;220;1210;2200 ;700  ;Name=btn_alle_pos_holen;
                                                 CaptionML=DEU=Alle Pos. holen;
                                                 OnPush=BEGIN
                                                          AusfhrungPrfen;
                                                          HoleArtikelPos;
                                                        END;
                                                         }
    { 1140015;CommandButton;2750;1210;3300;700  ;Name=btn_preise_berechnen;
                                                 CaptionML=DEU=Kalkulieren;
                                                 OnPush=BEGIN
                                                          AusfhrungPrfen;
                                                          PreiseKalkulieren;
                                                        END;
                                                         }
    { 1140005;Label     ;220  ;330  ;11770;550  ;FontSize=12;
                                                 FontBold=Yes;
                                                 CaptionML=DEU=Kalkulationsblatt }
    { 1140006;CommandButton;6380;1210;2700;700  ;Name=btn_auswahl_sn;
                                                 CaptionML=DEU=Auswahl Seriennr.;
                                                 OnPush=BEGIN
                                                          AusfhrungPrfen;
                                                          TempSeriennrhinzu;
                                                        END;
                                                         }
    { 1140033;TextBox   ;220  ;3960 ;13420;440  ;Name=label_hinweistext;
                                                 Editable=No;
                                                 Focusable=No;
                                                 Border=No;
                                                 SourceExpr=hinweistext;
                                                 OnFormat=BEGIN
                                                            IF hinweistext <> '' THEN
                                                              BEGIN
                                                                CurrForm.label_hinweistext.UPDATEFONTBOLD := TRUE;
                                                                CurrForm.label_hinweistext.UPDATEFORECOLOR := 255;
                                                              END
                                                            ELSE
                                                              BEGIN
                                                                CurrForm.label_hinweistext.UPDATEFONTBOLD := FALSE;
                                                                CurrForm.label_hinweistext.UPDATEFORECOLOR := 0;
                                                              END;
                                                          END;
                                                           }
    { 1140041;MenuButton;9350 ;1210 ;2750 ;660  ;Name=btn_extra_funktionen;
                                                 CaptionML=DEU=Extra Funktionen;
                                                 Menu=MENUITEMS
                                                 {
                                                   { ID=1140032;
                                                     CaptionML=DEU=Logische Positionsbernahme;
                                                     OnPush=BEGIN
                                                              AusfhrungPrfen;
                                                              Logikšbernahme;
                                                            END;
                                                             }
                                                   { ID=1140054;
                                                     CaptionML=DEU=Vorg„ngerkalkulation kopieren;
                                                     OnPush=BEGIN
                                                              AusfhrungPrfen;
                                                              Vorg„ngerKopieren;
                                                            END;
                                                             }
                                                   { ID=1140034;
                                                     MenuItemType=Separator }
                                                   { ID=1140042;
                                                     CaptionML=DEU=Alles l”schen;
                                                     OnPush=BEGIN
                                                              AusfhrungPrfen;
                                                              L”schAllePos;
                                                            END;
                                                             }
                                                   { ID=1140043;
                                                     MenuItemType=Separator }
                                                   { ID=1140044;
                                                     CaptionML=DEU=Fremderwerb;
                                                     OnPush=BEGIN
                                                              AusfhrungPrfen;
                                                              AnlageFremderwerbsPos;
                                                            END;
                                                             }
                                                   { ID=1140063;
                                                     Visible=No;
                                                     MenuItemType=Separator }
                                                   { ID=1140064;
                                                     Visible=No;
                                                     CaptionML=DEU=TEMP_Alle Pos. holen;
                                                     OnPush=BEGIN
                                                              HoleArtikelPos_TEMP;
                                                            END;
                                                             }
                                                   { ID=1140065;
                                                     Visible=No;
                                                     CaptionML=DEU=TEMP_Auswahl Seriennr.;
                                                     OnPush=BEGIN
                                                              TempSeriennrhinzu_TEMP;
                                                            END;
                                                             }
                                                   { ID=1140066;
                                                     Visible=No;
                                                     CaptionML=DEU=TEMP_Fremderwerb;
                                                     OnPush=BEGIN
                                                              AnlageFremderwerb_TEMP;
                                                            END;
                                                             }
                                                 }
                                                  }
    { 1140047;TextBox   ;220  ;2200 ;2200 ;440  ;Name=txtbox_lieferscheinnr;
                                                 SourceExpr=lieferscheinnr;
                                                 TableRelation="Sales Shipment Header" }
    { 1140048;Label     ;2750 ;2200 ;10890;440  ;Name=label_hinweis_lieferschein;
                                                 CaptionML=DEU=Lieferscheinnr. angeben, fr Auftragspositionen leer lassen }
    { 1140049;TextBox   ;220  ;2750 ;2200 ;440  ;Name=txtbox_vertragsnr;
                                                 SourceExpr=wartungsnr;
                                                 TableRelation=Wartungsvertrag }
    { 1140050;Label     ;2750 ;2750 ;10890;440  ;Name=label_hinweis_vertr„ge;
                                                 ForeColor=16744760;
                                                 CaptionML=DEU=Fr Vertragsverl„ngerungen die Vertragsnr. eingeben }
    { 1140051;CommandButton;12210;1210;1430;660 ;Name=btn_exportto_excel;
                                                 ShowCaption=No;
                                                 BitmapPos=Center;
                                                 Bitmap=1478;
                                                 ToolTipML=DEU=Kundeninformationen zur Vertragsverl„ngerung nach Excel exportieren;
                                                 OnPush=BEGIN
                                                          InfosExcelExport;
                                                        END;
                                                         }
    { 1140061;Label     ;2750 ;3300 ;10890;440  ;Name=label_hinweis_kalk_prozentsatz;
                                                 CaptionML=DEU="Fr ACTS = Rabatt, fr ACHAT = Marge eingeben." }
    { 1140062;TextBox   ;220  ;3300 ;2200 ;440  ;Name=txtbox_kalk_prozentsatz;
                                                 SourceExpr=kalk_prozentsatz;
                                                 OnValidate=BEGIN
                                                              Artikel.GET("SUP Artikelnr.");

                                                              IF (kalk_prozentsatz > 20) AND (Artikel.Artikelgruppe = 'APSS_OB') THEN
                                                                ERROR(Text017,20);

                                                              IF (kalk_prozentsatz > 10) AND (Artikel.Artikelgruppe = 'ACTS') THEN
                                                                ERROR(Text017,10);

                                                              IF (kalk_prozentsatz > 5) AND (Artikel.Artikelgruppe = 'ACTS_MSS') THEN
                                                                ERROR(Text017,5);
                                                            END;
                                                             }
  }
  CODE
  {
    VAR
      "AU-Zeile"@1140000 : Record 37;
      Artikel@1140027 : Record 27;
      ™ffneLizenzTab@1140001 : Record 50024;

      Text000@1140002 : TextConst
        'DEU=Beleg konnte entweder nicht gefunden werden oder es handelt sich hierbei nicht um einen AudioCodes System Auftrag. Wenden Sie sich an Ihren Systemadministrator.';

      Text001@1140003 : TextConst
        'DEU=Die kalk. Menge fr ein Basisger„t darf nicht gr”áer als 1 sein. Identische Basisger„te mssen auch in der Kalkulation differenziert voneinander betrachtet werden.';

      Text002@1140004 : TextConst
        'DEU=Bitte hinterlegen Sie fr Artikelnr. %1 eine Serviceklassifizierung im Artikelstamm.';
      Wartungsvertrag@1140024 : Record 50011;
      TOPAS_API@1140033 : Codeunit 50001;
      Excel@1140022 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140021 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140020 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140019 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      j@1140018 : Text[30];
      lieferscheinnr@1140015 : Code[20];
      wartungsnr@1140016 : Code[20];
      kalk_prozentsatz@1140029 : Decimal;
      hinweistext@1140005 : Text[120];

      Text003@1140006 : TextConst
        'DEU=Es wurde bereits ein %1 Preis errechnet, m”chten Sie diesen im Beleg berschreiben?';

      Text004@1140007 : TextConst
        'DEU=Der %1 Preis betr„gt nun %2. Der Vk-Preis im Beleg wurde entsprechend aktualisiert.\Der %3 betr„gt %4.';

      Text005@1140008 : TextConst
        'DEU=Es konnte kein %1 Preis errechnet werden.';

      Text006@1140009 : TextConst
        'DEU=%1 darf in diesem Fall nicht gr”áer sein als %2.';

      Text007@1140010 : TextConst
        'DEU=Diese Kalkulation ist bereits archiviert. Žnderungen sind nicht mehr m”glich.';

      Text008@1140011 : TextConst
        'DEU=Diese Funktion kann nicht fr die nachtr„gliche Kalkulation genutzt werden. Nutzen Sie stattdessen die Standardfunktion zum šbernehmen der Positionen.';

      Text009@1140012 : TextConst
        'DEU=Die Laufzeitanpassung ist nur fr bestimmte Serviceartikel gestattet.';

      Text010@1140013 : TextConst
        'DEU=Es konnte kein Basisger„t in der Kalkulation gefunden werden. Sind Sie sich sicher, dass die Angaben vollst„ndig sind?';

      Text011@1140014 : TextConst
        'DEU=Žnderung nur bei Fremderwerb m”glich.';

      Text012@1140017 : TextConst
        'DEU=Sie k”nnen nicht gleichzeitig einen Lieferschein und einen Wartungsvertrag hinzufgen, bitte treffen Sie nur eine Auswahl.';

      Text013@1140023 : TextConst
        'DEU=Bitte fllen Sie zuerst die Wartungsvertragsnr. aus.';

      Text014@1140025 : TextConst
        'DEU=Der angegebene Wartungsvertrag %1 ist abgelaufen. Sie mssen den gesamten Wartungsvertrag verl„ngern, um diese Buchung durchfhren zu k”nnen.\\Hinweis: Sie k”nnen den Wartungsvertrag gleich mit verl„ngern, indem Sie die Pos. aus dem Wartungsvertrag mit in diese Kalkulation bernehmen.';

      Text015@1140026 : TextConst
        'DEU=Sie k”nnen hier kein Systemvertrag ausw„hlen, es muss sich um einen gltigen Wartungsvertrag handeln.';

      Text016@1140028 : TextConst
        'DEU=Sie drfen nicht verschiedene Basisger„te in einer Kalkulation aufweisen.';

      Text017@1140030 : TextConst
        'DEU=Der ACTS Rabatt darf den Wert von %1 nicht bersteigen.';

      Text018@1140031 : TextConst
        'DEU=Die %1 Marge sollte ber 50 Prozent liegen.';
      v_ablaufdatum@1140035 : Date;
      diff@1140032 : Integer;

      Text019@1140034 : TextConst
        'DEU=Sie k”nnen nicht einzelne Module verl„ngern.Žndern Sie die Kalkulation dahingehend, dass Sie Basisger„t und all seine Komponenten gleichzeitg verl„ngern.';

      Text020@1140036 : TextConst
        'DEU=Die Laufzeit wurde entsprechend des Wartungsvertrages auf %1 angepasst.';

    PROCEDURE HoleArtikelPos@1140007();
    VAR
      "AU-Zeile"@1140000 : Record 37;
      "AU-Zeile_Champ"@1140005 : Record 37;
      "Lief-Zeile"@1140006 : Record 111;
      Artikel@1140007 : Record 27;
      Opt@1140004 : Record 50001;
      ChampRelaDoc@1140001 : Record 50027;
      TempChampRelaDoc@1140002 : Record 50027;
      ServicePos@1140008 : Record 50024;
      VergleichSystemPos@1140009 : Record 50024;
      menge_gesamt@1140010 : Decimal;
      v_zeilennr@1140003 : Integer;
    BEGIN
      IF (lieferscheinnr <> '') AND (wartungsnr <> '') THEN
        ERROR(Text012);

      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN
              IF (lieferscheinnr = '') AND (wartungsnr = '') THEN
                BEGIN
                  "AU-Zeile".RESET;
                  "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
                  "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                  IF "AU-Zeile".FINDFIRST THEN

                    ////CHAMPS bezieht sich auf Auftrag
                    BEGIN
                      REPEAT
                        Artikel.GET("AU-Zeile"."No.");
                        IF Artikel."Software Upgrade Protection" = FALSE THEN
                          BEGIN
                            TempChampRelaDoc.RESET;
                            TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                            TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                            TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                            TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                            TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                            IF NOT TempChampRelaDoc.FINDFIRST THEN
                              BEGIN
                                ChampRelaDoc.INIT;
                                ChampRelaDoc.Art := Art :: "SUP-AU";
                                ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                                ChampRelaDoc."Zeilennr." := v_zeilennr;
                                ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                                ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                                ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                                ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                ChampRelaDoc.VALIDATE("Ger„te Artikelnr.","AU-Zeile"."No.");
                                ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                                //Laufzeit vorbelegen
                                Opt.RESET;
                                Opt.SETFILTER("Tabellen ID",'%1',50024);
                                Opt.SETFILTER("Feld ID",'%1',44);
                                Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                IF Opt.FINDFIRST THEN
                                  ChampRelaDoc.Laufzeit := Opt.Code;
                                ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                ChampRelaDoc.Basisger„t);
                                ChampRelaDoc.INSERT(TRUE);
                              END;
                          END;
                      UNTIL "AU-Zeile".NEXT = 0;
                      CurrForm.UPDATE;
                    END;
                END
              ELSE
                BEGIN
                  ////CHAMPS bezieht sich auf Lieferschein
                  IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN
                    BEGIN
                      "Lief-Zeile".RESET;
                      "Lief-Zeile".SETFILTER("Document No.",'%1',lieferscheinnr);
                      "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                      "Lief-Zeile".SETFILTER(Quantity,'>%1',0);
                      IF "Lief-Zeile".FINDFIRST THEN
                        BEGIN
                          REPEAT
                            Artikel.GET("Lief-Zeile"."No.");
                            IF Artikel."Software Upgrade Protection" = FALSE THEN
                              BEGIN
                                TempChampRelaDoc.RESET;
                                TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                                TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                                TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                                TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"Lief-Zeile"."Document No.");
                                TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"Lief-Zeile"."Line No.");
                                IF NOT TempChampRelaDoc.FINDFIRST THEN
                                  BEGIN
                                    ChampRelaDoc.INIT;
                                    ChampRelaDoc.Art := Art :: "SUP-AU";
                                    ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                                    ChampRelaDoc."Zeilennr." := v_zeilennr;
                                    ChampRelaDoc."Belegnr." := "Lief-Zeile"."Document No.";
                                    ChampRelaDoc."Belegzeilennr." := "Lief-Zeile"."Line No.";
                                    ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                                    ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                    ChampRelaDoc.VALIDATE("Ger„te Artikelnr.","Lief-Zeile"."No.");
                                    ChampRelaDoc."Menge kalk." := "Lief-Zeile".Quantity;
                                    ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
                                    //Laufzeit vorbelegen
                                    Opt.RESET;
                                    Opt.SETFILTER("Tabellen ID",'%1',50024);
                                    Opt.SETFILTER("Feld ID",'%1',44);
                                    Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                    IF Opt.FINDFIRST THEN
                                      ChampRelaDoc.Laufzeit := Opt.Code;
                                    ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                    ChampRelaDoc.Basisger„t);
                                    ChampRelaDoc.INSERT(TRUE);
                                  END;
                              END;
                          UNTIL "Lief-Zeile".NEXT = 0;
                          CurrForm.UPDATE;
                        END
                      ELSE
                        ERROR(Text000);
                    END
                  ELSE
                    BEGIN
                      ////CHAMPS bezieht sich auf einen Wartungsvertrag
                      IF (wartungsnr <> '') THEN
                        BEGIN
                          ServicePos.RESET;
                          ServicePos.SETFILTER(ServicePos.Art,'%1',ServicePos.Art :: Service);
                          ServicePos.SETFILTER(ServicePos."Wartungsvertragsnr.",'%1',wartungsnr);
                          //ServicePos.SETFILTER(Verl„ngerung,'%1',FALSE);
                          ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
                          IF ServicePos.FINDFIRST THEN
                            BEGIN
                              REPEAT
                                TempChampRelaDoc.RESET;
                                TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                                TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                                TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                                TempChampRelaDoc.SETFILTER("Belegnr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                                TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                                IF NOT TempChampRelaDoc.FINDFIRST THEN
                                  BEGIN
                                    ChampRelaDoc.INIT;
                                    ChampRelaDoc.Art := Art :: "SUP-AU";
                                    ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                                    ChampRelaDoc."Zeilennr." := v_zeilennr;
                                    ChampRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                                    ChampRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                                    ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                                    ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                    ChampRelaDoc.VALIDATE("Ger„te Artikelnr.",ServicePos."Artikelnr.");
                                    ChampRelaDoc."Menge kalk." := ServicePos.Menge;
                                    ChampRelaDoc."Vertragsnr. bernommen" := wartungsnr;
                                    ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
                                    ChampRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                                    //Laufzeit vorbelegen
                                    Opt.RESET;
                                    Opt.SETFILTER("Tabellen ID",'%1',50024);
                                    Opt.SETFILTER("Feld ID",'%1',44);
                                    Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                    IF Opt.FINDFIRST THEN
                                      ChampRelaDoc.Laufzeit := Opt.Code;
                                    ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                    ChampRelaDoc.Basisger„t);
                                    ChampRelaDoc.INSERT(TRUE);
                                  END
                                ELSE
                                  BEGIN
                                    VergleichSystemPos.RESET;
                                    VergleichSystemPos.SETFILTER(Art,'%1',VergleichSystemPos.Art :: System);
                                    VergleichSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                    VergleichSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
                                    VergleichSystemPos.SETFILTER("Nr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                                    VergleichSystemPos.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                                    IF VergleichSystemPos.FINDFIRST THEN
                                      BEGIN
                                        menge_gesamt := 0;
                                        REPEAT
                                          menge_gesamt := menge_gesamt + VergleichSystemPos.Menge;
                                        UNTIL VergleichSystemPos.NEXT = 0;
                                        IF TempChampRelaDoc."Menge kalk." < menge_gesamt THEN
                                          BEGIN
                                            TempChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk." + ServicePos.Menge;
                                            TempChampRelaDoc.MODIFY;
                                          END;
                                      END;
                                  END;
                              UNTIL ServicePos.NEXT = 0;
                              CurrForm.UPDATE;
                            END
                          ELSE
                            ERROR(Text000);
                        END
                      ELSE
                        ERROR(Text000);
                    END;
                END;
            END
          ELSE
            ERROR(Text000);
        END;
    END;

    PROCEDURE HoleArtikelPos_TEMP@1140014();
    VAR
      "AU-Zeile"@1140000 : Record 5108;
      "AU-Zeile_Champ"@1140005 : Record 5108;
      "Lief-Zeile"@1140006 : Record 111;
      Artikel@1140007 : Record 27;
      Opt@1140004 : Record 50001;
      ChampRelaDoc@1140001 : Record 50027;
      TempChampRelaDoc@1140002 : Record 50027;
      ServicePos@1140008 : Record 50024;
      VergleichSystemPos@1140009 : Record 50024;
      menge_gesamt@1140010 : Decimal;
      v_zeilennr@1140003 : Integer;
    BEGIN
      IF lieferscheinnr = '' THEN ERROR('TEMP Funktion nur mit Lieferscheinnr. ausfhrbar.');

      IF (lieferscheinnr <> '') AND (wartungsnr <> '') THEN
        ERROR(Text012);

      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN
              IF (lieferscheinnr = '') AND (wartungsnr = '') THEN
                BEGIN
                  "AU-Zeile".RESET;
                  "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
                  "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                  IF "AU-Zeile".FINDFIRST THEN

                    ////CHAMPS bezieht sich auf Auftrag
                    BEGIN
                      REPEAT
                        Artikel.GET("AU-Zeile"."No.");
                        IF Artikel."Software Upgrade Protection" = FALSE THEN
                          BEGIN
                            TempChampRelaDoc.RESET;
                            TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                            TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                            TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                            TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                            TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                            IF NOT TempChampRelaDoc.FINDFIRST THEN
                              BEGIN
                                ChampRelaDoc.INIT;
                                ChampRelaDoc.Art := Art :: "SUP-AU";
                                ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                                ChampRelaDoc."Zeilennr." := v_zeilennr;
                                ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                                ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                                ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                                ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                ChampRelaDoc.VALIDATE("Ger„te Artikelnr.","AU-Zeile"."No.");
                                ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                                //Laufzeit vorbelegen
                                Opt.RESET;
                                Opt.SETFILTER("Tabellen ID",'%1',50024);
                                Opt.SETFILTER("Feld ID",'%1',44);
                                Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                IF Opt.FINDFIRST THEN
                                  ChampRelaDoc.Laufzeit := Opt.Code;
                                ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                ChampRelaDoc.Basisger„t);
                                ChampRelaDoc.INSERT(TRUE);
                              END;
                          END;
                      UNTIL "AU-Zeile".NEXT = 0;
                      CurrForm.UPDATE;
                    END;
                END
              ELSE
                BEGIN
                  ////CHAMPS bezieht sich auf Lieferschein
                  IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN
                    BEGIN
                      "Lief-Zeile".RESET;
                      "Lief-Zeile".SETFILTER("Document No.",'%1',lieferscheinnr);
                      "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                      "Lief-Zeile".SETFILTER(Quantity,'>%1',0);
                      IF "Lief-Zeile".FINDFIRST THEN
                        BEGIN
                          REPEAT
                            Artikel.GET("Lief-Zeile"."No.");
                            IF Artikel."Software Upgrade Protection" = FALSE THEN
                              BEGIN
                                TempChampRelaDoc.RESET;
                                TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                                TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                                TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                                TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"Lief-Zeile"."Document No.");
                                TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"Lief-Zeile"."Line No.");
                                IF NOT TempChampRelaDoc.FINDFIRST THEN
                                  BEGIN
                                    ChampRelaDoc.INIT;
                                    ChampRelaDoc.Art := Art :: "SUP-AU";
                                    ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                                    ChampRelaDoc."Zeilennr." := v_zeilennr;
                                    ChampRelaDoc."Belegnr." := "Lief-Zeile"."Document No.";
                                    ChampRelaDoc."Belegzeilennr." := "Lief-Zeile"."Line No.";
                                    ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                                    ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                    ChampRelaDoc.VALIDATE("Ger„te Artikelnr.","Lief-Zeile"."No.");
                                    ChampRelaDoc."Menge kalk." := "Lief-Zeile".Quantity;
                                    ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
                                    //Laufzeit vorbelegen
                                    Opt.RESET;
                                    Opt.SETFILTER("Tabellen ID",'%1',50024);
                                    Opt.SETFILTER("Feld ID",'%1',44);
                                    Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                    IF Opt.FINDFIRST THEN
                                      ChampRelaDoc.Laufzeit := Opt.Code;
                                    ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                    ChampRelaDoc.Basisger„t);
                                    ChampRelaDoc.INSERT(TRUE);
                                  END;
                              END;
                          UNTIL "Lief-Zeile".NEXT = 0;
                          CurrForm.UPDATE;
                        END
                      ELSE
                        ERROR(Text000);
                    END
                  ELSE
                    BEGIN
                      ////CHAMPS bezieht sich auf einen Wartungsvertrag
                      IF (wartungsnr <> '') THEN
                        BEGIN
                          ServicePos.RESET;
                          ServicePos.SETFILTER(ServicePos.Art,'%1',ServicePos.Art :: Service);
                          ServicePos.SETFILTER(ServicePos."Wartungsvertragsnr.",'%1',wartungsnr);
                          //ServicePos.SETFILTER(Verl„ngerung,'%1',FALSE);
                          ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
                          IF ServicePos.FINDFIRST THEN
                            BEGIN
                              REPEAT
                                TempChampRelaDoc.RESET;
                                TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                                TempChampRelaDoc.SETFILTER("Nr.",'%1',GETFILTER("Nr."));
                                TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',v_zeilennr);
                                TempChampRelaDoc.SETFILTER("Belegnr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                                TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                                IF NOT TempChampRelaDoc.FINDFIRST THEN
                                  BEGIN
                                    ChampRelaDoc.INIT;
                                    ChampRelaDoc.Art := Art :: "SUP-AU";
                                    ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
                                    ChampRelaDoc."Zeilennr." := v_zeilennr;
                                    ChampRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                                    ChampRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                                    ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
                                    ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                                    ChampRelaDoc.VALIDATE("Ger„te Artikelnr.",ServicePos."Artikelnr.");
                                    ChampRelaDoc.VALIDATE("Menge kalk.",ServicePos.Menge);
                                    CurrForm."Menge kalk.".UPDATE;
                                    ChampRelaDoc."Vertragsnr. bernommen" := wartungsnr;
                                    ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
                                    ChampRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                                    //Laufzeit vorbelegen
                                    Opt.RESET;
                                    Opt.SETFILTER("Tabellen ID",'%1',50024);
                                    Opt.SETFILTER("Feld ID",'%1',44);
                                    Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                                    IF Opt.FINDFIRST THEN
                                      ChampRelaDoc.Laufzeit := Opt.Code;
                                    ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                                    ChampRelaDoc.Basisger„t);
                                    ChampRelaDoc.INSERT(TRUE);
                                  END
                                ELSE
                                  BEGIN
                                    VergleichSystemPos.RESET;
                                    VergleichSystemPos.SETFILTER(Art,'%1',VergleichSystemPos.Art :: System);
                                    VergleichSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                    VergleichSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
                                    VergleichSystemPos.SETFILTER("Nr.",'%1',ServicePos."Urspr. Lieferscheinnr.");
                                    VergleichSystemPos.SETFILTER("Belegzeilennr.",'%1',ServicePos."Urspr. Lieferscheinzeilennr.");
                                    IF VergleichSystemPos.FINDFIRST THEN
                                      BEGIN
                                        menge_gesamt := 0;
                                        REPEAT
                                          menge_gesamt := menge_gesamt + VergleichSystemPos.Menge;
                                        UNTIL VergleichSystemPos.NEXT = 0;
                                        IF TempChampRelaDoc."Menge kalk." < menge_gesamt THEN
                                          BEGIN
                                            TempChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk." + ServicePos.Menge;
                                            TempChampRelaDoc.MODIFY;
                                          END;
                                      END;
                                  END;
                              UNTIL ServicePos.NEXT = 0;
                              CurrForm.UPDATE;
                            END
                          ELSE
                            ERROR(Text000);
                        END
                      ELSE
                        ERROR(Text000);
                    END;
                END;
            END
          ELSE
            ERROR(Text000);
        END;
    END;

    PROCEDURE Logikšbernahme@1140009();
    VAR
      "AU-Zeile"@1140007 : Record 37;
      "AU-Zeile_Champ"@1140006 : Record 37;
      "Lief-Zeile"@1140005 : Record 111;
      Artikel@1140004 : Record 27;
      Opt@1140003 : Record 50001;
      ChampRelaDoc@1140002 : Record 50027;
      TempChampRelaDoc@1140001 : Record 50027;
      zeilennr@1140000 : Integer;
      zeilennr_champ@1140008 : Integer;
      zeilennr_ger„t@1140010 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(zeilennr,GETFILTER("Zeilennr."));

          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER(Type,'%1',"AU-Zeile_Champ".Type :: Item);
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN
              IF (lieferscheinnr <> '') THEN ERROR(Text008);

              //Finde die logisch n„chst gelegene Position eines Champ Artikels, vor dieser Position
              zeilennr_champ := 0;
              zeilennr_ger„t := 0;

              "AU-Zeile".RESET;
              "AU-Zeile".SETFILTER(Type,'%1',"AU-Zeile".Type :: Item);
              "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
              "AU-Zeile".SETFILTER("Line No.",'<%1',"AU-Zeile_Champ"."Line No.");
              "AU-Zeile".ASCENDING(FALSE);
              IF "AU-Zeile".FINDFIRST THEN
                REPEAT
                  IF Artikel.GET("AU-Zeile"."No.") THEN
                    BEGIN

                      IF (Artikel."Software Upgrade Protection" = TRUE) AND (zeilennr_ger„t <> 0) THEN
                        zeilennr_champ := "AU-Zeile"."Line No.";

                      IF Artikel."Software Upgrade Protection" = FALSE THEN
                        zeilennr_ger„t := "AU-Zeile"."Line No.";

                    END;
                UNTIL ("AU-Zeile".NEXT = 0) OR ((zeilennr_ger„t <> 0) AND (zeilennr_champ <> 0));

              "AU-Zeile".RESET;
              "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
              "AU-Zeile".SETFILTER("Line No.",'%1..%2',zeilennr_champ,"AU-Zeile_Champ"."Line No.");
              "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
              IF "AU-Zeile".FINDFIRST THEN
                ////CHAMPS bezieht sich auf Auftrag
                BEGIN
                  REPEAT
                    Artikel.GET("AU-Zeile"."No.");
                    IF Artikel."Software Upgrade Protection" = FALSE THEN
                      BEGIN
                        TempChampRelaDoc.RESET;
                        TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                        TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                        TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',zeilennr);
                        TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                        TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                        IF NOT TempChampRelaDoc.FINDFIRST THEN
                          BEGIN
                            ChampRelaDoc.INIT;
                            ChampRelaDoc.Art := Art :: "SUP-AU";
                            ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                            ChampRelaDoc."Zeilennr." := zeilennr;
                            ChampRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                            ChampRelaDoc."Belegzeilennr." := "AU-Zeile"."Line No.";
                            ChampRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                            ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                            ChampRelaDoc.VALIDATE("Ger„te Artikelnr.","AU-Zeile"."No.");
                            ChampRelaDoc."Menge kalk." := "AU-Zeile"."Outstanding Quantity";
                            //Laufzeit vorbelegen
                            Opt.RESET;
                            Opt.SETFILTER("Tabellen ID",'%1',50024);
                            Opt.SETFILTER("Feld ID",'%1',44);
                            Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                            IF Opt.FINDFIRST THEN
                              ChampRelaDoc.Laufzeit := Opt.Code;
                            ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                            ChampRelaDoc.Basisger„t);
                            ChampRelaDoc.INSERT(TRUE);
                          END;
                      END;
                  UNTIL "AU-Zeile".NEXT = 0;
                  CurrForm.UPDATE;
                END;
            END;
        END;
    END;

    PROCEDURE AnlageFremderwerbsPos@1140006();
    VAR
      "AU-Zeile_Champ"@1140001 : Record 37;
      ChampRelaDoc@1140002 : Record 50027;
      PrfeChampRelaDoc@1140003 : Record 50027;
      Opt@1140004 : Record 50001;
      v_zeilennr@1140000 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN
              ChampRelaDoc.INIT;
              ChampRelaDoc.Art := Art :: "SUP-AU";
              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
              ChampRelaDoc."Zeilennr." := v_zeilennr;
              ChampRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
              PrfeChampRelaDoc.RESET;
              PrfeChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art);
              PrfeChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile_Champ"."Document No.");
              PrfeChampRelaDoc.SETFILTER("Zeilennr.",'%1',ChampRelaDoc."Zeilennr.");
              PrfeChampRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
              IF NOT PrfeChampRelaDoc.FINDLAST THEN
                ChampRelaDoc."Belegzeilennr." := 11111
              ELSE
                ChampRelaDoc."Belegzeilennr." := PrfeChampRelaDoc."Belegzeilennr." + 11111;
              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
              ChampRelaDoc.Fremderwerb := TRUE;
              ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
              //Laufzeit vorbelegen
              Opt.RESET;
              Opt.SETFILTER("Tabellen ID",'%1',50024);
              Opt.SETFILTER("Feld ID",'%1',44);
              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
              IF Opt.FINDFIRST THEN
                ChampRelaDoc.Laufzeit := Opt.Code;
              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
              ChampRelaDoc.Basisger„t);
              ChampRelaDoc.INSERT(TRUE);
            END;
        END;
    END;

    PROCEDURE AnlageFremderwerb_TEMP@1140019();
    VAR
      "AU-Zeile_Champ"@1140001 : Record 5108;
      ChampRelaDoc@1140002 : Record 50027;
      PrfeChampRelaDoc@1140003 : Record 50027;
      Opt@1140004 : Record 50001;
      v_zeilennr@1140000 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN
              ChampRelaDoc.INIT;
              ChampRelaDoc.Art := Art :: "SUP-AU";
              ChampRelaDoc."Nr." := "AU-Zeile_Champ"."Document No.";
              ChampRelaDoc."Zeilennr." := v_zeilennr;
              ChampRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
              PrfeChampRelaDoc.RESET;
              PrfeChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art);
              PrfeChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile_Champ"."Document No.");
              PrfeChampRelaDoc.SETFILTER("Zeilennr.",'%1',ChampRelaDoc."Zeilennr.");
              PrfeChampRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
              IF NOT PrfeChampRelaDoc.FINDLAST THEN
                ChampRelaDoc."Belegzeilennr." := 11111
              ELSE
                ChampRelaDoc."Belegzeilennr." := PrfeChampRelaDoc."Belegzeilennr." + 11111;
              ChampRelaDoc."Debitornr." := "AU-Zeile_Champ"."Sell-to Customer No.";
              ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
              ChampRelaDoc.Fremderwerb := TRUE;
              ChampRelaDoc."Nachtr„gliche Service Order" := TRUE;
              //Laufzeit vorbelegen
              Opt.RESET;
              Opt.SETFILTER("Tabellen ID",'%1',50024);
              Opt.SETFILTER("Feld ID",'%1',44);
              Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
              IF Opt.FINDFIRST THEN
                ChampRelaDoc.Laufzeit := Opt.Code;
              ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
              ChampRelaDoc.Basisger„t);
              ChampRelaDoc.INSERT(TRUE);
            END;
        END;
    END;

    PROCEDURE PreiseKalkulieren@1140001();
    VAR
      Belegzeile@1140010 : Record 37;
      "AU-Zeile"@1140002 : Record 37;
      "Lief-Zeile"@1140007 : Record 111;
      ChampRelaDoc@1140001 : Record 50027;
      Artikel@1140011 : Record 27;
      Ger„teArtikel@1140012 : Record 27;
      champ_price_au@1140004 : Decimal;
      champ_price_einzeln@1140005 : Decimal;
      champ_dc_au@1140009 : Decimal;
      champ_dc_einzeln@1140008 : Decimal;
      v_artikelnr@1140013 : Code[20];
      v_laufzeit@1140006 : Integer;
      v_zeilennr@1140000 : Integer;
      anzahl_basissysteme@1140014 : Integer;
      ACTS@1140003 : Boolean;
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN

          //Verbindet zur Belegzeile des zu kalkulierenden Champ Artikels
          Belegzeile.RESET;
          Belegzeile.SETFILTER("Document No.",'%1',"Nr.");
          Belegzeile.SETFILTER("Line No.",'%1',"Zeilennr.");
          Belegzeile.FINDFIRST;

          //ACHAT
          Artikel.GET(Belegzeile."No.");
          IF (Artikel.Artikelgruppe = 'ACHAT') AND (kalk_prozentsatz < 50) THEN
            ERROR(Text018,Artikel.Artikelgruppe);

          //Verhindert jegliche Ausfhrungen oder Žnderungen, solange noch kein Basisger„t hinterlegt ist
          ChampRelaDoc.RESET;
          ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
          ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
          ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
          ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
          ChampRelaDoc.SETFILTER(Basisger„t,'%1',TRUE);
          IF NOT ChampRelaDoc.FINDFIRST THEN
            BEGIN
              IF CONFIRM(Text010,FALSE) THEN
                BEGIN
                END
              ELSE
                EXIT;
            END
          ELSE
            REPEAT
              Ger„teArtikel.GET(ChampRelaDoc."Ger„te Artikelnr.");
              IF (v_artikelnr <> '') AND (ChampRelaDoc."Ger„te Artikelnr." <> v_artikelnr) THEN
                ERROR(Text016);
              v_artikelnr := ChampRelaDoc."Ger„te Artikelnr.";
              IF Ger„teArtikel.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                BEGIN
                  anzahl_basissysteme += 1;
                  IF anzahl_basissysteme > 1 THEN
                    ERROR(Text016);
                END;
              UNTIL ChampRelaDoc.NEXT = 0;

          champ_price_au := 0;
          champ_dc_au := 0;
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

          ChampRelaDoc.RESET;
          ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
          ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
          ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
          IF ChampRelaDoc.FINDFIRST THEN
            REPEAT
              IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",ChampRelaDoc.Basisger„t) = FALSE)
              AND (ChampRelaDoc."Menge kalk." > 1) THEN
                ERROR(Text001);

              IF (ChampRelaDoc."Wartungsvertragsnr." <> '') AND (ChampRelaDoc."Vertragsnr. bernommen" <> '') THEN
                ERROR(Text019);

              ChampRelaDoc.TESTFIELD(Laufzeit);
              ChampRelaDoc.TESTFIELD("Menge kalk.");

              IF ChampRelaDoc.Fremderwerb = FALSE THEN
                BEGIN
                  "AU-Zeile".RESET;
                  "AU-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Belegnr.");
                  "AU-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Belegzeilennr.");
                  "AU-Zeile".SETFILTER("AU-Zeile"."Outstanding Quantity",'>%1',0);
                  "AU-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                  IF "AU-Zeile".FINDFIRST THEN
                    //CHAMPS bezieht sich auf Auftrag
                    BEGIN
                      EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
                      champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
                      ChampRelaDoc."Ger„te Artikelnr.",v_laufzeit,ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                      ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
                      ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
                      ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
                      champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
                      champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",
                      v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode);
                      champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
                      ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
                      ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
                      ChampRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
                      ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Ger„te Artikelnr.",WORKDATE,
                      Belegzeile."Currency Code","AU-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.");
                      ChampRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
                      ChampRelaDoc.MODIFY;
                    END
                  ELSE
                    //CHAMPS bezieht sich auf Lieferschein
                    BEGIN
                      "Lief-Zeile".RESET;
                      "Lief-Zeile".SETFILTER("Document No.",'%1',ChampRelaDoc."Belegnr.");
                      "Lief-Zeile".SETFILTER("Line No.",'%1',ChampRelaDoc."Belegzeilennr.");
                      "Lief-Zeile".SETFILTER("Lief-Zeile".Quantity,'>%1',0);
                      "Lief-Zeile".SETFILTER("Manufacturer Code",'%1','59');
                      IF "Lief-Zeile".FINDFIRST THEN
                        BEGIN
                          "Lief-Zeile".CALCFIELDS("Currency Code");
                          EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
                          //Funktion im Lieferschein einbauen???
                          champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
                          ChampRelaDoc."Ger„te Artikelnr.",v_laufzeit,ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                          ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
                          ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
                          ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
                          champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
                          champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",
                          v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode);
                          champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
                          ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
                          ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
                          ChampRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
                          ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Ger„te Artikelnr.",WORKDATE,
                          Belegzeile."Currency Code","Lief-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.");
                          ChampRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
                          ChampRelaDoc.MODIFY;
                        END;
                    END;
                END
              ELSE
                //CHAMPS bezieht sich auf Pseudo Positionen
                BEGIN
                  EVALUATE(v_laufzeit,COPYSTR(ChampRelaDoc.Laufzeit,1,STRPOS(ChampRelaDoc.Laufzeit,'M')-1));
                  champ_price_einzeln := "AU-Zeile".Gen_Service_VK(ChampRelaDoc."SUP Artikelnr.",
                  ChampRelaDoc."Ger„te Artikelnr.",v_laufzeit,ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.",
                  ChampRelaDoc.Fremderwerb,ChampRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
                  ChampRelaDoc."Service VK-Preis einzeln" := champ_price_einzeln;
                  ChampRelaDoc."Service VK-Preis Zeilenbetrag" := champ_price_einzeln * ChampRelaDoc."Menge kalk.";
                  champ_price_au := champ_price_au + (ChampRelaDoc."Menge kalk." * champ_price_einzeln);
                  champ_dc_einzeln := "AU-Zeile".Gen_Service_DC(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",
                  v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode);
                  champ_dc_au := champ_dc_au + (ChampRelaDoc."Menge kalk." * champ_dc_einzeln);
                  ChampRelaDoc."Service DC einzeln" := champ_dc_einzeln;
                  ChampRelaDoc."Service DC Gesamt" := champ_dc_einzeln * ChampRelaDoc."Menge kalk.";
                  ChampRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
                  ChampRelaDoc."MSRP Service" := "AU-Zeile".FindMSRP(ChampRelaDoc."Ger„te Artikelnr.",WORKDATE,
                  Belegzeile."Currency Code","AU-Zeile"."Unit of Measure Code",ChampRelaDoc."SUP Artikelnr.");
                  ChampRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
                  ChampRelaDoc.MODIFY;
                END;

            UNTIL ChampRelaDoc.NEXT = 0;

            IF champ_price_au <> 0 THEN
              BEGIN
                champ_price_au := ROUND(champ_price_au,1);
                "AU-Zeile".RESET;
                "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
                "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
                IF "AU-Zeile".FINDFIRST THEN
                  BEGIN
                    IF ("AU-Zeile"."Unit Price" <> champ_price_au) AND ("AU-Zeile"."Unit Price" <> 0) THEN
                      IF NOT CONFIRM(Text003,TRUE,Artikel.Artikelgruppe) THEN
                        EXIT;

                    "AU-Zeile".VALIDATE("AU-Zeile"."DC-Preis (EKW)",champ_dc_au);
                    "AU-Zeile".VALIDATE("Unit Price",champ_price_au);
                    "AU-Zeile".MODIFY;

                    MESSAGE(Text004,Artikel.Artikelgruppe,champ_price_au,"AU-Zeile".FIELDCAPTION("DC-Preis (EKW)"),
                            "AU-Zeile"."DC-Preis (EKW)");
                 END;
              END
            ELSE
              MESSAGE(Text005,Artikel.Artikelgruppe);
        END;
    END;

    PROCEDURE EKW„hrungholen@1140010(Belegnr@1140001 : Code[20];Belegzeilennr@1140002 : Integer) : Code[20];
    VAR
      Belegzeile@1140000 : Record 37;
    BEGIN
      Belegzeile.RESET;
      Belegzeile.SETFILTER("Document No.",'%1',Belegnr);
      Belegzeile.SETFILTER("Line No.",'%1',Belegzeilennr);
      IF Belegzeile.FINDFIRST THEN
        EXIT(Belegzeile.Einkaufsw„hrungscode)
      ELSE
        EXIT('');
    END;

    PROCEDURE TempSeriennrhinzu@1140002();
    VAR
      ChampRelaDoc@1140000 : Record 50027;
      LizenzTab@1140001 : Record 50024;
    BEGIN
      TESTFIELD("Nr.");
      TESTFIELD("Zeilennr.");
      TESTFIELD(Art,Art::"SUP-AU");
      TESTFIELD("Debitornr.");
      TESTFIELD("Menge kalk.");
      TESTFIELD("Ger„te Artikelnr.");

      //***************************************************************************************************
      //                          Es muss ein System Basisger„te vorhanden sein
      //              Ausnahme: Alle Champ Kalkulationszeilen haben eine Wartungsvertragsnr.
      //***************************************************************************************************

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art :: "SUP-AU");
      ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
      ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
      ChampRelaDoc.SETFILTER(Basisger„t,'%1',TRUE);
      IF NOT ChampRelaDoc.FINDFIRST THEN
        BEGIN
          ChampRelaDoc.SETFILTER(Basisger„t,'%1|%2',TRUE,FALSE);
          IF ChampRelaDoc.FINDFIRST THEN
            REPEAT
              IF ChampRelaDoc."Wartungsvertragsnr." = '' THEN
                ERROR(Text010);
            UNTIL ChampRelaDoc.NEXT = 0;
        END;

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
      ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
      ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
      ChampRelaDoc.SETFILTER("Nachtr„gliche Service Order",'%1',TRUE);
      IF ChampRelaDoc.FINDFIRST THEN
        REPEAT
          IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",ChampRelaDoc.Basisger„t) = FALSE)
          AND (ChampRelaDoc."Menge kalk." > 1)  THEN
            ERROR(Text001);
          ™ffneLizenzTab.RESET;
          ™ffneLizenzTab.ACSLizenzenHinzu(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                         ChampRelaDoc."Menge kalk.",ChampRelaDoc."Debitornr.",ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
        UNTIL ChampRelaDoc.NEXT = 0;

      LizenzTab.RESET;
      LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Tempor„r);
      LizenzTab.SETFILTER("Auftragsnr.",'%1',"Nr.");
      LizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Zeilennr.");
      IF LizenzTab.FINDFIRST THEN
        FORM.RUN(50027,LizenzTab);
    END;

    PROCEDURE TempSeriennrhinzu_TEMP@1140015();
    VAR
      ChampRelaDoc@1140000 : Record 50027;
      LizenzTab@1140001 : Record 50024;
    BEGIN
      TESTFIELD("Nr.");
      TESTFIELD("Zeilennr.");
      TESTFIELD(Art,Art::"SUP-AU");
      TESTFIELD("Debitornr.");
      TESTFIELD("Menge kalk.");
      TESTFIELD("Ger„te Artikelnr.");

      //***************************************************************************************************
      //                          Es muss ein System Basisger„te vorhanden sein
      //              Ausnahme: Alle Champ Kalkulationszeilen haben eine Wartungsvertragsnr.
      //***************************************************************************************************

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art :: "SUP-AU");
      ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
      ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
      ChampRelaDoc.SETFILTER(Basisger„t,'%1',TRUE);
      IF NOT ChampRelaDoc.FINDFIRST THEN
        BEGIN
          ChampRelaDoc.SETFILTER(Basisger„t,'%1|%2',TRUE,FALSE);
          IF ChampRelaDoc.FINDFIRST THEN
            REPEAT
              IF ChampRelaDoc."Wartungsvertragsnr." = '' THEN
                ERROR(Text010);
            UNTIL ChampRelaDoc.NEXT = 0;
        END;

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
      ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
      ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
      ChampRelaDoc.SETFILTER("Nachtr„gliche Service Order",'%1',TRUE);
      IF ChampRelaDoc.FINDFIRST THEN
        REPEAT
          IF (Pruefung_ignorieren(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.",ChampRelaDoc.Basisger„t) = FALSE)
          AND (ChampRelaDoc."Menge kalk." > 1)  THEN
            ERROR(Text001);
          ™ffneLizenzTab.RESET;
          ™ffneLizenzTab.ACSLizenzenHinzu(ChampRelaDoc."SUP Artikelnr.",ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                         ChampRelaDoc."Menge kalk.",ChampRelaDoc."Debitornr.",ChampRelaDoc."Nr.",ChampRelaDoc."Zeilennr.");
        UNTIL ChampRelaDoc.NEXT = 0;

      LizenzTab.RESET;
      LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Tempor„r);
      LizenzTab.SETFILTER("Auftragsnr.",'%1',"Nr.");
      LizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Zeilennr.");
      IF LizenzTab.FINDFIRST THEN
        FORM.RUN(50027,LizenzTab);
    END;

    PROCEDURE KalkFehlerPrfen@1140003();
    VAR
      AktBeleg@1140002 : Record 36;
      ChampRelaDoc@1140000 : Record 50027;
      TempLizenzTab@1140001 : Record 50024;
      kalk_preis_gesamt@1140003 : Decimal;
      menge_auswahl@1140004 : Integer;
    BEGIN
      hinweistext := '';
      kalk_preis_gesamt := 0;

      AktBeleg.RESET;
      AktBeleg.SETRANGE("No.","Nr.");
      IF NOT AktBeleg.FINDFIRST THEN
        EXIT;

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETRANGE(Art,ChampRelaDoc.Art::"SUP-AU");
      ChampRelaDoc.SETRANGE("Nr.","Nr.");
      ChampRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      IF ChampRelaDoc.FINDFIRST THEN
        REPEAT

          //Prft, ob die Angaben der Kalkulation bgzl. Ger„te Artikelnr. noch stimmig zum Beleg sind
          IF (ChampRelaDoc."Nachtr„gliche Service Order" = FALSE) AND (ChampRelaDoc.Fremderwerb = FALSE) THEN
            BEGIN
              "AU-Zeile".RESET;
              "AU-Zeile".SETRANGE(Type,"AU-Zeile".Type :: Item);
              "AU-Zeile".SETRANGE("Document No.",ChampRelaDoc."Belegnr.");
              "AU-Zeile".SETRANGE("Line No.",ChampRelaDoc."Belegzeilennr.");
              IF "AU-Zeile".FINDFIRST THEN
                BEGIN
                  IF "AU-Zeile"."No." <> ChampRelaDoc."Ger„te Artikelnr." THEN
                    hinweistext := 'Die Artikelnr. '+ ChampRelaDoc."Ger„te Artikelnr." + ' entspricht nicht mehr der Angabe '+
                                   'aus ' + ChampRelaDoc."Belegnr." + ', ' + FORMAT(ChampRelaDoc."Belegzeilennr.");
                END
              ELSE
                hinweistext := 'Die Angabe ' + ChampRelaDoc."Ger„te Artikelnr." + ' in ' + ChampRelaDoc."Belegnr." + ', ' +
                FORMAT(ChampRelaDoc."Belegzeilennr.") + ' existiert nicht mehr im Beleg.';
            END;

          //Prft, ob noch Seriennr. ausgew„hlt werden mssen
          IF ChampRelaDoc."Nachtr„gliche Service Order" = TRUE THEN
            BEGIN
              TempLizenzTab.RESET;
              TempLizenzTab.SETRANGE(Art,TempLizenzTab.Art :: Tempor„r);
              TempLizenzTab.SETRANGE("Auftragsnr.",ChampRelaDoc."Nr.");
              TempLizenzTab.SETRANGE("Auftragszeilennr.",ChampRelaDoc."Zeilennr.");
              TempLizenzTab.SETRANGE("Nr.",ChampRelaDoc."Belegnr.");
              TempLizenzTab.SETRANGE("Belegzeilennr.",ChampRelaDoc."Belegzeilennr.");
              TempLizenzTab.SETRANGE("Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.");
              TempLizenzTab.SETRANGE(Vormerkung,TRUE);
              IF NOT TempLizenzTab.FINDFIRST THEN
                BEGIN
                  hinweistext := 'Fr Artikelnr. ' + ChampRelaDoc."Ger„te Artikelnr." + ' wurden noch nicht gengend ' +
                                 'Seriennr. ausgew„hlt.';
                END
              ELSE
                BEGIN
                  menge_auswahl := 0;
                  REPEAT
                    menge_auswahl := menge_auswahl + TempLizenzTab.Menge;
                  UNTIL TempLizenzTab.NEXT = 0;
                  IF ChampRelaDoc."Menge kalk." > menge_auswahl THEN
                    hinweistext := 'Fr Artikelnr. ' + ChampRelaDoc."Ger„te Artikelnr." + ' wurden noch nicht gengend ' +
                                   'Seriennr. ausgew„hlt.';
                END;
            END;

          //Prft, ob eine Zeile einen Champ Zeilenbetrag von 0 ausweist
          IF ChampRelaDoc."Service VK-Preis Zeilenbetrag" = 0 THEN
            hinweistext := 'Der ' + ChampRelaDoc.FIELDCAPTION("Service VK-Preis Zeilenbetrag")
                            + ' fr ' + ChampRelaDoc."Ger„te Artikelnr." + ' betr„gt 0.';

          kalk_preis_gesamt := kalk_preis_gesamt + ChampRelaDoc."Service VK-Preis Zeilenbetrag";

        UNTIL ChampRelaDoc.NEXT = 0;

      //Prft, ob der Beleg VK-Preis noch mit dem Kalkulations Gesamtpreis bereinstimmt
      "AU-Zeile".RESET;
      "AU-Zeile".SETRANGE("Document No.",ChampRelaDoc."Nr.");
      "AU-Zeile".SETRANGE("Line No.",ChampRelaDoc."Zeilennr.");
      IF "AU-Zeile".FINDFIRST THEN
        IF ROUND(kalk_preis_gesamt,1) <> "AU-Zeile"."Unit Price" THEN
          hinweistext := 'Der Vk-Preis im Beleg stimmt nicht mit dem Gesamtpreis der Kalkulation berein.';

      //Warnung,wenn nur Module hinterlegt sind und die Vertragsnr. leer bleiben
      ChampRelaDoc.RESET;
      ChampRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ChampRelaDoc.SETRANGE(Art,ChampRelaDoc.Art::"SUP-AU");
      ChampRelaDoc.SETRANGE("Nr.","Nr.");
      ChampRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ChampRelaDoc.SETRANGE(Basisger„t,TRUE);
      IF NOT ChampRelaDoc.FINDFIRST THEN
        BEGIN
          ChampRelaDoc.SETRANGE(Basisger„t);
          ChampRelaDoc.SETRANGE("Wartungsvertragsnr.",'');
          IF ChampRelaDoc.FINDFIRST THEN
            hinweistext := 'Bitte fllen Sie die Wartungsvertragsnr. aus.';
        END;
    END;

    PROCEDURE MengeKalkPrfen@1140008();
    VAR
      "AU-Zeile"@1140002 : Record 37;
      "Lief-Zeile"@1140001 : Record 111;
    BEGIN
      IF Fremderwerb = TRUE THEN
        EXIT;

      "AU-Zeile".RESET;
      "AU-Zeile".SETFILTER("Document No.",'%1',"Belegnr.");
      "AU-Zeile".SETFILTER("Line No.",'%1',"Belegzeilennr.");
      IF "AU-Zeile".FINDFIRST THEN
        BEGIN
          IF "Menge kalk." > "AU-Zeile".Quantity THEN
            ERROR(Text006,FIELDCAPTION("Menge kalk."),"AU-Zeile".Quantity);
        END
      ELSE
        BEGIN
          "Lief-Zeile".RESET;
          "Lief-Zeile".SETFILTER("Document No.",'%1',"Belegnr.");
          "Lief-Zeile".SETFILTER("Line No.",'%1',"Belegzeilennr.");
          IF "Lief-Zeile".FINDFIRST THEN
            BEGIN
              IF "Menge kalk." > "Lief-Zeile".Quantity THEN
                ERROR(Text006,FIELDCAPTION("Menge kalk."),"Lief-Zeile".Quantity);
            END
          ELSE
            ERROR('Error');
        END;
    END;

    PROCEDURE AusfhrungPrfen@1140005();
    VAR
      AktBeleg@1140000 : Record 36;
    BEGIN
      AktBeleg.RESET;
      AktBeleg.SETFILTER("No.",'%1',"Nr.");
      IF NOT AktBeleg.FINDFIRST THEN
        ERROR(Text007);
    END;

    PROCEDURE Vorg„ngerKopieren@1140011();
    VAR
      "AU-Zeile"@1140002 : Record 37;
      "AU-Zeile_Champ"@1140006 : Record 37;
      Artikel@1140003 : Record 27;
      Opt@1140007 : Record 50001;
      ChampRelaDoc@1140005 : Record 50027;
      TempChampRelaDoc@1140004 : Record 50027;
      zeilennr_champ@1140001 : Integer;
      zeilennr@1140000 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(zeilennr,GETFILTER("Zeilennr."));

          "AU-Zeile_Champ".RESET;
          "AU-Zeile_Champ".SETFILTER(Type,'%1',"AU-Zeile_Champ".Type :: Item);
          "AU-Zeile_Champ".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile_Champ".SETFILTER("Line No.",'%1',zeilennr);
          IF "AU-Zeile_Champ".FINDFIRST THEN
            BEGIN

              //Finde die logisch n„chst gelegene Position eines Champ Artikels, vor dieser Position
              zeilennr_champ := 0;

              "AU-Zeile".RESET;
              "AU-Zeile".SETFILTER(Type,'%1',"AU-Zeile".Type :: Item);
              "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
              "AU-Zeile".SETFILTER("Line No.",'<%1',zeilennr);
              "AU-Zeile".ASCENDING(FALSE);
              IF "AU-Zeile".FINDFIRST THEN
                BEGIN
                  REPEAT
                    IF Artikel.GET("AU-Zeile"."No.") THEN
                      BEGIN

                        IF (Artikel."Software Upgrade Protection" = TRUE) THEN
                          zeilennr_champ := "AU-Zeile"."Line No.";

                      END;
                  UNTIL ("AU-Zeile".NEXT = 0) OR (zeilennr_champ <> 0);
                END;

                IF zeilennr_champ = 0 THEN EXIT;

                TempChampRelaDoc.RESET;
                TempChampRelaDoc.SETFILTER(Art,'%1',TempChampRelaDoc.Art::"SUP-AU");
                TempChampRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                TempChampRelaDoc.SETFILTER("Zeilennr.",'%1',zeilennr_champ);
                //TempChampRelaDoc.SETFILTER("Belegnr.",'%1',"AU-Zeile"."Document No.");
                //TempChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',"AU-Zeile"."Line No.");
                IF TempChampRelaDoc.FINDFIRST THEN
                  BEGIN
                    REPEAT
                      ChampRelaDoc.INIT;
                      ChampRelaDoc.Art := Art :: "SUP-AU";
                      ChampRelaDoc."Nr." := "AU-Zeile"."Document No.";
                      ChampRelaDoc."Zeilennr." := zeilennr;
                      ChampRelaDoc."Belegnr." := TempChampRelaDoc."Belegnr.";
                      ChampRelaDoc."Belegzeilennr." := TempChampRelaDoc."Belegzeilennr.";
                      ChampRelaDoc."Debitornr." := TempChampRelaDoc."Debitornr.";
                      ChampRelaDoc."SUP Artikelnr." := "AU-Zeile_Champ"."No.";
                      ChampRelaDoc.VALIDATE("Ger„te Artikelnr.",TempChampRelaDoc."Ger„te Artikelnr.");
                      ChampRelaDoc."Menge kalk." := TempChampRelaDoc."Menge kalk.";
                      ChampRelaDoc."Vertragsnr. bernommen" := TempChampRelaDoc."Vertragsnr. bernommen";
                      ChampRelaDoc."Abw. Ger„te Artikelnr." := TempChampRelaDoc."Abw. Ger„te Artikelnr.";
                      ChampRelaDoc."Nachtr„gliche Service Order" := TempChampRelaDoc."Nachtr„gliche Service Order";
                      ChampRelaDoc.Fremderwerb := TempChampRelaDoc.Fremderwerb;
                      //Laufzeit vorbelegen
                      Opt.RESET;
                      Opt.SETFILTER("Tabellen ID",'%1',50024);
                      Opt.SETFILTER("Feld ID",'%1',44);
                      Opt.SETFILTER("Nr.",'%1',ChampRelaDoc."SUP Artikelnr.");
                      IF Opt.FINDFIRST THEN
                        ChampRelaDoc.Laufzeit := Opt.Code;
                      ChampRelaDoc.Gruppierung := Gruppieren(ChampRelaDoc."Belegnr.",ChampRelaDoc."Belegzeilennr.",
                      ChampRelaDoc.Basisger„t);
                      ChampRelaDoc.INSERT(TRUE);
                    UNTIL TempChampRelaDoc.NEXT = 0;
                  END;
                CurrForm.UPDATE;

           END;
        END;
    END;

    PROCEDURE InfosExcelExport@1140000();
    VAR
      ChampRelaDoc@1140014 : Record 50027;
      Wartungsvertrag@1140015 : Record 50011;
      SystemPos@1140003 : Record 50024;
      ServicePos@1140005 : Record 50024;
      text_array@1140000 : ARRAY [5] OF Text[255];
      v_wartungsnr@1140002 : Code[20];
      k@1140001 : Integer;
    BEGIN
      // Definiert die zu importierende Datei
      IF (wartungsnr = '') AND ("Vertragsnr. bernommen" = '') THEN
        ERROR(Text013,Wartungsvertrag.FIELDCAPTION("Wartungsvertragsnr."));

      IF "Vertragsnr. bernommen" <> '' THEN
        v_wartungsnr := "Vertragsnr. bernommen"
      ELSE
        v_wartungsnr := wartungsnr;

      //array 1 = Lieferschein Nr.
      //array 2 = Vertragsablaufdatum
      //array 3 = Ger„te Artikelnr.

      ChampRelaDoc.RESET;
      ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art::"SUP-AU");
      ChampRelaDoc.SETFILTER("Nr.",'%1',"Nr.");
      ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Zeilennr.");
      //ChampRelaDoc.SETFILTER(Fremderwerb,'%1',FALSE);
      IF ChampRelaDoc.FINDFIRST THEN
        BEGIN

          Wartungsvertrag.GET(v_wartungsnr);
          IF Wartungsvertrag.Endkunde = '' THEN
            j := '6'
          ELSE
            j := '7';

          CLEAR(Excel);

          CREATE (Excel);
          Book := Excel.Workbooks.Add(-4167);           //legt neue datei in excel an
          Sheet := Excel.ActiveSheet;                   //definiert aktives worksheet

          //Feste Werte
          Sheet.Range('A1').Value := 'Serviceverl„ngerung fr folgendes System:';
          Sheet.Range('A2').Value := 'Lieferscheinnr.: ';
          Sheet.Range('A3').Value := 'Ende der Vertragslaufzeit: ';

          REPEAT

            ServicePos.RESET;
            ServicePos.SETFILTER(Art,'%1',ServicePos.Art :: Service);
            ServicePos.SETFILTER("Wartungsvertragsnr.",'%1',v_wartungsnr);
            ServicePos.SETFILTER("Urspr. Lieferscheinnr.",'%1',ChampRelaDoc."Belegnr.");
            ServicePos.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',ChampRelaDoc."Belegzeilennr.");
            ServicePos.SETFILTER(Lizenzdatum,'<>%1',0D);
            ServicePos.SETFILTER(Inaktiv,'%1',FALSE);
            IF ServicePos.FINDFIRST THEN
              BEGIN
                IF ChampRelaDoc.Fremderwerb = FALSE THEN
                  BEGIN
                    text_array[1] := Sheet.Range('A2').Value;

                    IF STRPOS(text_array[1],ServicePos."Urspr. Lieferscheinnr.") = 0 THEN
                      IF STRPOS(text_array[1],'LS') > 0 THEN
                        text_array[1] := text_array[1] + ', ' + ServicePos."Urspr. Lieferscheinnr."
                      ELSE
                        text_array[1] := text_array[1] + ServicePos."Urspr. Lieferscheinnr.";
                    Sheet.Range('A2').Value := text_array[1];
                  END;

                k := 1;
                text_array[3] := ChampRelaDoc."Ger„te Artikelnr.";

                REPEAT

                  IF STRLEN(text_array[3]) = STRLEN(ChampRelaDoc."Ger„te Artikelnr.") THEN
                    BEGIN
                      text_array[3] := FORMAT(ChampRelaDoc."Menge kalk.") + 'x ' + text_array[3]
                    END;
                  IF STRPOS(text_array[3],ServicePos."Seriennr.") = 0 THEN
                    BEGIN
                      IF k = 1 THEN
                        text_array[3] := text_array[3] + '  ' + ServicePos."Seriennr."
                      ELSE
                        text_array[3] := text_array[3] + ', ' + ServicePos."Seriennr.";
                      k += 1;
                    END;

                UNTIL ServicePos.NEXT = 0;

                Sheet.Range('A'+j).Value := text_array[3];

                j := INCSTR(j);

              END;

             IF ChampRelaDoc.Basisger„t = TRUE THEN
               BEGIN
                 Wartungsvertrag.GET(v_wartungsnr);
                 text_array[2] := Sheet.Range('A3').Value;
                 text_array[2] := text_array[2] + FORMAT(Wartungsvertrag.Vertragsablaufdatum);
                 Sheet.Range('A3').Value := text_array[2];
                 Sheet.Range('A4').Value := 'Vertragsnr.: ' + Wartungsvertrag."Wartungsvertragsnr.";
                 IF Wartungsvertrag.Endkunde <> '' THEN
                   Sheet.Range('A5').Value := 'Endkunde: ' + Wartungsvertrag.Endkunde;
                 SystemPos.RESET;
                 SystemPos.SETRANGE(Basisger„t,TRUE);
                 SystemPos.SETRANGE("Artikelnr.",ChampRelaDoc."Ger„te Artikelnr.");
                 SystemPos.SETRANGE("Nr.",ChampRelaDoc."Belegnr.");
                 SystemPos.SETRANGE("Seriennr.",ServicePos."Seriennr.");
                 SystemPos.SETRANGE("Belegzeilennr.",ChampRelaDoc."Belegzeilennr.");
                 IF SystemPos.FINDFIRST THEN
                   Sheet.Range('A4').Value := FORMAT(Sheet.Range('A4').Value) + ' / Board ini: ' + SystemPos."Board ini";
               END;

          UNTIL ChampRelaDoc.NEXT = 0;

          Excel.Visible(TRUE);
        END;

      CLEAR(Excel);
    END;

    PROCEDURE L”schAllePos@1140004();
    BEGIN
      IF Rec.HASFILTER THEN
        BEGIN
          IF CONFIRM('Wollen Sie diese Kalkulation wirklich l”schen?') THEN
            DELETEALL(TRUE);
        END;
    END;

    PROCEDURE AktFormTemplate@1140012();
    VAR
      v_Art@1140000 : Text[30];
    BEGIN
      EVALUATE(v_Art,GETFILTER(Art));
      CASE v_Art OF
        'SUP-AU' :
          BEGIN
            CurrForm.btn_neue_pos.VISIBLE(FALSE);
            CurrForm.btn_demo_vorlage.VISIBLE(FALSE);
            CurrForm."Service VK-Preis einzeln".VISIBLE(TRUE);
            CurrForm."Service VK-Preis Zeilenbetrag".VISIBLE(TRUE);
            CurrForm."Service DC einzeln".VISIBLE(TRUE);
            CurrForm."Service DC Gesamt".VISIBLE(TRUE);
            CurrForm."Service DC W„hrungscode".VISIBLE(TRUE);
            CurrForm."Wartungsvertragsnr.".VISIBLE(TRUE);
            CurrForm.Laufzeit.VISIBLE(TRUE);
            CurrForm.Startdatum.VISIBLE(TRUE);
            CurrForm.Ablaufdatum.VISIBLE(TRUE);
            CurrForm."Vertragsnr. bernommen".VISIBLE(TRUE);
            CurrForm."MSRP Service".VISIBLE(TRUE);
          END;
        'SPL-AU' :
          BEGIN
            CurrForm.btn_auswahl_sn.VISIBLE(FALSE);
            CurrForm.label_hinweistext.VISIBLE(FALSE);
            CurrForm.btn_alle_pos_holen.VISIBLE(FALSE);
            CurrForm.btn_preise_berechnen.VISIBLE(FALSE);
            CurrForm.btn_auswahl_sn.VISIBLE(FALSE);
            CurrForm.btn_extra_funktionen.VISIBLE(FALSE);
            CurrForm.btn_exportto_excel.VISIBLE(FALSE);
            CurrForm.label_hinweistext.VISIBLE(FALSE);
            CurrForm.label_hinweis_lieferschein.VISIBLE(FALSE);
            CurrForm.txtbox_lieferscheinnr.VISIBLE(FALSE);
            CurrForm.txtbox_vertragsnr.VISIBLE(FALSE);
            CurrForm.label_hinweis_vertr„ge.VISIBLE(FALSE);
            CurrForm."Service VK-Preis einzeln".VISIBLE(FALSE);
            CurrForm."Service VK-Preis Zeilenbetrag".VISIBLE(FALSE);
            CurrForm."Service DC einzeln".VISIBLE(FALSE);
            CurrForm."Service DC Gesamt".VISIBLE(FALSE);
            CurrForm."Service DC W„hrungscode".VISIBLE(FALSE);
            CurrForm."Wartungsvertragsnr.".VISIBLE(FALSE);
            CurrForm.Laufzeit.VISIBLE(FALSE);
            CurrForm.Startdatum.VISIBLE(FALSE);
            CurrForm.Ablaufdatum.VISIBLE(FALSE);
            CurrForm."Vertragsnr. bernommen".VISIBLE(FALSE);
            CurrForm."MSRP Service".VISIBLE(FALSE);
          END;
      END;
    END;

    PROCEDURE DemoVorlage@1140013();
    VAR
      DemolistRelaDoc@1140003 : Record 50027;
      PrfeDemolistRelaDoc@1140005 : Record 50027;
      Opt_License@1140006 : Record 50001;
      demo_artikel@1140000 : ARRAY [20] OF Code[20];
      anzahl@1140001 : Integer;
      v_zeilennr@1140002 : Integer;
      k@1140004 : Integer;
    BEGIN
      //Splicecom Funktion
      EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
      "AU-Zeile".RESET;
      "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
      "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
      IF "AU-Zeile".FINDFIRST THEN ;

      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));
          "AU-Zeile".RESET;
          "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile".FINDFIRST THEN
            BEGIN
              Opt_License.RESET;
              Opt_License.SETCURRENTKEY("Tabellen ID","Feld ID","Lfd.-Nr.");
              Opt_License.SETFILTER("Tabellen ID",'%1',50027);
              Opt_License.SETFILTER("Feld ID",'%1',5);
              Opt_License.SETFILTER(Code,'%1',"AU-Zeile"."No.");
              IF Opt_License.FINDFIRST THEN
                REPEAT
                  DemolistRelaDoc.INIT;
                  DemolistRelaDoc.Art := Art :: "SPL-AU";
                  DemolistRelaDoc."Nr." := "AU-Zeile"."Document No.";
                  DemolistRelaDoc."Zeilennr." := v_zeilennr;
                  DemolistRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
                  PrfeDemolistRelaDoc.RESET;
                  PrfeDemolistRelaDoc.SETFILTER(Art,'%1',DemolistRelaDoc.Art);
                  PrfeDemolistRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
                  PrfeDemolistRelaDoc.SETFILTER("Zeilennr.",'%1',DemolistRelaDoc."Zeilennr.");
                  IF NOT PrfeDemolistRelaDoc.FINDLAST THEN
                    DemolistRelaDoc."Belegzeilennr." := 11111
                  ELSE
                    DemolistRelaDoc."Belegzeilennr." := PrfeDemolistRelaDoc."Belegzeilennr." + 11111;

                  DemolistRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
                  DemolistRelaDoc."SUP Artikelnr." := "AU-Zeile"."No.";
                  DemolistRelaDoc."Ger„te Artikelnr." := Opt_License."Nr.";
                  DemolistRelaDoc."Menge kalk." := Opt_License.Werte;
                  DemolistRelaDoc.Fremderwerb := TRUE;
                  DemolistRelaDoc.INSERT(TRUE);
                UNTIL Opt_License.NEXT = 0;
            END;
        END;
    END;

    PROCEDURE NeueDemoPos@1140018();
    VAR
      DemolistRelaDoc@1140001 : Record 50027;
      PrfeDemolistRelaDoc@1140002 : Record 50027;
      v_zeilennr@1140000 : Integer;
    BEGIN
      //Splicecom Funktion
      IF Rec.HASFILTER THEN
        BEGIN
          EVALUATE(v_zeilennr,GETFILTER("Zeilennr."));

          "AU-Zeile".RESET;
          "AU-Zeile".SETFILTER("Document No.",'%1',GETFILTER("Nr."));
          "AU-Zeile".SETFILTER("Line No.",'%1',v_zeilennr);
          IF "AU-Zeile".FINDFIRST THEN
            BEGIN
              DemolistRelaDoc.INIT;
              DemolistRelaDoc.Art := Art :: "SPL-AU";
              DemolistRelaDoc."Nr." := "AU-Zeile"."Document No.";
              DemolistRelaDoc."Zeilennr." := v_zeilennr;
              DemolistRelaDoc."Belegnr." := "AU-Zeile"."Document No.";
              PrfeDemolistRelaDoc.RESET;
              PrfeDemolistRelaDoc.SETFILTER(Art,'%1',DemolistRelaDoc.Art);
              PrfeDemolistRelaDoc.SETFILTER("Nr.",'%1',"AU-Zeile"."Document No.");
              PrfeDemolistRelaDoc.SETFILTER("Zeilennr.",'%1',DemolistRelaDoc."Zeilennr.");
              IF NOT PrfeDemolistRelaDoc.FINDLAST THEN
                DemolistRelaDoc."Belegzeilennr." := 11111
              ELSE
                DemolistRelaDoc."Belegzeilennr." := PrfeDemolistRelaDoc."Belegzeilennr." + 11111;
              DemolistRelaDoc."Debitornr." := "AU-Zeile"."Sell-to Customer No.";
              DemolistRelaDoc."SUP Artikelnr." := "AU-Zeile"."No.";
              DemolistRelaDoc.Fremderwerb := TRUE;
              DemolistRelaDoc.INSERT(TRUE);
            END;
        END;
    END;

    PROCEDURE Pruefung_ignorieren@1140017(Service_Artikelnr@1140000 : Code[20];Ger„te_Artikelnr@1140001 : Code[20];Basis@1140004 : Boolean) : Boolean;
    VAR
      Service_Artikel@1140002 : Record 27;
      Ger„te_Artikel@1140003 : Record 27;
    BEGIN
      Ger„te_Artikel.GET(Ger„te_Artikelnr);
      Service_Artikel.GET(Service_Artikelnr);

      IF (Basis = TRUE) AND ((Service_Artikel.Artikelgruppe = 'CHAMPS') OR (Service_Artikel.Artikelgruppe = 'CHAMPS_PARTNER')
      OR (Service_Artikel.Artikelgruppe = 'ACHAT') OR (Service_Artikel.Artikelgruppe = 'ACTS')
      OR (Service_Artikel.Artikelgruppe = 'ACTS_MSS') OR (Service_Artikel.Artikelgruppe = 'ACTS/ACHAT')
      OR (Service_Artikel.Artikelgruppe = 'APSS_OB')
      OR (Service_Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER')) AND (Ger„te_Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    PROCEDURE Ablaufdatum_generieren@1140020(SUPArtikelnr@1140003 : Code[20];Wartungsnr@1140004 : Code[20]) : Date;
    VAR
      PrfeServiceTab@1140002 : Record 50024;
      Ermittle_Servicegruppe@1140001 : Record 50001;
      Artikel_Servicegruppe@1140000 : Record 50001;
    BEGIN
      Ermittle_Servicegruppe.RESET;
      Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
      Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
      Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',SUPArtikelnr);
      IF Ermittle_Servicegruppe.FINDFIRST THEN
        BEGIN
          PrfeServiceTab.RESET;
          PrfeServiceTab.SETFILTER(Art,'%1',PrfeServiceTab.Art :: Service);
          PrfeServiceTab.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
          PrfeServiceTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
          //PrfeServiceTab.SETFILTER("Zu exportieren",'%1',TRUE);
          PrfeServiceTab.SETFILTER(Basisger„t,'%1',TRUE);
          PrfeServiceTab.SETFILTER(Inaktiv,'%1',FALSE);
          PrfeServiceTab.ASCENDING(FALSE);
          IF PrfeServiceTab.FINDFIRST THEN
            REPEAT
              Artikel_Servicegruppe.RESET;
              Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
              Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
              Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PrfeServiceTab."SUP Artikelnr.");
              IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
              Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
                BEGIN
                  EXIT(PrfeServiceTab."Ablaufdatum Serviceleistung");
                END;
          UNTIL PrfeServiceTab.NEXT = 0;
        END;

      EXIT(0D);
    END;

    EVENT Sheet@1140019::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140019::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140019::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140019::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140019::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140019::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140019::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140019::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableBeforeAllocateChange@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1140019::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140021::Open@1923();
    BEGIN
    END;

    EVENT Book@1140021::Activate@304();
    BEGIN
    END;

    EVENT Book@1140021::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140021::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140021::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140021::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140021::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140021::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140021::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140021::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140021::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140021::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140021::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140021::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140021::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140021::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140021::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140021::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140021::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140021::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140021::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140021::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140021::SheetPivotTableBeforeAllocateC@2896(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::SheetPivotTableChangeSync@2899(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140021::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140021::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Excel@1140022::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1140022::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140022::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140022::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140022::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookBeforeSave@1571(Wb@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140022::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140022::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140022::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140022::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140022::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookPivotTableCloseConnect@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookPivotTableOpenConnecti@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookBeforeXmlExport@2292(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookAfterXmlExport@2293(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1140022::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1140022::SheetPivotTableBeforeAllocateC@2896(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140022::ProtectedViewWindowBeforeClose@2906(Pvw@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::ProtectedViewWindowResize@2908(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140022::ProtectedViewWindowActivate@2909(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140022::ProtectedViewWindowDeactivate@2910(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140022::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    {
      # 2013-10-21 ST Splicecom Demo / Lizenz Anbindung
    }
    END.
  }
}

