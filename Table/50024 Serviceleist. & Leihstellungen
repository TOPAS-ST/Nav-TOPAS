
Documentation()
# TOPAS 01.03.2011-ST System wurde um die SUP Software Upgrade Protection erweitert
# TOPAS 26.08.2011-ST Neues CHAMPS System released, erweitertes SUP Modul

OnInsert()
IF (Art = Art :: Service) OR (Art = Art :: System) THEN
  ok := EVALUATE(eingabe,'TOPAS-SERV');
IF Art = Art :: Leihstellung THEN
  ok := EVALUATE(eingabe,'TOPAS-LEIH');
IF Art = Art :: Temporär THEN
  ok := EVALUATE(eingabe,'TOPAS-TEMP');

laufende_nummer:='';
NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
"Lfd. Nr." := laufende_nummer;

IF Art = Art:: Leihstellung THEN
  BEGIN
    Belegdatum := WORKDATE;
    "Gehört zu Lfd. Nr." := "Lfd. Nr.";
  END;

"Angelegt von" := USERID;
"Angelegt am" := WORKDATE;

OnModify()
"Korrigiert von" := USERID;
"Korrigiert am" := WORKDATE;

OnDelete()
IF (Art = Art :: Leihstellung) AND ("Leihstellung zurück" = TRUE) THEN
  IF NOT CONFIRM(Text005,FALSE,"Lfd. Nr.") THEN
    ERROR('');

ToDo.RESET;
ToDo.SETFILTER(ToDo.Aufgabenart,'LEIHSTELLUNG');
ToDo.SETFILTER(ToDo."Belegnr.",'%1',"Lfd. Nr.");
IF ToDo.FINDFIRST THEN
  ERROR(Text006,Art,"Lfd. Nr.");

TopasBemerkungen.RESET;
TopasBemerkungen.SETCURRENTKEY("Nr.",Art,"Artikelnr.","Zeilennr.");
TopasBemerkungen.SETRANGE(TopasBemerkungen."Nr.","Lfd. Nr.");
TopasBemerkungen.DELETEALL;

OnRename()
IF (Art = Art:: Leihstellung) AND ("Nr." <> xRec."Nr.") AND (xRec."Nr." <> '') THEN
  MESSAGE(Text009,"Lfd. Nr.");

Lfd. Nr. - OnValidate()
//IF (Art <> Art :: System) AND ("Lfd. Nr." <> xRec."Lfd. Nr.") AND (xRec."Lfd. Nr." <> '') THEN
//  ERROR(Text000,FIELDCAPTION("Lfd. Nr."));

Lfd. Nr. - OnLookup()

Art - OnValidate()

Art - OnLookup()

Belegdatum - OnValidate()

Belegdatum - OnLookup()

Nr. - OnValidate()
IF Art = Art:: Leihstellung THEN
  BEGIN
    IF NOT Debitor.GET("Nr.") THEN
      ERROR(Text007,Debitor.TABLECAPTION,"Nr.");
  END;

Nr. - OnLookup()

Artikelnr. - OnValidate()
IF Art = Art :: Temporär THEN
  BEGIN
    Artikel.GET("Artikelnr.");
    IF ((Artikel."Item Tracking Code" <> 'SERIENNR') AND (Artikel."Item Tracking Code" <> 'KEINE'))
    OR (Artikel."Manufacturer Code" <> '59') OR (Artikel."Software Upgrade Protection" = TRUE) THEN
      ERROR(Text018);
  END;


IF Item.GET("Artikelnr.") THEN
  "Artikelnr. 2" := Item."No. 2";

IF ("Artikelnr." <> '') AND ("SUP Artikelnr." <> '') AND ("Seriennr." <> '') AND (Art = Art :: Service)
AND (Lizenzdatum <> 0D)THEN
  BEGIN
    Benutzername := Benutzername_generieren("Artikelnr.","SUP Artikelnr.","Seriennr.","Urspr. Lieferscheinnr.",
    "Urspr. Lieferscheinzeilennr.");
    IF Benutzername <> '' THEN
      Passwort := Passwort_generieren("Artikelnr.",Benutzername,"Seriennr.",Lizenzdatum);
  END;

Artikelnr. - OnLookup()

Artikelnr. 2 - OnValidate()

Artikelnr. 2 - OnLookup()

Seriennr. - OnValidate()
IF "Artikelnr." = '' THEN
  ERROR(Text001,FIELDCAPTION("Artikelnr."));

IF Art = Art:: Leihstellung THEN
  BEGIN
    Item.GET("Artikelnr.");
    Artikelposten.RESET;
    Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',"Artikelnr.");
    IF Item."Item Tracking Code" = 'SERIENNR' THEN
      Artikelposten.SETFILTER(Artikelposten."Serial No.",'%1',"Seriennr.")
    ELSE
      Artikelposten.SETFILTER(Artikelposten."Lot No.",'%1',"Seriennr.");
    Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'>%1',0);
    IF NOT Artikelposten.FINDFIRST THEN
      BEGIN
        IF NOT CONFIRM(Text004,FALSE,FIELDCAPTION("Seriennr."),"Seriennr.") THEN
          ERROR('');
      END;
  END;

IF (Art = Art:: Service) AND ("Seriennr." <> '') THEN
  BEGIN
    IF Fremderwerb = TRUE THEN
      BEGIN
      END
    ELSE
      BEGIN
        Artikelposten.RESET;
        Artikelposten.SETFILTER(Artikelposten."Document Type",'Verkaufslieferung');
        Artikelposten.SETFILTER(Artikelposten."Document No.",'%1',"Urspr. Lieferscheinnr.");
        Artikelposten.SETFILTER(Artikelposten."Source No.",'%1',"Debitornr.");
        Artikelposten.SETFILTER(Artikelposten."Item Tracking",'%1',Artikelposten."Item Tracking"::"Serial No.");
        Artikelposten.SETFILTER(Artikelposten."Serial No.",'%1',"Seriennr.");
        IF NOT Artikelposten.FINDFIRST THEN
          ERROR(Text010,FIELDCAPTION("Seriennr."),"Seriennr.");
      END;
    IF ("Seriennr." <> xRec."Seriennr.") AND ("Artikelnr." <> '') AND ("SUP Artikelnr." <> '') AND (Lizenzdatum <> 0D)THEN
      BEGIN
        Benutzername := Benutzername_generieren("Artikelnr.","SUP Artikelnr.","Seriennr.","Urspr. Lieferscheinnr.",
        "Urspr. Lieferscheinzeilennr.");
        Passwort := Passwort_generieren("Artikelnr.",Benutzername,"Seriennr.",Lizenzdatum);
      END;
  END;

IF Art = Art :: Temporär THEN
  BEGIN
    HoleTempLizenzTab.RESET;
    HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
    HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',"Auftragsnr.");
    HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Auftragszeilennr.");
    HoleTempLizenzTab.SETFILTER(Art,'%1',Art :: Temporär);
    HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
    IF HoleTempLizenzTab.FINDFIRST THEN
      ERROR(Text016,FIELDCAPTION("Seriennr."),"Seriennr.");

    IF Artikel.GET("Artikelnr.") AND (Artikel."Item Tracking Code" = 'KEINE') THEN
      ERROR(Text018);

    IF Fremderwerb THEN
      BEGIN

        //11.04.2012-ST Prüfung bei Fremderwerben im gleichen Beleg, ob bei gleicher Seriennr. die Pseudo Referenzen übereinstimmen
        HoleTempLizenzTab.RESET;
        HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
        HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',"Auftragsnr.");
        HoleTempLizenzTab.SETFILTER(Art,'%1',Art :: Temporär);
        HoleTempLizenzTab.SETFILTER("Artikelnr.",'%1',"Artikelnr.");
        HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
        HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
        IF HoleTempLizenzTab.FINDLAST THEN
          IF (HoleTempLizenzTab."Nr." <> "Nr.") OR (HoleTempLizenzTab."Belegzeilennr." <> "Belegzeilennr.") THEN
            ERROR(Text026,FIELDCAPTION("Seriennr."),"Seriennr.",HoleTempLizenzTab."Auftragszeilennr.","Auftragszeilennr.",
            HoleTempLizenzTab."Nr.",HoleTempLizenzTab."Belegzeilennr.");

        //29.04.2013-ST Prüfung bei Fremderwerben, ob bei gleichen Seriennr. die Belegnr. und Belegzeilennr übereinstimmen
        HoleTempLizenzTab.RESET;
        HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
        HoleTempLizenzTab.SETFILTER(Art,'%1',Art :: System);
        HoleTempLizenzTab.SETFILTER("Artikelnr.",'%1',"Artikelnr.");
        HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
        HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
        IF HoleTempLizenzTab.FINDLAST THEN          
          IF (HoleTempLizenzTab."Nr." <> "Nr.") OR (HoleTempLizenzTab."Belegzeilennr." <> "Belegzeilennr.") THEN
            ERROR(Text028,"Seriennr.",HoleTempLizenzTab."Nr.",HoleTempLizenzTab."Belegzeilennr.",
                  HoleTempLizenzTab."Wartungsvertragsnr.");

      END;

    //26.04.2011-ST Verlängerung muss neu geprüft werden, wenn die temporär erzeugte Seriennr. abgeändert wird
    IF PrüfeLizenzVerlängerung("SUP Artikelnr.","Nr.","Belegzeilennr.","Seriennr.",'',Fremderwerb,
    "Dauer Serviceleistung",0,'') <> 0D THEN
      Verlängerung := TRUE
    ELSE
      Verlängerung := FALSE;

  END;

Seriennr. - OnLookup()

Debitornr. - OnValidate()

Debitornr. - OnLookup()

Debitorname - OnValidate()

Debitorname - OnLookup()

Menge - OnValidate()

Menge - OnLookup()

Lizenzdatum - OnValidate()
VALIDATE(Gruppierung);

Lizenzdatum - OnLookup()

Urspr. Buchungsdatum - OnValidate()

Urspr. Buchungsdatum - OnLookup()

Service Artikelnr. - OnValidate()

Service Artikelnr. - OnLookup()

Hauptwartungsvertragsnr. - OnValidate()

Hauptwartungsvertragsnr. - OnLookup()

Service DC - OnValidate()

Service DC - OnLookup()

Service MSRP - OnValidate()

Service MSRP - OnLookup()

Service Währungscode - OnValidate()

Service Währungscode - OnLookup()

Board ini - OnValidate()

Board ini - OnLookup()

Kontakt - OnValidate()

Kontakt - OnLookup()

Name 2 - OnValidate()

Name 2 - OnLookup()

Adresse - OnValidate()

Adresse - OnLookup()

Adresse 2 - OnValidate()

Adresse 2 - OnLookup()

PLZ-Code - OnValidate()

PLZ-Code - OnLookup()

Ort - OnValidate()

Ort - OnLookup()

Leihstellung zurück - OnValidate()
IF "Leihstellung zurück" = TRUE THEN
  "Zurück erhalten am" := WORKDATE;

Leihstellung zurück - OnLookup()

Zurück erhalten am - OnValidate()
IF ("Zurück erhalten am" <> 0D) AND ("Zurück erhalten am" <> xRec."Zurück erhalten am") AND ("Leihstellung zurück" = FALSE) THEN
  "Leihstellung zurück" := TRUE;

Zurück erhalten am - OnLookup()

Kampagnennr. - OnValidate()
//28.04.2011-ST
KontaktDebBez.RESET;
KontaktDebBez.SETFILTER(KontaktDebBez."Business Relation Code",'DEB');
KontaktDebBez.SETFILTER(KontaktDebBez."No.","Nr.");
IF KontaktDebBez.FINDFIRST THEN
  BEGIN
    ProjAnsprech.RESET;
    ProjAnsprech.SETFILTER(ProjAnsprech."Kontaktnr.",'%1',KontaktDebBez."Contact No.");
    ProjAnsprech.SETFILTER(ProjAnsprech."Kampagnennr.",'%1',"Kampagnennr.");
    ProjAnsprech.SETFILTER(ProjAnsprech.Projektstatus,'<>%1','BEENDET');
    IF NOT ProjAnsprech.FINDFIRST THEN
      ERROR('Kein %1 innerhalb des Filters gefunden.\\Filter: Projektstatus <> %2, '+
      'Kontaktnr.: %3, Kampagnennr.: %4',ProjAnsprech.TABLECAPTION,ProjAnsprech.Projektstatus,
      KontaktDebBez."Contact No.","Kampagnennr.");
  END;

Kampagnennr. - OnLookup()
KontaktDebBez.RESET;
KontaktDebBez.SETFILTER(KontaktDebBez."Business Relation Code",'DEB');
KontaktDebBez.SETFILTER(KontaktDebBez."No.","Nr.");
IF KontaktDebBez.FINDFIRST THEN
  BEGIN
    ProjAnsprech.RESET;
    ProjAnsprech.SETFILTER(ProjAnsprech."Kontaktnr.",KontaktDebBez."Contact No.");
    ProjAnsprech.SETFILTER(ProjAnsprech."Kampagnennr.",'<>%1','');
    ProjAnsprech.SETFILTER(ProjAnsprech.Projektstatus,'<>%1','BEENDET');
    IF ProjAnsprech.FINDFIRST THEN BEGIN
      Pos:= ('Kontakt Mandantennr.=CONST('+ProjAnsprech."Kontakt Mandantennr."+'),'+
                   'Kontaktnr.=CONST('+ProjAnsprech."Kontaktnr."+'),'+
                   'Kampagnennr.=CONST('+"Kampagnennr."+'),'+
                   'Memonr.=CONST()');
      ProjAnsprech.SETPOSITION(Pos);
      IF FORM.RUNMODAL(50062,ProjAnsprech) = ACTION::LookupOK THEN
      BEGIN
        "Kampagnennr." :=  ProjAnsprech."Kampagnennr.";
         VALIDATE("Kampagnennr.");
      END;
    END
    ELSE
      ERROR(Text008);
END;

Interne Info - OnValidate()

Interne Info - OnLookup()

Abw. Geräte Artikelnr. - OnValidate()

Abw. Geräte Artikelnr. - OnLookup()

System Projektinfos - OnValidate()

System Projektinfos - OnLookup()

SUP Artikelnr. - OnValidate()
VALIDATE(Gruppierung);

SUP Artikelnr. - OnLookup()

Auftragsnr. - OnValidate()

Auftragsnr. - OnLookup()

Auftragszeilennr. - OnValidate()

Auftragszeilennr. - OnLookup()

Ursprungsland - OnValidate()

Ursprungsland - OnLookup()

Basisgerät - OnValidate()

Basisgerät - OnLookup()

Benutzername - OnValidate()

Benutzername - OnLookup()

Passwort - OnValidate()

Passwort - OnLookup()

Serviceleistung - OnValidate()

Serviceleistung - OnLookup()

Belegzeilennr. - OnValidate()

Belegzeilennr. - OnLookup()

Rechnungsnr. - OnValidate()

Rechnungsnr. - OnLookup()

Rechnungszeilennr. - OnValidate()

Rechnungszeilennr. - OnLookup()

Dauer Serviceleistung - OnValidate()
IF ("SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01') OR ("SUP Artikelnr." = 'RE_INSTATEMENT_FEE') THEN BEGIN END
ELSE
  BEGIN
    IF Lizenzdatum = 0D THEN
      ERROR(Text002,FIELDCAPTION(Lizenzdatum));
    "Ablaufdatum Serviceleistung" := CALCDATE("Dauer Serviceleistung",Lizenzdatum);
  END;

Dauer Serviceleistung - OnLookup()

Ablaufdatum Serviceleistung - OnValidate()

Ablaufdatum Serviceleistung - OnLookup()

Gehört zu Lfd. Nr. - OnValidate()

Gehört zu Lfd. Nr. - OnLookup()

Wartungsvertragsnr. - OnValidate()

Wartungsvertragsnr. - OnLookup()

Fremderwerb - OnValidate()

Fremderwerb - OnLookup()

Verlängerung - OnValidate()

Verlängerung - OnLookup()

Text1 - OnValidate()

Text1 - OnLookup()
Standardtext.SETFILTER(Standardtext.Code,'SERV_LEIH*');
IF Standardtext.FINDFIRST THEN
  BEGIN
    IF FORM.RUNMODAL(FORM::"Standard Text Codes",Standardtext) = ACTION::LookupOK THEN
      BEGIN
        Text1 := Standardtext.Description;
        Text2 := 'leihweise und kostenfrei für ca. 2 Wochen zum Test:';
      END;
  END;

Text2 - OnValidate()

Text2 - OnLookup()

Urspr. Lieferscheinnr. - OnValidate()

Urspr. Lieferscheinnr. - OnLookup()

Urspr. Lieferscheinzeilennr. - OnValidate()

Urspr. Lieferscheinzeilennr. - OnLookup()

Vormerkung - OnValidate()
IF (Verlängerung = TRUE) AND (Vormerkung = TRUE) THEN
  BEGIN
    SystemPos.RESET;
    SystemPos.SETRANGE(Art,SystemPos.Art :: Temporär);
    SystemPos.SETRANGE("Auftragsnr.","Auftragsnr.");
    SystemPos.SETRANGE("Auftragszeilennr.","Auftragszeilennr.");
    SystemPos.SETRANGE(Vormerkung,TRUE);
    IF NOT SystemPos.FINDFIRST THEN
      IF NOT CONFIRM('Sie sind dabei eine Verlängerung für diese Seriennr. abzuschließen. Sind Sie sich wirklich sicher?',TRUE) THEN
        ERROR('');
  END;

IF (Art = Art :: Temporär) AND (Fremderwerb = FALSE) AND (Verlängerung = FALSE) THEN
  BEGIN
    SystemPos.RESET;
    SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
    SystemPos.SETFILTER("Nr.",'%1',"Nr.");
    SystemPos.SETFILTER("Seriennr.",'%1',"Seriennr.");
    IF NOT SystemPos.FINDFIRST THEN
      ERROR(Text024,"Seriennr.","Nr.");
  END;

IF (Art = Art :: Temporär) THEN
  BEGIN
    IF ((Fremderwerb = TRUE) AND (Verlängerung = FALSE)) OR (Vormerkung = FALSE) THEN
      BEGIN
      END
    ELSE
      BEGIN

        SystemPos.CheckDoubleSerialNo("Artikelnr.","Seriennr.");

        SystemPos.RESET;
        SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
        SystemPos.SETFILTER("Nr.",'%1',"Nr.");
        SystemPos.SETFILTER("Belegzeilennr.",'%1',"Belegzeilennr.");
        SystemPos.SETFILTER("Seriennr.",'%1',"Seriennr.");
        SystemPos.FINDFIRST;
        IF (SystemPos.Basisgerät = TRUE) AND (SystemPos."Wartungsvertragsnr." = '') THEN
          ERROR(Text031,FIELDCAPTION(Basisgerät),SystemPos."Seriennr.");

        TempSystemPos.RESET;
        TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art :: Temporär);
        TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
        TempSystemPos.SETFILTER("Auftragsnr.",'%1',"Auftragsnr.");
        TempSystemPos.SETFILTER("Auftragszeilennr.",'%1',"Auftragszeilennr.");
        IF TempSystemPos.FINDFIRST THEN
          BEGIN
            SystemPos.RESET;
            SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
            SystemPos.SETFILTER("Nr.",'%1',"Nr.");
            SystemPos.SETFILTER("Belegzeilennr.",'%1',"Belegzeilennr.");
            SystemPos.SETFILTER("Seriennr.",'%1',"Seriennr.");
            SystemPos.FINDFIRST;
            IF SystemPos.Inaktiv = TRUE THEN
              ERROR(Text030,FIELDCAPTION("Seriennr."),SystemPos."Wartungsvertragsnr.");

            REPEAT
              IF (TempSystemPos.Fremderwerb = TRUE) AND (TempSystemPos.Verlängerung = FALSE) THEN
                BEGIN
                  IF (TempSystemPos.Basisgerät = TRUE) AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                    ERROR(Text027,SystemPos."Lfd. Nr.",SystemPos."Seriennr.",SystemPos."Wartungsvertragsnr.");
                END
              ELSE
                BEGIN
                  VergleichSystemPos.RESET;
                  VergleichSystemPos.SETFILTER(Art,'%1',VergleichSystemPos.Art :: System);
                  VergleichSystemPos.SETFILTER("Nr.",'%1',TempSystemPos."Nr.");
                  VergleichSystemPos.SETFILTER("Belegzeilennr.",'%1',TempSystemPos."Belegzeilennr.");
                  VergleichSystemPos.SETFILTER("Seriennr.",'%1',TempSystemPos."Seriennr.");
                  VergleichSystemPos.FINDFIRST;
                  IF SystemPos."Wartungsvertragsnr." <> VergleichSystemPos."Wartungsvertragsnr." THEN
                    ERROR(Text025,"Seriennr.",SystemPos."Wartungsvertragsnr.",VergleichSystemPos."Wartungsvertragsnr.");
                END;
            UNTIL TempSystemPos.NEXT = 0;
          END;
      END;
  END;

Vormerkung - OnLookup()

Urspr. Auftragsnr. - OnValidate()

Urspr. Auftragsnr. - OnLookup()

Urspr. Auftragszeilennr. - OnValidate()

Urspr. Auftragszeilennr. - OnLookup()

BET-Nr. - OnValidate()

BET-Nr. - OnLookup()

BET-Pos. - OnValidate()

BET-Pos. - OnLookup()

ACO Nr. - OnValidate()

ACO Nr. - OnLookup()

Angelegt von - OnValidate()

Angelegt von - OnLookup()

Angelegt am - OnValidate()

Angelegt am - OnLookup()

Korrigiert von - OnValidate()

Korrigiert von - OnLookup()

Korrigiert am - OnValidate()

Korrigiert am - OnLookup()

Zu exportieren - OnValidate()

Zu exportieren - OnLookup()

Exportiert - OnValidate()

Exportiert - OnLookup()

Exportdatum - OnValidate()

Exportdatum - OnLookup()

Reklamiert - OnValidate()

Reklamiert - OnLookup()

RMA-Nr. - OnValidate()

RMA-Nr. - OnLookup()

Ersatzverfahren - OnValidate()

Ersatzverfahren - OnLookup()

Ersatz für Lfd. Nr. - OnValidate()

Ersatz für Lfd. Nr. - OnLookup()

Urspr. Seriennr. - OnValidate()

Urspr. Seriennr. - OnLookup()

SOR - OnValidate()

SOR - OnLookup()

SOR Option - OnValidate()

SOR Option - OnLookup()

Zum Verschieben markieren - OnValidate()

Zum Verschieben markieren - OnLookup()

Inaktiv - OnValidate()

Inaktiv - OnLookup()

Gruppierung - OnValidate()
IF ("SUP Artikelnr." <> '') AND (Lizenzdatum <> 0D) THEN
  Gruppierung := FORMAT(DATE2DMY(Lizenzdatum,3)) + '_' + FORMAT(DATE2DMY(Lizenzdatum,2)) + '_' + FORMAT(DATE2DMY(Lizenzdatum,1))
                 + '_' + FORMAT(DATE2DMY(Lizenzdatum,1)) + '_' + "SUP Artikelnr.";

Gruppierung - OnLookup()

Adresse_holen()
IF Art = Art :: Leihstellung THEN
  BEGIN
    IF "Artikelnr." = '' THEN
      ERROR(Text001,FIELDCAPTION("Artikelnr."));
    Cust.RESET;
    Cust.SETFILTER(Cust."No.",'%1',"Nr.");
    IF Cust.FINDFIRST THEN
      BEGIN
        "Debitornr." := Cust."No.";
        Debitorname := Cust.Name;
        "Name 2" := Cust."Name 2";
        Adresse := Cust.Address;
        "Adresse 2" := Cust."Address 2";
        Ort := Cust.City;
        "PLZ-Code" := Cust."Post Code";
        MODIFY(TRUE);
      END;
  END;

CreateToDo()
TempToDo.CreateToDoFromLeihstellung(Rec);

Passwort_generieren(Artikelnr : Code[20];Benutzer : Code[40];Seriennr : Code[20];Datum : Date) Passwort : Text[30]
Artikel.GET(Artikelnr);

IF Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS' THEN
  IF (Seriennr = '') OR  (Benutzer = '') THEN
    EXIT('');

LizenzTab.RESET;
LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Service);
LizenzTab.SETFILTER("Artikelnr.",'%1',Artikelnr);
LizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
LizenzTab.SETFILTER(Benutzername,'%1',Benutzer);
LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
IF LizenzTab.FINDFIRST THEN
  EXIT(LizenzTab.Passwort);

//1. Artikelnr. 3, 2. Seriennr., 3. Buchungsdatum - je 3 zufällige Zeichen
passwort_ok := FALSE;

REPEAT
  part[1] := '';
  part[2] := '';
  part[3] := '';

  FOR i:= 1 TO 3 DO
    BEGIN
      part[1] := part[1] + LOWERCASE(COPYSTR(DELCHR(Artikelnr,'=','.,;ß-\/()[]´:<>°§ '),
      RANDOM(STRLEN(DELCHR(Artikelnr,'=','.,;ß-\/()[]´:<>°§ '))),1));
      part[2] := part[2] + LOWERCASE(COPYSTR(DELCHR(Benutzer,'=','.,;ß-\/()[]´:<>°§ '),
      RANDOM(STRLEN(DELCHR(Seriennr,'=','.,;ß-\/()[]´:<>°§ '))),1));
      part[3] := part[3] + LOWERCASE(COPYSTR(DELCHR(FORMAT(Datum),'=','.,;ß-\/()[]´:<>°§ '),
      RANDOM(STRLEN(DELCHR(FORMAT(Datum),'=','.,;ß-\/()[]´:<>°§ '))),1));
    END;

  RANDOMIZE;
  zufall := RANDOM(9);

  CASE zufall OF

  1..3:
    BEGIN
      temp_array[1] := part[1];
      temp_array[2] := part[2];
      temp_array[3] := part[3];
    END;

  4..6:
    BEGIN
      temp_array[1] := part[2];
      temp_array[2] := part[3];
      temp_array[3] := part[1];
    END;

  7..9:
    BEGIN
      temp_array[1] := part[3];
      temp_array[2] := part[1];
      temp_array[3] := part[2];
    END;

  END;

  Passwort := temp_array[1] +temp_array[2] + temp_array[3];

  LizenzTab.RESET;
  LizenzTab.SETFILTER(Passwort,'%1',Passwort);
  IF NOT LizenzTab.FINDFIRST THEN
    passwort_ok := TRUE;

UNTIL passwort_ok = TRUE;

EXIT(Passwort);

Benutzername_generieren(Artikelnr : Code[20];"SUP Artikelnr" : Code[20];Seriennr : Code[20];Belegnr : Code[20];Zeilennr : Integer) Benu
Artikel.GET("Artikelnr.");

IF Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS' THEN
  IF (Seriennr = '') OR ("SUP Artikelnr" = '') THEN
    EXIT('');

Artikel.GET("SUP Artikelnr.");
sup_artikelnr_lang := Artikel."No. 2";
IF (STRPOS("SUP Artikelnr.",'HW') <> 0) OR ("SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR' )
OR ("SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01') OR (STRPOS("SUP Artikelnr.",'RPLC') <> 0)
OR ("SUP Artikelnr." = 'RE_INSTATEMENT_FEE') THEN
  EXIT('');

IF STRPOS(Seriennr,'S/N: ') = 1 THEN
  Seriennr := COPYSTR(Seriennr,STRLEN('S/N: ')+1);

IF STRPOS(Seriennr,'S/N:') = 1 THEN
  Seriennr := COPYSTR(Seriennr,STRLEN('S/N:')+1);

IF STRPOS(Artikelnr,'/') > 0 THEN
  Benutzername := DELCHR(COPYSTR(Artikelnr,1,STRPOS(Artikelnr,'/')-1),'=','-') + '-' + Seriennr
ELSE
  IF STRPOS(Artikelnr,'-') > 0 THEN
    Benutzername := COPYSTR(Artikelnr,1,STRPOS(Artikelnr,'-')) + Seriennr
      ELSE
        Benutzername := DELCHR(COPYSTR(Artikelnr,1,4),'=','- ') + '-' + Seriennr;

Artikel.GET("Artikelnr.");
IF ((Seriennr = '') OR ((Seriennr = 'NA') OR (Seriennr = 'N/A'))) AND (Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') THEN
  BEGIN
     PrüfeLizenzTab.RESET;
     PrüfeLizenzTab.SETRANGE(PrüfeLizenzTab.Art,PrüfeLizenzTab.Art :: Service);
     PrüfeLizenzTab.SETRANGE("Artikelnr.",Artikelnr);
     PrüfeLizenzTab.SETRANGE("Seriennr.",Seriennr);
     PrüfeLizenzTab.SETRANGE("Urspr. Lieferscheinnr.",Belegnr);
     PrüfeLizenzTab.SETRANGE("Urspr. Lieferscheinzeilennr.",Zeilennr);
     IF NOT PrüfeLizenzTab.FINDLAST THEN
       BEGIN
         ok := EVALUATE(eingabe,'TOPAS-USER');
         laufende_nummer:='';
         NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
         Seriennr := laufende_nummer;
         Benutzername := Benutzername + Seriennr;
       END
     ELSE
       IF PrüfeLizenzTab.Benutzername <> '' THEN
         Benutzername := PrüfeLizenzTab.Benutzername
       ELSE
         BEGIN
           ok := EVALUATE(eingabe,'TOPAS-USER');
           laufende_nummer:='';
           NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
           Seriennr := laufende_nummer;
           Benutzername := Benutzername + Seriennr;
         END;
  END;

EXIT(Benutzername);

ACSLizenzenHinzu("SUP Artikelnr" : Code[20];Lieferscheinnr : Code[20];Lieferscheinzeilennr : Integer;"Lizenz Anzahl" : Decimal;Debnr : 
//***************************************************************************************************
//          01.03.2011-ST Für Fall #2 SUP Artikel verweist auf eine Lieferschein Position.
//       Es kann sich hierbei um Verlängerungen, wenn bereits ein Teil der Seriennr. in einem
//      Wartungsvertrag auftauchen, oder um eine nachträgliches Generieren von Lizenzen handeln
//          19.06.2012-ST Überarbeitung für reklamierte Seriennr.
//          27.11.2012-ST Anpassung an zu verlängernde Fremderwerbs Positionen > Fall 2b
//***************************************************************************************************

IF (Lieferscheinnr = '') OR (Lieferscheinzeilennr = 0) THEN
 ERROR(Text012);

IF "Lizenz Anzahl" = 0 THEN
  ERROR(Text013);

//***************************************************************************************************
//      Überprüft vorhandene Auswahl auf Richtigkeit und bietet bei Abweichung die Löschung an
//***************************************************************************************************

PrüfeLizenzTab.RESET;
PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Temporär);
PrüfeLizenzTab.SETFILTER("Debitornr.",'%1',Debnr);
PrüfeLizenzTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
PrüfeLizenzTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
IF (PrüfeLizenzTab.FINDFIRST) AND (PrüfeLizenzTab."Auftragsnr." <> Auftragsnr) THEN
  BEGIN
    IF CONFIRM(Text017,FALSE,'SUP Belegnr.',PrüfeLizenzTab."Nr.",PrüfeLizenzTab."Belegzeilennr.") THEN
      BEGIN
        PrüfeLizenzTab.DELETEALL;
      END
    ELSE
      EXIT;
  END;

//***************************************************************************************************
//                                              Fall 2
//                 Bietet die Möglichkeit, wenn eigentliche Buchung nicht über dieses
//                  Debitorkonto gelaufen ist, einen Betreuungswechsel durchzuführen
//***************************************************************************************************

Artikelposten.RESET;
Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type" :: Sale);
Artikelposten.SETFILTER(Artikelposten."Document No.",'%1',Lieferscheinnr);
Artikelposten.SETFILTER(Artikelposten."Document Line No.",'%1',Lieferscheinzeilennr);
IF Artikelposten.FINDFIRST THEN
  BEGIN
    REPEAT

      zupruefende_seriennr := Artikelposten."Serial No.";
      urspr_seriennr := '';
      ersetzt_lfdnr := '';

      //Wegen RMA Verfahren muss auf Seriennr. Änderung geprüft werden und diese dann weiter verwendet werden
      PrüfeLizenzTab.RESET;
      PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: System);
      PrüfeLizenzTab.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
      PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
      PrüfeLizenzTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
      PrüfeLizenzTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
      IF (PrüfeLizenzTab.FINDFIRST) THEN
        IF (PrüfeLizenzTab.Reklamiert) AND (PrüfeLizenzTab.Ersatzverfahren) THEN
          BEGIN

            ersetzt_lfdnr := PrüfeLizenzTab."Lfd. Nr.";
            urspr_seriennr := '';
            seriennr_ersetzt := FALSE;

            PrüfeNachfolgeSystemPos.RESET;
            //PrüfeNachfolgeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
            PrüfeNachfolgeSystemPos.SETFILTER(Art,'%1',PrüfeNachfolgeSystemPos.Art :: System);
            PrüfeNachfolgeSystemPos.SETFILTER("Urspr. Seriennr.",'%1',Artikelposten."Serial No.");
            PrüfeNachfolgeSystemPos.SETFILTER(Ersatzverfahren,'%1',TRUE);
            PrüfeNachfolgeSystemPos.SETFILTER("Ersatz für Lfd. Nr.",'%1',PrüfeLizenzTab."Lfd. Nr.");
            IF PrüfeNachfolgeSystemPos.FINDLAST THEN
              BEGIN
                urspr_seriennr := PrüfeLizenzTab."Seriennr.";
                REPEAT
                  HoleNeueSystemPos.RESET;
                  HoleNeueSystemPos.SETFILTER(Art,'%1',HoleNeueSystemPos.Art :: System);
                  HoleNeueSystemPos.SETFILTER(Ersatzverfahren,'%1',TRUE);
                  HoleNeueSystemPos.SETFILTER("Ersatz für Lfd. Nr.",'%1',ersetzt_lfdnr);
                  IF HoleNeueSystemPos.FINDLAST THEN
                    BEGIN
                      IF HoleNeueSystemPos.Inaktiv = TRUE THEN 
                        BEGIN 
                          ersetzt_lfdnr := HoleNeueSystemPos."Lfd. Nr."; 
                          urspr_seriennr := HoleNeueSystemPos."Seriennr.";
                          seriennr_ersetzt := TRUE;
                        END 
                      ELSE
                        BEGIN
                          zupruefende_seriennr := HoleNeueSystemPos."Seriennr.";
                          seriennr_ersetzt := FALSE;
                        END;
                    END
                  ELSE
                    seriennr_ersetzt := FALSE;
                UNTIL (seriennr_ersetzt = FALSE) AND (zupruefende_seriennr <> '');
              END;
          END
        ELSE
          BEGIN
            //Fehllieferung von Seriennr., die nicht mehr geändert werden können, 
            //wurden in den Systempositionen geändert
            PrüfeLizenzTab.RESET;
            PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: System);
            PrüfeLizenzTab.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
            PrüfeLizenzTab.SETFILTER("Urspr. Seriennr.",'%1',Artikelposten."Serial No.");
            IF (PrüfeLizenzTab.FINDFIRST) AND (PrüfeLizenzTab.Reklamiert = FALSE)
            AND (PrüfeLizenzTab.Ersatzverfahren = FALSE) THEN
              BEGIN
                zupruefende_seriennr := PrüfeLizenzTab."Seriennr.";
                urspr_seriennr := PrüfeLizenzTab."Urspr. Seriennr.";
              END;
          END;

      TempLizenzTab.RESET;
      TempLizenzTab.SETFILTER(Art,'%1',TempLizenzTab.Art :: Temporär);
      TempLizenzTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
      TempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
      TempLizenzTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
      TempLizenzTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
      TempLizenzTab.SETFILTER("Seriennr.",'%1',zupruefende_seriennr);
      IF TempLizenzTab.FINDFIRST THEN
        BEGIN
        END
      ELSE
        BEGIN
          LizenzTab.INIT;
          LizenzTab.Art := LizenzTab.Art :: Temporär;
          LizenzTab."Nr." := Lieferscheinnr;
          LizenzTab."Belegzeilennr." := Lieferscheinzeilennr;
          LizenzTab.INSERT(TRUE);
          LizenzTab."Debitornr." := Debnr;
          LizenzTab.VALIDATE("Artikelnr.",Artikelposten."Item No.");
          LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
          IF Artikelposten."Item Tracking" = Artikelposten."Item Tracking" :: "Serial No." THEN
            LizenzTab.Menge := Artikelposten.Quantity * (-1)
          ELSE
            LizenzTab.Menge := "Lizenz Anzahl";
          LizenzTab."Seriennr." := zupruefende_seriennr;
          IF urspr_seriennr <> '' THEN BEGIN
            LizenzTab."Urspr. Seriennr." := urspr_seriennr;
          END;
          //Prüfe, ob RMA vorhanden und Ersatz vorliegt
          PrüfeLizenzTab.RESET;
          PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
          PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: System);
          PrüfeLizenzTab.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
          PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
          IF (PrüfeLizenzTab.FINDLAST) AND (PrüfeLizenzTab.Reklamiert) AND (PrüfeLizenzTab.Ersatzverfahren) THEN
            BEGIN
              LizenzTab.Ersatzverfahren := TRUE;
              LizenzTab."Urspr. Seriennr." := urspr_seriennr;
            END;
          LizenzTab.Ursprungsland := Artikelposten.Ursprungsland;
          LizenzTab."Auftragsnr." := Auftragsnr;
          LizenzTab."Auftragszeilennr." := AUzeilennr;
          Liefzeile.GET(Lieferscheinnr,Lieferscheinzeilennr);
          LizenzTab."Urspr. Auftragsnr." := Liefzeile."Order No.";
          LizenzTab."Urspr. Auftragszeilennr." := Liefzeile."Order Line No.";
          LizenzTab.Verlängerung := PrüfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                    LizenzTab."Seriennr.",Debnr);
          LizenzTab.MODIFY;
        END;
    UNTIL Artikelposten.NEXT = 0;
  END
ELSE
  //***************************************************************************************************
  //                                              Fall 2b
  //                 Bietet die Möglichkeit, bereits angelegte Fremderwerbs Positionen
  //                      mit deren Seriennr. zu übernehmen und zu verlängern
  //***************************************************************************************************
  BEGIN
    PrüfeLizenzTab.RESET;
    PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: System);
    PrüfeLizenzTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
    PrüfeLizenzTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
    PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
    IF PrüfeLizenzTab.FINDFIRST THEN
      BEGIN
        REPEAT
          TempLizenzTab.RESET;
          TempLizenzTab.SETFILTER(Art,'%1',TempLizenzTab.Art :: Temporär);
          TempLizenzTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
          TempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
          TempLizenzTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
          TempLizenzTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
          TempLizenzTab.SETFILTER("Seriennr.",'%1',PrüfeLizenzTab."Seriennr.");
          IF TempLizenzTab.FINDFIRST THEN
            BEGIN
            END
          ELSE
            BEGIN
              LizenzTab.INIT;
              LizenzTab.Art := LizenzTab.Art :: Temporär;
              LizenzTab."Nr." := Lieferscheinnr;
              LizenzTab."Belegzeilennr." := Lieferscheinzeilennr;
              LizenzTab.INSERT(TRUE);
              LizenzTab."Debitornr." := Debnr;
              LizenzTab.VALIDATE("Artikelnr.",PrüfeLizenzTab."Artikelnr.");
              LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
              LizenzTab.Menge := PrüfeLizenzTab.Menge;
              LizenzTab."Seriennr." := PrüfeLizenzTab."Seriennr.";
              LizenzTab.Ursprungsland := PrüfeLizenzTab.Ursprungsland;
              LizenzTab."Auftragsnr." := Auftragsnr;
              LizenzTab."Auftragszeilennr." := AUzeilennr;
              LizenzTab."Urspr. Auftragsnr." := PrüfeLizenzTab."Auftragsnr.";
              LizenzTab."Urspr. Auftragszeilennr." := PrüfeLizenzTab."Auftragszeilennr.";
              LizenzTab.Fremderwerb := PrüfeLizenzTab.Fremderwerb;
              LizenzTab.Verlängerung := PrüfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                        LizenzTab."Seriennr.",Debnr);
              LizenzTab.MODIFY;
            END;
        UNTIL PrüfeLizenzTab.NEXT = 0;
      END
    ELSE
      //***************************************************************************************************
      //                                  Fall 3 - Pseudo Vorbelegungen
      //***************************************************************************************************
      BEGIN
        ChampRelaDoc.RESET;
        ChampRelaDoc.SETFILTER(Art,'%1',ChampRelaDoc.Art :: "SUP-AU");
        ChampRelaDoc.SETFILTER("Debitornr.",'%1',Debnr);
        ChampRelaDoc.SETFILTER("Nr.",'%1',Auftragsnr);
        ChampRelaDoc.SETFILTER("Zeilennr.",'%1',AUzeilennr);
        ChampRelaDoc.SETFILTER("Belegnr.",'%1',Lieferscheinnr);
        ChampRelaDoc.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
        ChampRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
        IF ChampRelaDoc.FINDFIRST THEN
          BEGIN
            TempLizenzTab.RESET;
            TempLizenzTab.SETFILTER(Art,'%1',TempLizenzTab.Art :: Temporär);
            TempLizenzTab.SETFILTER("Debitornr.",'%1',Debnr);
            TempLizenzTab.SETFILTER("Artikelnr.",'%1',ChampRelaDoc."Geräte Artikelnr.");
            TempLizenzTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
            TempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
            TempLizenzTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
            TempLizenzTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
            IF TempLizenzTab.FINDFIRST THEN
              BEGIN
                Artikel.GET(ChampRelaDoc."Geräte Artikelnr.");
                IF Artikel."Item Tracking Code" = 'KEINE' THEN
                  BEGIN
                    IF TempLizenzTab.COUNT >= 1 THEN
                      EXIT
                    ELSE
                     z := 1;
                  END
                ELSE
                  z := ChampRelaDoc."Menge kalk." - TempLizenzTab.COUNT;

                FOR k := 1 TO z DO
                  BEGIN
                    LizenzTab.INIT;
                    LizenzTab.Art := LizenzTab.Art :: Temporär;
                    LizenzTab."Nr." := Lieferscheinnr;
                    LizenzTab."Belegzeilennr." := Lieferscheinzeilennr;
                    LizenzTab.INSERT(TRUE);
                    LizenzTab."Debitornr." := ChampRelaDoc."Debitornr.";
                    LizenzTab.VALIDATE("Artikelnr.",ChampRelaDoc."Geräte Artikelnr.");
                    LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
                    IF z = 1 THEN
                      LizenzTab.Menge := ChampRelaDoc."Menge kalk."
                    ELSE
                      LizenzTab.Menge := 1;
                    Artikel.GET(ChampRelaDoc."Geräte Artikelnr.");
                    LizenzTab.Ursprungsland := Artikel."Country/Region of Origin Code";
                    LizenzTab."Auftragsnr." := Auftragsnr;
                    LizenzTab."Auftragszeilennr." := AUzeilennr;
                    LizenzTab."Urspr. Auftragsnr." := 'AU_' + DELCHR(Lieferscheinnr,'<','LS_');
                    LizenzTab."Urspr. Auftragszeilennr." := Lieferscheinzeilennr;
                    LizenzTab.Basisgerät := ChampRelaDoc.Basisgerät;
                    LizenzTab.Vormerkung := TRUE;
                    LizenzTab.Fremderwerb := TRUE;
                    LizenzTab.Verlängerung := PrüfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                              LizenzTab."Seriennr.",Debnr);
                    LizenzTab.MODIFY;
                  END;
              END
            ELSE
              BEGIN
                Artikel.GET(ChampRelaDoc."Geräte Artikelnr.");
                IF Artikel."Item Tracking Code" = 'KEINE' THEN
                  z := 1
                ELSE
                  z := ChampRelaDoc."Menge kalk.";
                FOR k := 1 TO z DO
                  BEGIN
                    LizenzTab.INIT;
                    LizenzTab.Art := LizenzTab.Art :: Temporär;
                    LizenzTab."Nr." := Lieferscheinnr;
                    LizenzTab."Belegzeilennr." := Lieferscheinzeilennr;
                    LizenzTab.INSERT(TRUE);
                    LizenzTab."Debitornr." := ChampRelaDoc."Debitornr.";
                    LizenzTab.VALIDATE("Artikelnr.",ChampRelaDoc."Geräte Artikelnr.");
                    LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
                    IF z = 1 THEN
                      LizenzTab.Menge := ChampRelaDoc."Menge kalk."
                    ELSE
                      LizenzTab.Menge := 1;
                    Artikel.GET(ChampRelaDoc."Geräte Artikelnr.");
                    LizenzTab.Ursprungsland := Artikel."Country/Region of Origin Code";
                    LizenzTab."Auftragsnr." := Auftragsnr;
                    LizenzTab."Auftragszeilennr." := AUzeilennr;
                    LizenzTab."Urspr. Auftragsnr." := 'AU_' + DELCHR(Lieferscheinnr,'<','LS_');
                    LizenzTab."Urspr. Auftragszeilennr." := Lieferscheinzeilennr;
                    LizenzTab.Basisgerät := ChampRelaDoc.Basisgerät;
                    LizenzTab.Vormerkung := TRUE;
                    LizenzTab.Fremderwerb := TRUE;
                    LizenzTab.Verlängerung := PrüfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                              LizenzTab."Seriennr.",Debnr);
                    LizenzTab.MODIFY;
                  END;
              END;
          END
        ELSE
          BEGIN
            ERROR(Text015,Lieferscheinnr,Lieferscheinzeilennr);
            EXIT;
          END;
      END;
  END;
COMMIT;

CreateSystemFromSalesHeader(VAR AUnr : Code[20];SOR_eingeschlossen : Boolean)
//***************************************************************************************************
//      29.08.2011-ST Neue Funktion: Das System holt sich nach Erstellung des Lieferscheins die
//                          entsprechenden Seriennr. aus den Artikelposten
//***************************************************************************************************

Liefkopf.RESET;
Liefkopf.SETFILTER("Order No.",'%1',AUnr);
IF Liefkopf.FINDLAST THEN
  BEGIN

    //SOR Aufträge werden standardmäßig nicht in Systemverträge gewandelt
    IF SOR_eingeschlossen = FALSE THEN
      IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
        EXIT;

    Liefzeile.RESET;
    Liefzeile.SETFILTER(Liefzeile."Document No.",'%1',Liefkopf."No.");
    Liefzeile.SETFILTER("Manufacturer Code",'%1','59');
    Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type::Item);
    Liefzeile.SETFILTER(Quantity,'>%1',0);
    IF Liefzeile.FINDFIRST THEN
      REPEAT

        wartungsnr := '';
        hauptwartungsnr := '';

        Artikel.GET(Liefzeile."No.");
        IF Artikel."Software Upgrade Protection" = FALSE THEN
          BEGIN

            //***************************************************************************************************
            //                         Generierung des Systemvertrages für Chassis o.ä.
            //***************************************************************************************************

            IF Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS' THEN
              BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN
                  BEGIN
                    Wartung.INIT;
                    Wartung.Status := Wartung.Status :: System;
                    Wartung.Klasse := Wartung.Klasse :: Einzelgerät;
                    Wartung.Volumen := 1;
                    Wartung.Startdatum := Liefkopf."Posting Date";
                    Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
                      BEGIN
                        Wartung.SOR := TRUE;
                        Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                      END;
                    //Des Basisgerätes
                    Wartung."Auftragsnr." := Liefzeile."Order No.";
                    Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                    Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                    Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                    IF Auftrag.GET(Auftrag."Document Type" :: Order,Wartung."Auftragsnr.") THEN
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus :: Aktuell
                    ELSE
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus :: Archiviert;
                    Wartung.Endkunde := Liefkopf.Endkunde;
                    Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                    Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                    Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                    Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                    Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                    Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                    Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                    Wartung.INSERT(TRUE);

                    PrüfeHauptWartung.RESET;
                    PrüfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                    PrüfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                    IF NOT PrüfeHauptWartung.FINDFIRST THEN
                      BEGIN
                        Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        Wartung.MODIFY(TRUE);
                      END
                    ELSE
                      BEGIN
                        Wartung."Hauptwartungsvertragsnr." := PrüfeHauptWartung."Wartungsvertragsnr.";
                        Wartung.MODIFY(TRUE);
                      END;

                   //***************************************************************************************************
                   //             Sonderfall, wenn im Auftrag vorträglich ein Modul etc. und dann erst das
                   //          Basisgerät gebucht wird, die auch in der Champ Kalkulation zusammengehörig sind
                   //             Verlorene Systempositionen ohne Vertragsnr. werden diesem WV zugeordnet
                   //***************************************************************************************************

                   PrüfeCHAMPZuordnung.RESET;
                   PrüfeCHAMPZuordnung.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                   PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                   PrüfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',AUnr);
                   PrüfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                   IF PrüfeCHAMPZuordnung.FINDFIRST THEN
                     BEGIN
                       CHAMPZuordnungHolen.RESET;
                       CHAMPZuordnungHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                       CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
                       CHAMPZuordnungHolen.SETFILTER("Nr.",'%1',PrüfeCHAMPZuordnung."Nr.");
                       CHAMPZuordnungHolen.SETFILTER("Zeilennr.",'%1',PrüfeCHAMPZuordnung."Zeilennr.");
                       IF CHAMPZuordnungHolen.FINDFIRST THEN
                         REPEAT
                           UnzugeordneteSystemPos.RESET;
                           UnzugeordneteSystemPos.SETFILTER(Art,'%1',Art :: System);
                           UnzugeordneteSystemPos.SETFILTER("Artikelnr.",'%1',CHAMPZuordnungHolen."Geräte Artikelnr.");
                           UnzugeordneteSystemPos.SETFILTER("Auftragsnr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                           UnzugeordneteSystemPos.SETFILTER("Auftragszeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                           UnzugeordneteSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                           IF UnzugeordneteSystemPos.FINDFIRST THEN
                             REPEAT
                               UnzugeordneteSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                               UnzugeordneteSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                               UnzugeordneteSystemPos.MODIFY;
                             UNTIL UnzugeordneteSystemPos.NEXT = 0;
                         UNTIL CHAMPZuordnungHolen.NEXT = 0;
                     END;

                    //NEU 26.11.2013 - Bugfix

                    //***************************************************************************************************
                    //         Sonderfall, wenn Basisgerät im Auftrag gebucht wird und mind. ein Modul
                    //        aus unseren Lieferungen stammt und alle in einer Champ Kalkulation aufgestellt sind,
                    //          dann werden die verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                    //***************************************************************************************************

                    PrüfeCHAMPZuordnung.RESET;
                    PrüfeCHAMPZuordnung.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                    PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                    PrüfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',AUnr);
                    PrüfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                    IF PrüfeCHAMPZuordnung.FINDFIRST THEN
                      BEGIN
                        CHAMPZuordnungHolen.RESET;
                        CHAMPZuordnungHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                        CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
                        CHAMPZuordnungHolen.SETFILTER("Nr.",'%1',PrüfeCHAMPZuordnung."Nr.");
                        CHAMPZuordnungHolen.SETFILTER("Zeilennr.",'%1',PrüfeCHAMPZuordnung."Zeilennr.");
                        IF CHAMPZuordnungHolen.FINDFIRST THEN
                          REPEAT
                            UnzugeordneteSystemPos.RESET;
                            UnzugeordneteSystemPos.SETFILTER(Art,'%1',Art :: System);
                            UnzugeordneteSystemPos.SETFILTER("Artikelnr.",'%1',CHAMPZuordnungHolen."Geräte Artikelnr.");
                            UnzugeordneteSystemPos.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                            UnzugeordneteSystemPos.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                            UnzugeordneteSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                            IF UnzugeordneteSystemPos.FINDFIRST THEN
                              REPEAT
                                TempSystemPos.RESET;
                                TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art :: Temporär);
                                TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
                                TempSystemPos.SETFILTER("Nr.",'%1',UnzugeordneteSystemPos."Nr.");
                                TempSystemPos.SETFILTER("Belegzeilennr.",'%1',UnzugeordneteSystemPos."Belegzeilennr.");
                                TempSystemPos.SETFILTER("Artikelnr.",'%1',UnzugeordneteSystemPos."Artikelnr.");
                                TempSystemPos.SETFILTER("Seriennr.",'%1',UnzugeordneteSystemPos."Seriennr.");
                                IF TempSystemPos.FINDFIRST THEN
                                  BEGIN
                                    UnzugeordneteSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                    UnzugeordneteSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                    UnzugeordneteSystemPos.MODIFY;
                                    MESSAGE('Pos. %1 nachträglich zugeordnet in %2 %3',UnzugeordneteSystemPos."Lfd. Nr.",
                                    Wartung.TABLECAPTION,Wartung."Wartungsvertragsnr.");
                                  END;
                              UNTIL UnzugeordneteSystemPos.NEXT = 0;
                          UNTIL CHAMPZuordnungHolen.NEXT = 0;
                      END;


                    //***************************************************************************************************
                    //                           Anlage der Führungsrolle anhand des Debitoren
                    //***************************************************************************************************

                    DebKontaktBez.RESET;
                    DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                    DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                    IF DebKontaktBez.FINDFIRST THEN
                      BEGIN
                        Ansprech.RESET;
                        Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                        Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                        IF NOT Ansprech.FINDFIRST THEN
                          BEGIN
                            Ansprech.INIT;
                            Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                            Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                            Ansprech.Führungsrolle := TRUE;
                            Ansprech.INSERT;
                          END;
                      END;
                  END;
              END;

            //***************************************************************************************************
            //                          Generierung des Systemvertrages für FLAT Geräte
            //***************************************************************************************************

            IF Artikel.Serviceklassifizierung = 'SYSTEM FLAT' THEN
              BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN
                  BEGIN
                    Wartung.INIT;
                    Wartung.Status := Wartung.Status :: System;
                    Wartung.Klasse := Wartung.Klasse :: Mehrgeräte;
                    //Für Merhgeräte immer 0, da das Volumen später durch die Einzelpositionen hochgezählt wird
                    Wartung.Volumen := 0;
                    Wartung.Startdatum := Liefkopf."Posting Date";
                    Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
                      BEGIN
                        Wartung.SOR := TRUE;
                        Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                      END;
                    //Des Basisgerätes
                    Wartung."Auftragsnr." := Liefzeile."Order No.";
                    Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                    Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                    Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                    IF Auftrag.GET(Auftrag."Document Type" :: Order,Wartung."Auftragsnr.") THEN
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus :: Aktuell
                    ELSE
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus :: Archiviert;
                    Wartung.Endkunde := Liefkopf.Endkunde;
                    Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                    Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                    Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                    Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                    Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                    Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                    Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                    Wartung.INSERT(TRUE);

                    PrüfeHauptWartung.RESET;
                    PrüfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                    PrüfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                    IF NOT PrüfeHauptWartung.FINDFIRST THEN
                      BEGIN
                        Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        Wartung.MODIFY(TRUE);
                      END
                    ELSE
                      BEGIN
                        Wartung."Hauptwartungsvertragsnr." := PrüfeHauptWartung."Wartungsvertragsnr.";
                        Wartung.MODIFY(TRUE);
                      END;

                    //Anlage der Führungsrolle anhand des Debitoren
                    DebKontaktBez.RESET;
                    DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                    DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                    IF DebKontaktBez.FINDFIRST THEN
                      BEGIN
                        Ansprech.RESET;
                        Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                        Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                        IF NOT Ansprech.FINDFIRST THEN
                          BEGIN
                            Ansprech.INIT;
                            Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                            Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                            Ansprech.Führungsrolle := TRUE;
                            Ansprech.INSERT;
                          END;
                      END;
                  END;
              END;

            //***************************************************************************************************
            //         Auswahlfenster zum Vorbelegen des Wartungs- bzw. Systemvertrages bei nachträglich
            //   gelieferten Modulen,Softwarelizenzen etc. ohne jegliche Wartungs oder Systemgeräte Positionen
            //***************************************************************************************************

            IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
              BEGIN
                system_champs_verbindung := FALSE;

                //Prüfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                PrüfeCHAMPZuordnung.RESET;
                PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                PrüfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                PrüfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                IF NOT PrüfeCHAMPZuordnung.FINDFIRST THEN
                  BEGIN
                    //Prüfe ob Systemartikel alleinstehend gebucht wurde
                    PrüfeSystemLiefzeile.RESET;
                    PrüfeSystemLiefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
                    PrüfeSystemLiefzeile.SETFILTER(Type,'%1',PrüfeSystemLiefzeile.Type :: Item);
                    PrüfeSystemLiefzeile.SETFILTER(Quantity,'>%1',0);
                    IF PrüfeSystemLiefzeile.FINDFIRST THEN
                      BEGIN
                        REPEAT
                          IF (Artikel.GET(PrüfeSystemLiefzeile."No.")) AND (Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') THEN
                            BEGIN
                              PrüfeCHAMPZuordnung.RESET;
                              PrüfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrüfeSystemLiefzeile."Order No.");
                              PrüfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrüfeSystemLiefzeile."Order Line No.");
                              IF NOT PrüfeCHAMPZuordnung.FINDFIRST THEN
                                BEGIN
                                  system_champs_verbindung := TRUE;
                                END;
                            END;
                        UNTIL PrüfeSystemLiefzeile.NEXT = 0;

                        IF (system_champs_verbindung = FALSE) AND (Liefzeile."ACS Projektinfos" <> '') THEN
                          BEGIN
                            MESSAGE(Text019,Liefzeile."No.",Liefzeile."Line No.",Liefzeile.FIELDCAPTION("ACS Projektinfos"),
                            Liefzeile."ACS Projektinfos");
                            COMMIT;
                            CLEAR(WartungsÜbersicht);
                            WartungsÜbersicht.SETFILTER("Debitornr.",'%1',Liefkopf."Sell-to Customer No.");
                            IF WartungsÜbersicht.FINDFIRST THEN
                              BEGIN
                                IF FORM.RUNMODAL(50024,WartungsÜbersicht) = ACTION::LookupOK THEN
                                  BEGIN
                                     wartungsnr := WartungsÜbersicht."Wartungsvertragsnr.";
                                     hauptwartungsnr := WartungsÜbersicht."Hauptwartungsvertragsnr.";
                                  END
                                ELSE
                                  BEGIN
                                    MESSAGE(Text020,Liefzeile."No.",Liefzeile."Line No.");
                                  END;
                              END
                            ELSE
                              MESSAGE(Text023);
                          END;
                      END;
                  END;
              END;

            //***************************************************************************************************
            //                                    Anlage der Systempositionen
            //***************************************************************************************************

            SeriennrVerfolgung.RESET;
            //SeriennrVerfolgung.SETFILTER("Item Tracking",'%1',SeriennrVerfolgung."Item Tracking":: "Serial No.");
            SeriennrVerfolgung.SETFILTER("Document No.",'%1',Liefzeile."Document No.");
            SeriennrVerfolgung.SETFILTER("Document Line No.",'%1',Liefzeile."Line No.");
            IF SeriennrVerfolgung.FINDFIRST THEN
              REPEAT
                SystemPos.RESET;
                SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
                SystemPos.SETFILTER("Nr.",'%1',Liefkopf."No.");
                SystemPos.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Line No.");
                SystemPos.SETFILTER("Artikelnr.",'%1',Liefzeile."No.");
                SystemPos.SETFILTER("Seriennr.",'%1',SeriennrVerfolgung."Serial No.");
                IF NOT SystemPos.FINDFIRST THEN
                  BEGIN
                    SystemPos.RESET;
                    SystemPos.INIT;
                    SystemPos.Art := SystemPos.Art :: System;
                    SystemPos."Nr." := Liefkopf."No.";
                    SystemPos.INSERT(TRUE);
                    SystemPos.Belegdatum := SeriennrVerfolgung."Posting Date";
                    SystemPos.VALIDATE("Artikelnr.",Liefzeile."No.");
                    SystemPos."Seriennr." := SeriennrVerfolgung."Serial No.";
                    SystemPos."Debitornr." := Liefkopf."Sell-to Customer No.";
                    SystemPos.Debitorname := Liefkopf."Sell-to Customer Name";
                    SystemPos.Menge := SeriennrVerfolgung.Quantity * (-1);
                    SystemPos.Kontakt := Liefkopf."Sell-to Contact";
                    SystemPos."Name 2" := Liefkopf."Sell-to Customer Name 2";
                    SystemPos.Adresse := Liefkopf."Sell-to Address";
                    SystemPos."Adresse 2" := Liefkopf."Sell-to Address 2";
                    SystemPos."PLZ-Code" := Liefkopf."Sell-to Post Code";
                    SystemPos.Ort := Liefkopf."Sell-to City";
                    SystemPos."System Projektinfos" := Liefzeile."ACS Projektinfos";
                    SystemPos."Auftragsnr." := Liefkopf."Order No.";
                    SystemPos."Auftragszeilennr." := Liefzeile."Line No.";
                    SystemPos.Ursprungsland := SeriennrVerfolgung.Ursprungsland;
                    SystemPos."Belegzeilennr." := Liefzeile."Line No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
                      BEGIN
                        SystemPos.SOR := TRUE;
                        SystemPos."SOR Option" := Liefkopf."Payment Terms Code";
                      END;

                    IF (wartungsnr <> '') AND (hauptwartungsnr <> '') THEN
                      BEGIN
                        SystemPos."Wartungsvertragsnr." := wartungsnr;
                        SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                      END
                    ELSE
                      BEGIN
                        PrüfeCHAMPZuordnung.RESET;
                        PrüfeCHAMPZuordnung.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                        PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                        PrüfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',AUnr);
                        PrüfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                        IF PrüfeCHAMPZuordnung.FINDFIRST THEN
                          BEGIN
                            CHAMPZuordnungHolen.RESET;
                            CHAMPZuordnungHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                            CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
                            CHAMPZuordnungHolen.SETFILTER(Basisgerät,'%1',TRUE);
                            CHAMPZuordnungHolen.SETFILTER("Nr.",'%1',PrüfeCHAMPZuordnung."Nr.");
                            CHAMPZuordnungHolen.SETFILTER("Zeilennr.",'%1',PrüfeCHAMPZuordnung."Zeilennr.");
                            IF (CHAMPZuordnungHolen.FINDFIRST) AND (CHAMPZuordnungHolen."Belegnr." = Wartung."Auftragsnr.")
                            AND (CHAMPZuordnungHolen."Belegzeilennr." = Wartung."Auftragszeilennr.") THEN
                              BEGIN
                                SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                              END;
                          END
                        ELSE
                          BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END;
                      END;

                    IF (Artikel.GET(SeriennrVerfolgung."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                    OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN
                      BEGIN
                        SystemPos.Basisgerät := TRUE;
                        Wartung.GET(SystemPos."Wartungsvertragsnr.");
                        Wartung.Basisgerät := SystemPos."Artikelnr.";
                        Wartung."Ablauf Gewährleistung" := CALCDATE('1J-1T',SeriennrVerfolgung."Posting Date");
                        IF Wartung.Klasse = Wartung.Klasse :: Mehrgeräte THEN
                          Wartung.Volumen += 1;
                        Wartung.MODIFY(TRUE);
                      END;

                    IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                      Wartung.MODIFY(TRUE)
                    ELSE
                      //Einzel Modul im AU + Champ Kalkulation mit Basisgerät aus LS usw.
                      BEGIN
                        CHAMPZuordnungHolen.RESET;
                        CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
                        CHAMPZuordnungHolen.SETFILTER("Belegnr.",'%1',Liefkopf."Order No.");
                        CHAMPZuordnungHolen.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                        IF CHAMPZuordnungHolen.FINDFIRST THEN
                          BEGIN
                            IF (CHAMPZuordnungHolen."Wartungsvertragsnr." <> '') AND
                            (Wartung.GET(CHAMPZuordnungHolen."Wartungsvertragsnr.")) THEN
                              BEGIN
                                SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                Wartung.MODIFY(TRUE);
                              END
                            ELSE
                              BEGIN
                                ZuordnungBasisgerät.RESET;
                                ZuordnungBasisgerät.SETFILTER(Art,'%1',ZuordnungBasisgerät.Art :: "SUP-AU");
                                ZuordnungBasisgerät.SETFILTER("Nr.",'%1',Liefkopf."Order No.");
                                ZuordnungBasisgerät.SETFILTER("Zeilennr.",'%1',CHAMPZuordnungHolen."Zeilennr.");
                                ZuordnungBasisgerät.SETFILTER(Basisgerät,'%1',TRUE);
                                IF ZuordnungBasisgerät.FINDFIRST THEN
                                  BEGIN
                                    Wartung.RESET;
                                    Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasisgerät."Belegnr.");
                                    Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasisgerät."Belegzeilennr.");
                                    IF Wartung.FINDFIRST THEN
                                      BEGIN
                                        SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                        SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                        Wartung.MODIFY(TRUE);
                                      END;
                                  END
                                ELSE
                                  MESSAGE(Text021,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                              END;
                          END
                        ELSE
                          MESSAGE(Text021,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                      END;

                    SystemPos.MODIFY;

                    //***************************************************************************************************
                    //                       Zugehörigkeit der Positionen untereinander ermitteln
                    //***************************************************************************************************

                    SystemPos."Gehört zu Lfd. Nr." := SystemZugehörigkeitErmitteln(Liefkopf."Order No.",
                                                      SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");

                    SystemPos.MODIFY;
                    SystemPos.FehlendeSystemZugehoerigkeit(SystemPos."Wartungsvertragsnr.",SystemPos."Lfd. Nr.");

                  END;
              UNTIL SeriennrVerfolgung.NEXT = 0;

            COMMIT;
          END;
      UNTIL Liefzeile.NEXT = 0;

    //***************************************************************************************************
    //                             Fremderworbene System Positionen anlegen
    //***************************************************************************************************

    Liefzeile.RESET;
    Liefzeile.SETFILTER(Liefzeile."Document No.",'%1',Liefkopf."No.");
    Liefzeile.SETFILTER(Liefzeile."Order No.",AUnr);
    Liefzeile.SETFILTER("Manufacturer Code",'%1|%2|%3|%4|%5','53','57','59','98','5710');
    Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type::Item);
    Liefzeile.SETFILTER(Quantity,'>%1',0);
    IF Liefzeile.FINDFIRST THEN
      REPEAT

        Artikel.GET(Liefzeile."No.");

        IF Artikel."Software Upgrade Protection" = TRUE THEN
          BEGIN
            CHAMPZuordnungHolen.RESET;
            CHAMPZuordnungHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
            CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
            CHAMPZuordnungHolen.SETFILTER("Nr.",'%1',AUnr);
            CHAMPZuordnungHolen.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
            IF CHAMPZuordnungHolen.FINDFIRST THEN
              REPEAT
                HoleTempLizenzTab.RESET;
                HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art :: Temporär);
                HoleTempLizenzTab.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Liefzeile."Order No.");
                HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Liefzeile."Order Line No.");
                HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                IF HoleTempLizenzTab.FINDFIRST THEN
                  REPEAT
                    IF CHAMPZuordnungHolen.Basisgerät THEN
                      BEGIN

                        //***************************************************************************************************
                        //                                  Generierung des Systemvertrages
                        //***************************************************************************************************

                        Wartung.RESET;
                        Wartung.SETFILTER("Lieferscheinnr.",'%1',HoleTempLizenzTab."Nr.");
                        Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',HoleTempLizenzTab."Belegzeilennr.");
                        IF NOT Wartung.FINDFIRST THEN
                          BEGIN
                            Wartung.INIT;
                            Wartung.Status := Wartung.Status :: System;
                            Wartung.Klasse := Wartung.Klasse :: Einzelgerät;
                            Wartung.Volumen := 1;
                            Wartung.Startdatum := Liefkopf."Posting Date";
                            Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                            IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
                              BEGIN
                                Wartung.SOR := TRUE;
                                Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                              END;
                            //Des Basisgerätes
                            Wartung.Auftragsstatus := Wartung.Auftragsstatus :: Archiviert;
                            Wartung."Auftragsnr." := HoleTempLizenzTab."Urspr. Auftragsnr.";
                            Wartung."Auftragszeilennr." := HoleTempLizenzTab."Urspr. Auftragszeilennr.";
                            Wartung."Lieferscheinnr." := HoleTempLizenzTab."Nr.";
                            Wartung."Lieferscheinzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                            Wartung.Endkunde := Liefkopf.Endkunde;
                            Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                            Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                            Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                            Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                            Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                            Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                            Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                            Wartung.INSERT(TRUE);

                            PrüfeHauptWartung.RESET;
                            PrüfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                            PrüfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                            IF NOT PrüfeHauptWartung.FINDFIRST THEN
                              BEGIN
                                Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                Wartung.MODIFY(TRUE);
                              END
                            ELSE
                              BEGIN
                                Wartung."Hauptwartungsvertragsnr." := PrüfeHauptWartung."Wartungsvertragsnr.";
                                Wartung.MODIFY(TRUE);
                              END;

                            //***************************************************************************************************
                            //    Sonderfall, wenn Basisgerät als Pseudo Position gebucht wird und vorträglich Module etc. 
                            //       im AU gebucht werden, die auch in der Champ Kalkulation zusammengehörig sind, dann
                            //         werden verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                            //***************************************************************************************************

                            PrüfeCHAMPZuordnung.RESET;
                            PrüfeCHAMPZuordnung.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                            PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                            PrüfeCHAMPZuordnung.SETFILTER("Nr.",'%1',AUnr);
                            PrüfeCHAMPZuordnung.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                            IF PrüfeCHAMPZuordnung.FINDFIRST THEN
                              BEGIN
                                REPEAT
                                  UnzugeordneteSystemPos.RESET;
                                  UnzugeordneteSystemPos.SETFILTER(Art,'%1',Art :: System);
                                  UnzugeordneteSystemPos.SETFILTER("Artikelnr.",'%1',PrüfeCHAMPZuordnung."Geräte Artikelnr.");
                                  UnzugeordneteSystemPos.SETFILTER("Auftragsnr.",'%1',PrüfeCHAMPZuordnung."Belegnr.");
                                  UnzugeordneteSystemPos.SETFILTER("Auftragszeilennr.",'%1',PrüfeCHAMPZuordnung."Belegzeilennr.");
                                  UnzugeordneteSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                                  IF UnzugeordneteSystemPos.FINDFIRST THEN
                                    REPEAT
                                      UnzugeordneteSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                      UnzugeordneteSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                      UnzugeordneteSystemPos.MODIFY;
                                    UNTIL UnzugeordneteSystemPos.NEXT = 0;
                                UNTIL PrüfeCHAMPZuordnung.NEXT = 0;
                              END;

                            //***************************************************************************************************
                            //         Sonderfall, wenn Basisgerät als Pseudo Position gebucht wird und mind. ein Modul
                            //        aus unseren Lieferungen stammt und alle in einer Champ Kalkulation aufgestellt sind,
                            //          dann werden die verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                            //***************************************************************************************************

                            PrüfeCHAMPZuordnung.RESET;
                            PrüfeCHAMPZuordnung.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                            PrüfeCHAMPZuordnung.SETFILTER(Art,'%1',PrüfeCHAMPZuordnung.Art :: "SUP-AU");
                            PrüfeCHAMPZuordnung.SETFILTER("Nr.",'%1',AUnr);
                            PrüfeCHAMPZuordnung.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                            IF PrüfeCHAMPZuordnung.FINDFIRST THEN
                              BEGIN
                                REPEAT
                                  UnzugeordneteSystemPos.RESET;
                                  UnzugeordneteSystemPos.SETFILTER(Art,'%1',Art :: System);
                                  UnzugeordneteSystemPos.SETFILTER("Artikelnr.",'%1',PrüfeCHAMPZuordnung."Geräte Artikelnr.");
                                  UnzugeordneteSystemPos.SETFILTER("Nr.",'%1',PrüfeCHAMPZuordnung."Belegnr.");
                                  UnzugeordneteSystemPos.SETFILTER("Belegzeilennr.",'%1',PrüfeCHAMPZuordnung."Belegzeilennr.");
                                  UnzugeordneteSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                                  IF UnzugeordneteSystemPos.FINDFIRST THEN
                                    REPEAT
                                      TempSystemPos.RESET;
                                      TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art :: Temporär);
                                      TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
                                      TempSystemPos.SETFILTER("Nr.",'%1',UnzugeordneteSystemPos."Nr.");
                                      TempSystemPos.SETFILTER("Belegzeilennr.",'%1',UnzugeordneteSystemPos."Belegzeilennr.");
                                      TempSystemPos.SETFILTER("Artikelnr.",'%1',UnzugeordneteSystemPos."Artikelnr.");
                                      TempSystemPos.SETFILTER("Seriennr.",'%1',UnzugeordneteSystemPos."Seriennr.");
                                      IF TempSystemPos.FINDFIRST THEN
                                        BEGIN
                                          UnzugeordneteSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                          UnzugeordneteSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                          UnzugeordneteSystemPos.MODIFY;
                                        END;
                                    UNTIL UnzugeordneteSystemPos.NEXT = 0;
                                UNTIL PrüfeCHAMPZuordnung.NEXT = 0;
                              END;

                            //***************************************************************************************************
                            //                         Anlage der Führungsrolle anhand des Debitoren
                            //***************************************************************************************************

                            DebKontaktBez.RESET;
                            DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                            DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                            IF DebKontaktBez.FINDFIRST THEN
                              BEGIN
                                Ansprech.RESET;
                                Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                                Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                                IF NOT Ansprech.FINDFIRST THEN
                                  BEGIN
                                    Ansprech.INIT;
                                    Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                                    Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                                    Ansprech.Führungsrolle := TRUE;
                                    Ansprech.INSERT;
                                  END;
                              END;
                          END;
                      END;

                    //***************************************************************************************************
                    //                                    Anlage der Systempositionen
                    //***************************************************************************************************

                    SystemPos.RESET;
                    SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
                    SystemPos.SETFILTER("Nr.",'%1',HoleTempLizenzTab."Nr.");
                    SystemPos.SETFILTER("Belegzeilennr.",'%1',HoleTempLizenzTab."Belegzeilennr.");
                    SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                    SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                    IF NOT SystemPos.FINDFIRST THEN
                      BEGIN
                        SystemPos.RESET;
                        SystemPos.INIT;
                        SystemPos.Art := SystemPos.Art :: System;
                        SystemPos."Nr." := HoleTempLizenzTab."Nr.";
                        SystemPos.INSERT(TRUE);
                        SystemPos.Belegdatum := Liefkopf."Posting Date";
                        SystemPos.VALIDATE("Artikelnr.",HoleTempLizenzTab."Artikelnr.");
                        SystemPos."Seriennr." := HoleTempLizenzTab."Seriennr.";
                        SystemPos."Debitornr." := Liefkopf."Sell-to Customer No.";
                        SystemPos.Debitorname := Liefkopf."Sell-to Customer Name";
                        SystemPos.Menge := HoleTempLizenzTab.Menge;
                        SystemPos.Kontakt := Liefkopf."Sell-to Contact";
                        SystemPos."Name 2" := Liefkopf."Sell-to Customer Name 2";
                        SystemPos.Adresse := Liefkopf."Sell-to Address";
                        SystemPos."Adresse 2" := Liefkopf."Sell-to Address 2";
                        SystemPos."PLZ-Code" := Liefkopf."Sell-to Post Code";
                        SystemPos.Ort := Liefkopf."Sell-to City";
                        SystemPos."System Projektinfos" := Liefzeile."ACS Projektinfos";
                        SystemPos."Auftragsnr." := HoleTempLizenzTab."Urspr. Auftragsnr.";
                        SystemPos."Auftragszeilennr." := HoleTempLizenzTab."Urspr. Auftragszeilennr.";
                        SystemPos."Belegzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                        SystemPos.Ursprungsland := HoleTempLizenzTab.Ursprungsland;
                        SystemPos.Fremderwerb := HoleTempLizenzTab.Fremderwerb;
                        SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                        IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN
                          BEGIN
                            SystemPos.SOR := TRUE;
                            SystemPos."SOR Option" := Liefkopf."Payment Terms Code";
                          END;

                        IF (Artikel.GET(HoleTempLizenzTab."Artikelnr.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                        OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN
                          BEGIN
                            SystemPos.Basisgerät := TRUE;
                            Wartung.GET(SystemPos."Wartungsvertragsnr.");
                            Wartung.Basisgerät := SystemPos."Artikelnr.";
                            IF Wartung.Klasse = Wartung.Klasse :: Mehrgeräte THEN
                              Wartung.Volumen += 1;
                            Wartung.MODIFY(TRUE);
                          END;

                        IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                          Wartung.MODIFY(TRUE)
                        ELSE
                          //Nachträglich Champs von LS + Pseudo Einzel Modul z.B., damit die Pos. dennoch zugeordnet werden kann
                          BEGIN
                            ZuordnungBasisgerät.RESET;
                            ZuordnungBasisgerät.SETFILTER(Art,'%1',ZuordnungBasisgerät.Art :: "SUP-AU");
                            ZuordnungBasisgerät.SETFILTER("Nr.",'%1',AUnr);
                            ZuordnungBasisgerät.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                            ZuordnungBasisgerät.SETFILTER(Basisgerät,'%1',TRUE);
                            IF ZuordnungBasisgerät.FINDFIRST THEN
                              BEGIN
                                Wartung.RESET;
                                Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasisgerät."Belegnr.");
                                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasisgerät."Belegzeilennr.");
                                IF Wartung.FINDFIRST THEN
                                  BEGIN
                                    SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                    SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                    Wartung.MODIFY(TRUE);
                                  END;
                              END;
                          END;

                        //Sonderfall, wenn einzelne Pseudo Module ohne Basisgerät zu einem bestehenden
                        //Wartungsvertrag hinzugefügt werden sollen
                        IF (SystemPos."Wartungsvertragsnr." = '') AND (CHAMPZuordnungHolen."Wartungsvertragsnr." <> '') THEN
                          BEGIN
                            SystemPos."Wartungsvertragsnr." := CHAMPZuordnungHolen."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := CHAMPZuordnungHolen."Wartungsvertragsnr.";
                          END;

                        SystemPos.MODIFY;

                        //***************************************************************************************************
                        //                       Zugehörigkeit der Positionen untereinander ermitteln
                        //***************************************************************************************************

                        SystemPos."Gehört zu Lfd. Nr." := SystemZugehörigkeitErmitteln(AUnr,SystemPos."Lfd. Nr.",
                                                          SystemPos."Wartungsvertragsnr.");
 
                        SystemPos.MODIFY;
                        SystemPos.FehlendeSystemZugehoerigkeit(SystemPos."Wartungsvertragsnr.",SystemPos."Lfd. Nr.");

                        COMMIT;
                      END
                    ELSE
                      IF CHAMPZuordnungHolen.Basisgerät = TRUE THEN
                        SystemPos.FehlendeVertragsZugehoerigkeit(CHAMPZuordnungHolen."Nr.",CHAMPZuordnungHolen."Zeilennr.",
                        CHAMPZuordnungHolen."Belegnr.",CHAMPZuordnungHolen."Belegzeilennr.",SystemPos."Wartungsvertragsnr.");

                    COMMIT;
                  UNTIL HoleTempLizenzTab.NEXT = 0;
              UNTIL CHAMPZuordnungHolen.NEXT = 0;
          END;
      UNTIL Liefzeile.NEXT = 0;
  END;

CreateServiceFromSalesHeader(VAR AUnr : Code[20];NichtDrucken : Boolean)
//***************************************************************************************************
//            01.03.2011-ST  Das System holt sich nach Erstellung des Lieferscheins die
//       entsprechenden Seriennr. aus den Artikelposten, wenn Wartung (CHAMPS) gebucht wurde
//***************************************************************************************************

zudrucken := FALSE;
//Bestimmt mit welcher Währung Champs eingekauft werden soll, für Euro gleich leer setzen
ek_Währung := 'USD';

Vkliefkopf.RESET;
Vkliefkopf.SETFILTER("Order No.",'%1',AUnr);
IF Vkliefkopf.FINDLAST THEN
  BEGIN
    Vkliefzeile.RESET;
    Vkliefzeile.SETFILTER(Vkliefzeile."Document No.",'%1',Vkliefkopf."No.");
    Vkliefzeile.SETFILTER(Vkliefzeile."Order No.",AUnr);
    Vkliefzeile.SETFILTER(Type,'%1',Vkliefzeile.Type::Item);
    Vkliefzeile.SETFILTER(Quantity,'>%1',0);
    IF Vkliefzeile.FINDFIRST THEN
      REPEAT
        //***********************************************************************************************
        //        Prüft ob Artikel die Kennzeichnung "Software Upgrade Protection" besitzt
        //***********************************************************************************************
         IF Artikel.GET(Vkliefzeile."No.") AND (Artikel."Software Upgrade Protection" = TRUE) THEN
           BEGIN

             IF Artikel.Artikelgruppe = 'ACTS' THEN
               ACTS := TRUE
             ELSE
               ACTS := FALSE;

             IF (Artikel.Artikelgruppe = 'ACHAT') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') THEN
               ACHAT := TRUE
             ELSE
               ACHAT := FALSE;

             CHAMPZuordnungHolen.RESET;
             CHAMPZuordnungHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
             CHAMPZuordnungHolen.SETFILTER(Art,'%1',CHAMPZuordnungHolen.Art :: "SUP-AU");
             CHAMPZuordnungHolen.SETFILTER("Nr.",'%1',AUnr);
             CHAMPZuordnungHolen.SETFILTER("Zeilennr.",'%1',Vkliefzeile."Line No.");
             IF CHAMPZuordnungHolen.FINDFIRST THEN
               REPEAT

                //*****************************************************************************************
                //              Prüfung Fall #1 SUP Artikel verweist auf Auftrags Position
                //*****************************************************************************************

                   IF (CHAMPZuordnungHolen."Nachträgliche Service Order" = FALSE) AND (CHAMPZuordnungHolen.Fremderwerb = FALSE) THEN
                     BEGIN
                       //Lieferschein durchsuchen, welche Positionen sich auf diesen Champ Artikel beziehen
                       HoleLiefZeile.RESET;
                       HoleLiefZeile.SETFILTER(Type,'%1',HoleLiefZeile.Type :: Item);
                       HoleLiefZeile.SETFILTER("Document No.",'%1',Vkliefzeile."Document No.");
                       HoleLiefZeile.SETFILTER("Line No.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                       HoleLiefZeile.SETFILTER("SUP Belegnr.",'%1','');
                       HoleLiefZeile.SETFILTER("SUP Belegzeilennr.",'%1',0);
                       HoleLiefZeile.SETFILTER(Quantity,'>%1',0);
                       IF HoleLiefZeile.FINDFIRST THEN
                         REPEAT
                           SeriennrVerfolgung.RESET;
                           //SeriennrVerfolgung.SETFILTER("Item Tracking",'%1',SeriennrVerfolgung."Item Tracking":: "Serial No.");
                           SeriennrVerfolgung.SETFILTER("Document No.",'%1',HoleLiefZeile."Document No.");
                           SeriennrVerfolgung.SETFILTER("Document Line No.",'%1',HoleLiefZeile."Line No.");
                           IF SeriennrVerfolgung.FINDFIRST THEN
                             BEGIN
                               FOR i := 1 TO (Vkliefzeile.Quantity * CHAMPZuordnungHolen."Menge kalk.") DO
                                 BEGIN
                                   LizenzTab.RESET;
                                   LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Service);
                                   LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                                   LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                                   LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                                   LizenzTab.SETFILTER("Artikelnr.",'%1',SeriennrVerfolgung."Item No.");
                                   LizenzTab.SETFILTER("Seriennr.",'%1',SeriennrVerfolgung."Serial No.");
                                   IF NOT LizenzTab.FINDFIRST THEN
                                     BEGIN
                                       LizenzTab.RESET;
                                       LizenzTab.INIT;
                                       LizenzTab.Art := LizenzTab.Art :: Service;
                                       LizenzTab."Nr." := Vkliefzeile."Document No.";
                                       LizenzTab.Verlängerung := FALSE;
                                       LizenzTab.INSERT(TRUE);
                                       LizenzTab."Debitornr." := Vkliefkopf."Sell-to Customer No.";
                                       //Adresse aus Lieferschein holen
                                       LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                                       LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                                       LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                                       LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                                       LizenzTab.Ort := Vkliefkopf."Sell-to City";
                                       LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                                       LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                                       LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                                       LizenzTab.Basisgerät := CHAMPZuordnungHolen.Basisgerät;
                                       LizenzTab."Abw. Geräte Artikelnr." := CHAMPZuordnungHolen."Abw. Geräte Artikelnr.";
                                       LizenzTab.VALIDATE("Artikelnr.",SeriennrVerfolgung."Item No.");
                                       LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                                       CHAMPZuordnungHolen.Startdatum, SeriennrVerfolgung."Posting Date",
                                       CHAMPZuordnungHolen."Wartungsvertragsnr."));
                                       LizenzTab.Belegdatum := SeriennrVerfolgung."Posting Date";
                                       LizenzTab."Urspr. Buchungsdatum" := SeriennrVerfolgung."Posting Date";
                                       LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
                                       LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                                       LizenzTab.Menge := SeriennrVerfolgung.Quantity * (-1);
                                       LizenzTab."Seriennr." := SeriennrVerfolgung."Serial No.";
                                       LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(SeriennrVerfolgung."Item No.",
                                                                 LizenzTab."SUP Artikelnr.",SeriennrVerfolgung."Serial No.",'',0);
                                       LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr."
                                       ,LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);
                                       IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                                         LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';
                                       LizenzTab."Auftragsnr." := Vkliefzeile."Order No.";
                                       LizenzTab."Auftragszeilennr." := Vkliefzeile."Order Line No.";
                                       LizenzTab.Ursprungsland := SeriennrVerfolgung.Ursprungsland;
                                       LizenzTab."Urspr. Auftragsnr." := Vkliefzeile."Order No."; 
                                       //urspr. Zeilennr. immer von der Zeilennr. des Gerätes ableiten
                                       LizenzTab."Urspr. Auftragszeilennr." := SeriennrVerfolgung."Document Line No.";
                                       LizenzTab."Urspr. Lieferscheinnr." := HoleLiefZeile."Document No.";
                                       LizenzTab."Urspr. Lieferscheinzeilennr." := HoleLiefZeile."Line No.";
                                       LizenzTab."System Projektinfos" := Vkliefzeile."ACS Projektinfos";
                                       LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                                       CHAMPZuordnungHolen.Laufzeit));
                                       IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                         LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                       LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(HoleLiefZeile."No.",
                                                                                                   Vkliefzeile."No.");
                                       LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(HoleLiefZeile."No.",Vkliefzeile."No.",
                                                                 CHAMPZuordnungHolen.Laufzeit,'DC',FALSE,ek_Währung);
                                       LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(HoleLiefZeile."No.",
                                       Vkliefzeile."No.",CHAMPZuordnungHolen.Laufzeit,'MSRP',FALSE,ek_Währung);
                                       LizenzTab."Service Währungscode" := ek_Währung;

                                       //Zuordnung der Champ Position in den entsprechenden Wartungs- bzw. Systemvertrag
                                       SystemPos.RESET;
                                       SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
                                       SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                       SystemPos.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                                       SystemPos.SETFILTER("Belegzeilennr.",'%1',SeriennrVerfolgung."Document Line No.");
                                       SystemPos.SETFILTER("Artikelnr.",'%1',SeriennrVerfolgung."Item No.");
                                       SystemPos.SETFILTER("Seriennr.",'%1', SeriennrVerfolgung."Serial No.");
                                       IF SystemPos.FINDFIRST THEN
                                         BEGIN
                                           Wartung.RESET;
                                           Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                           IF Wartung.FINDFIRST THEN
                                             EndkundenInfoUpdate(Vkliefkopf,Wartung);
                                           Wartung.RESET;
                                           Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                           IF Wartung.FINDFIRST THEN
                                             BEGIN
                                               LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                               LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                               //Prüft auf Vertragsverlängerung, auch wenn die Pos. nachträglich hinzu kommt und
                                               //noch nicht verlängert wird - Angleichung Laufzeit an bestehende verlängerte Pos.
                                               v_verlaengerung_start := PrüfeLizenzVerlängerung(LizenzTab."SUP Artikelnr.",
                                               LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                               LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,0,
                                               CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                               IF v_verlaengerung_start <> 0D THEN
                                                 BEGIN
                                                   LizenzTab.Verlängerung := PrüfeServiceVerlängerung(LizenzTab."SUP Artikelnr.",
                                                   LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                                   LizenzTab."Seriennr.");
                                                   IF (LizenzTab.Verlängerung = FALSE) AND
                                                   (CHAMPZuordnungHolen.Startdatum <> 0D) THEN
                                                     LizenzTab.VALIDATE(Lizenzdatum,CHAMPZuordnungHolen.Startdatum)
                                                   ELSE
                                                     IF LizenzTab.Verlängerung = TRUE THEN
                                                       LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));
                                                   LizenzTab.VALIDATE("Dauer Serviceleistung");
                                                   IF CHAMPZuordnungHolen."Wartungsvertragsnr." <> '' THEN
                                                     BEGIN
                                                       v_verlaengerung_ablauf := PrüfeLizenzVerlängerung(
                                                       LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                                       ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                                       LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,1,
                                                       CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                                       IF v_verlaengerung_ablauf <> 0D THEN
                                                         LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                                      END;
                                                 END;

                                               //Das vorgegebene Ablaufdatum übersteuert d. neu errechnete Verlängerungsablaufddatum
                                               IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                                 LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                               IF (CHAMPZuordnungHolen."Wartungsvertragsnr." = '')
                                               AND ((LizenzTab.Benutzername <> '')
                                               OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')) THEN
                                                 BEGIN
                                                   Wartung.Status := Wartung.Status :: Auftrag;
                                                   IF ACTS THEN
                                                     Wartung.Status := Wartung.Status :: ACTS;
                                                    IF ACHAT THEN
                                                      Wartung.Status := Wartung.Status :: ACHAT;
                                                   Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                                   Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                                   Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                                   Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                                   IF Wartung.Vertragsablaufdatum = 0D THEN
                                                     Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                                   IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                                     Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                                   IF LizenzTab.Basisgerät = TRUE THEN
                                                     BEGIN
                                                       Wartung.Basisgerät := LizenzTab."Artikelnr.";
                                                       IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE) THEN
                                                         LizenzTab."Zu exportieren" := TRUE;
                                                     END;
                                                   Wartung.MODIFY(TRUE);
                                                END;
                                             END
                                           ELSE
                                             BEGIN
                                               MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                             END;
                                         END
                                       ELSE
                                         BEGIN
                                           MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                         END;

                                       LizenzTab."Gehört zu Lfd. Nr." := ServiceZugehörigkeitErmitteln(AUnr,LizenzTab."Lfd. Nr.",
                                                                         LizenzTab."Wartungsvertragsnr.");
                                       LizenzTab.MODIFY;
                                       zudrucken := TRUE;
                                     END;
                                   SeriennrVerfolgung.NEXT(1);
                                 END;
                             END;
                         UNTIL HoleLiefZeile.NEXT = 0;
                     END;

                  //***************************************************************************************************
                  //              Prüfung Fall #2 Champ Artikel verweist auf eine Lieferschein Position.
                  //       Es kann sich hierbei um Verlängerungen handeln, wenn bereits ein Teil der Seriennr. in
                  //         einem Wartungsvertrag auftauchen oder um das nachträgliche Generieren von Lizenzen
                  //***************************************************************************************************

                  IF (CHAMPZuordnungHolen."Nachträgliche Service Order" = TRUE) AND (CHAMPZuordnungHolen.Fremderwerb = FALSE) THEN
                    BEGIN
                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art :: Temporär);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Vkliefzeile."Order No.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Vkliefzeile."Order Line No.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN
                        BEGIN
                          REPEAT
                            LizenzTab.RESET;
                            LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Service);
                            LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                            LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                            LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                            LizenzTab.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                            LizenzTab.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                            IF NOT LizenzTab.FINDFIRST THEN
                              BEGIN
                                LizenzTab.RESET;
                                LizenzTab.INIT;
                                LizenzTab.TRANSFERFIELDS(HoleTempLizenzTab);
                                LizenzTab.Art := LizenzTab.Art :: Service;
                                LizenzTab."Nr." := Vkliefzeile."Document No.";
                                LizenzTab.Verlängerung := FALSE;
                                LizenzTab.INSERT(TRUE);
                                //Adresse aus Lieferschein holen
                                LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                                LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                                LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                                LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                                LizenzTab.Ort := Vkliefkopf."Sell-to City";
                                LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                                LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                                LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                                LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                                LizenzTab.Basisgerät := CHAMPZuordnungHolen.Basisgerät;
                                LizenzTab."Abw. Geräte Artikelnr." := CHAMPZuordnungHolen."Abw. Geräte Artikelnr.";
                                LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                                CHAMPZuordnungHolen.Startdatum,Vkliefkopf."Posting Date",
                                CHAMPZuordnungHolen."Wartungsvertragsnr."));
                                LizenzTab.Belegdatum := Vkliefzeile."Posting Date";
                                LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(LizenzTab."Artikelnr.",
                                                          LizenzTab."SUP Artikelnr.",LizenzTab."Seriennr.",
                                                          CHAMPZuordnungHolen."Belegnr.",CHAMPZuordnungHolen."Belegzeilennr.");
                                LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr.",
                                                      LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);

                                IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                                  LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';

                                LizenzTab."Urspr. Lieferscheinnr." := CHAMPZuordnungHolen."Belegnr.";
                                LizenzTab."Urspr. Lieferscheinzeilennr." := CHAMPZuordnungHolen."Belegzeilennr.";
                                ShipmentHeader.GET(CHAMPZuordnungHolen."Belegnr.");
                                LizenzTab."Urspr. Buchungsdatum" := ShipmentHeader."Posting Date";
                                IF LizenzTab."SUP Artikelnr." = 'EXTD-HW-WARR/YR' THEN
                                  LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('1J',LizenzTab."Urspr. Buchungsdatum"));
                                LizenzTab."System Projektinfos" := Vkliefzeile."ACS Projektinfos";
                                LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                                CHAMPZuordnungHolen.Laufzeit));
                                IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                  LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(LizenzTab."Artikelnr.",
                                Vkliefzeile."No.");

                                LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                          CHAMPZuordnungHolen.Laufzeit,'DC',FALSE,ek_Währung);
                                LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                            CHAMPZuordnungHolen.Laufzeit,'MSRP',FALSE,ek_Währung);
                                LizenzTab."Service Währungscode" := ek_Währung;

                                //Zuordnung der Champ Position in den entsprechenden Wartungs- bzw. Systemvertrag
                                SystemPos.RESET;
                                SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
                                SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                SystemPos.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                                SystemPos.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                                SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                                SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                                IF SystemPos.FINDFIRST THEN
                                  BEGIN
                                   Wartung.RESET;
                                   Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                   IF Wartung.FINDFIRST THEN
                                     EndkundenInfoUpdate(Vkliefkopf,Wartung);
                                    Wartung.RESET;
                                    Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                    IF Wartung.FINDFIRST THEN
                                      BEGIN
                                        LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                        LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                        //Prüft auf Vertragsverlängerung, auch wenn die Pos. nachträglich hinzu kommt und
                                        //noch nicht verlängert wird - Angleich Laufzeit an bestehende verlängerte Pos.
                                        v_verlaengerung_start := PrüfeLizenzVerlängerung(LizenzTab."SUP Artikelnr.",
                                        LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                        LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,0,
                                        CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                        IF v_verlaengerung_start <> 0D THEN
                                          BEGIN
                                            LizenzTab.Verlängerung := PrüfeServiceVerlängerung(LizenzTab."SUP Artikelnr.",
                                            LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                            LizenzTab."Seriennr.");
                                            IF (LizenzTab.Verlängerung = FALSE) AND (CHAMPZuordnungHolen.Startdatum <> 0D) THEN
                                              LizenzTab.VALIDATE(Lizenzdatum,CHAMPZuordnungHolen.Startdatum)
                                            ELSE
                                              IF LizenzTab.Verlängerung = TRUE THEN
                                                LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));
                                            LizenzTab.VALIDATE("Dauer Serviceleistung");
                                            IF CHAMPZuordnungHolen."Wartungsvertragsnr." <> '' THEN
                                              BEGIN
                                                v_verlaengerung_ablauf := PrüfeLizenzVerlängerung(
                                                LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                                ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                                LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,1,
                                                CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                                IF v_verlaengerung_ablauf <> 0D THEN
                                                  LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                              END;
                                          END;

                                        //Das vorgegebene Ablaufdatum übersteuert d. neu errechnete Verlängerungsablaufddatum
                                        IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                          LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                        IF (CHAMPZuordnungHolen."Wartungsvertragsnr." = '') AND ((LizenzTab.Benutzername <> '')
                                        OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')) THEN
                                          BEGIN
                                            Wartung.Status := Wartung.Status :: Auftrag;
                                            IF ACTS THEN
                                              Wartung.Status := Wartung.Status :: ACTS;
                                            IF ACHAT THEN
                                              Wartung.Status := Wartung.Status :: ACHAT;
                                            Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                            Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                            Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                            Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                            IF Wartung.Vertragsablaufdatum = 0D THEN
                                              Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                            IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                              Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                            IF LizenzTab.Basisgerät = TRUE THEN
                                              BEGIN
                                                Wartung.Basisgerät := LizenzTab."Artikelnr.";
                                                IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE) THEN
                                                  LizenzTab."Zu exportieren" := TRUE;
                                              END;
                                            Wartung.MODIFY(TRUE);
                                          END;
                                      END
                                    ELSE
                                      BEGIN
                                        MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                      END;
                                  END
                                ELSE
                                  BEGIN
                                    MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                  END;
                                LizenzTab."Gehört zu Lfd. Nr." := ServiceZugehörigkeitErmitteln(AUnr,LizenzTab."Lfd. Nr.",
                                                                  LizenzTab."Wartungsvertragsnr.");
                                LizenzTab.MODIFY;
                                zudrucken := TRUE;
                              END;
                          UNTIL HoleTempLizenzTab.NEXT = 0;
                        END
                      ELSE
                        ERROR(Text033);

                        HoleTempLizenzTab.RESET;
                        HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art :: Temporär);
                        HoleTempLizenzTab.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                        HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                        HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Vkliefzeile."Order No.");
                        HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Vkliefzeile."Order Line No.");
                        IF HoleTempLizenzTab.FINDFIRST THEN
                           HoleTempLizenzTab.DELETEALL;

                      // ELSE
                      //   MESSAGE('Die angegebene Lieferscheinnr. + Pos. konnte nicht gefunden werden.\'+
                      //           'Bitte fügen Sie die Software Lizenzen dem Lieferschein %1 manuell hinzu.',
                      //            BelegzeileSUPBelegnr);
                    END;

                  //***************************************************************************************************
                  //            Prüfung Fall #3 SUP Artikel verweist auf Auftrag selbst => Pseudo Anlage
                  //                 Evtl. kann es sich auch hier um eine Verlängerung handeln
                  //***************************************************************************************************

                  ////Vorerst deaktiviert 24.08.2011-ST, wieder aktiviert am 28.09.2011-ST
                  IF (CHAMPZuordnungHolen."Nachträgliche Service Order" = TRUE) AND (CHAMPZuordnungHolen.Fremderwerb = TRUE) THEN
                    BEGIN
                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art :: Temporär);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',CHAMPZuordnungHolen."Nr.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',CHAMPZuordnungHolen."Zeilennr.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN
                        BEGIN
                          REPEAT
                            LizenzTab.RESET;
                            LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art :: Service);
                            LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                            LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                            LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                            LizenzTab.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                            LizenzTab.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                            IF NOT LizenzTab.FINDFIRST THEN
                              BEGIN
                                LizenzTab.RESET;
                                LizenzTab.INIT;
                                LizenzTab.TRANSFERFIELDS(HoleTempLizenzTab);
                                LizenzTab.Art := LizenzTab.Art :: Service;
                                LizenzTab."Nr." := Vkliefzeile."Document No.";
                                LizenzTab.Verlängerung := FALSE;
                                LizenzTab.INSERT(TRUE);
                                //Adresse aus Lieferschein holen
                                LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                                LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                                LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                                LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                                LizenzTab.Ort := Vkliefkopf."Sell-to City";
                                LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                                LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                                LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                                LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                                LizenzTab.Basisgerät := CHAMPZuordnungHolen.Basisgerät;
                                LizenzTab."Abw. Geräte Artikelnr." := CHAMPZuordnungHolen."Abw. Geräte Artikelnr.";
                                LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                                CHAMPZuordnungHolen.Startdatum,Vkliefkopf."Posting Date",
                                CHAMPZuordnungHolen."Wartungsvertragsnr."));
                                LizenzTab.Belegdatum := Vkliefzeile."Posting Date";
                                LizenzTab."Urspr. Buchungsdatum" := Vkliefzeile."Posting Date";
                                LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(LizenzTab."Artikelnr.",
                                                          LizenzTab."SUP Artikelnr.",LizenzTab."Seriennr.",
                                                          CHAMPZuordnungHolen."Belegnr.",CHAMPZuordnungHolen."Belegzeilennr.");
                                LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr.",
                                                      LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);
                                IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                                  LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';
                                LizenzTab."Urspr. Lieferscheinnr." := HoleTempLizenzTab."Nr.";
                                LizenzTab."Urspr. Lieferscheinzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                                Artikel.GET(LizenzTab."Artikelnr.");
                                LizenzTab.Ursprungsland := Artikel."Country/Region of Origin Code";
                                LizenzTab."System Projektinfos" := Vkliefzeile."ACS Projektinfos";
                                LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                                CHAMPZuordnungHolen.Laufzeit));
                                IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                  LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(LizenzTab."Artikelnr.",
                                Vkliefzeile."No.");
                                LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",
                                                          Vkliefzeile."No.",CHAMPZuordnungHolen.Laufzeit,'DC',FALSE,ek_Währung);
                                LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                            CHAMPZuordnungHolen.Laufzeit,'MSRP',FALSE,ek_Währung);
                                LizenzTab."Service Währungscode" := ek_Währung;

                                //Zuordnung der Champ Position in den entsprechenden Wartungs- bzw. Systemvertrag
                                SystemPos.RESET;
                                SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
                                SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                SystemPos.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                                SystemPos.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                                SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                                SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                                SystemPos.SETFILTER(Fremderwerb,'%1',TRUE);
                                IF SystemPos.FINDFIRST THEN
                                  BEGIN
                                   Wartung.RESET;
                                   Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                   IF Wartung.FINDFIRST THEN
                                     EndkundenInfoUpdate(Vkliefkopf,Wartung);
                                    Wartung.RESET;
                                    Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                    IF Wartung.FINDFIRST THEN
                                      BEGIN
                                        LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                        LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                        //Prüft auf Vertragsverlängerung, auch wenn die Pos. nachträglich hinzu kommt und
                                        //noch nicht verlängert wird - Angleich Laufzeit an bestehende verlängerte Pos.
                                        v_verlaengerung_start := PrüfeLizenzVerlängerung(LizenzTab."SUP Artikelnr.",
                                        LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                        LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,0,
                                        CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                        IF v_verlaengerung_start <> 0D THEN
                                          BEGIN
                                            LizenzTab.Verlängerung := PrüfeServiceVerlängerung(LizenzTab."SUP Artikelnr.",
                                            LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                            LizenzTab."Seriennr.");
                                            IF (LizenzTab.Verlängerung = FALSE) AND (CHAMPZuordnungHolen.Startdatum <> 0D) THEN
                                              LizenzTab.VALIDATE(Lizenzdatum,CHAMPZuordnungHolen.Startdatum)
                                            ELSE
                                              IF LizenzTab.Verlängerung = TRUE THEN
                                                LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));
                                            LizenzTab.VALIDATE("Dauer Serviceleistung");
                                            IF CHAMPZuordnungHolen."Wartungsvertragsnr." <> '' THEN
                                              BEGIN
                                                v_verlaengerung_ablauf := PrüfeLizenzVerlängerung(
                                                LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                                ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                                LizenzTab.Fremderwerb,CHAMPZuordnungHolen.Laufzeit,1,
                                                CHAMPZuordnungHolen."Wartungsvertragsnr.");
                                                IF v_verlaengerung_ablauf <> 0D THEN
                                                  LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                              END;
                                          END;

                                        //Das vorgegebene Ablaufdatum übersteuert d. neu errechnete Verlängerungsablaufddatum
                                        IF CHAMPZuordnungHolen.Ablaufdatum <> 0D THEN
                                          LizenzTab."Ablaufdatum Serviceleistung" := CHAMPZuordnungHolen.Ablaufdatum;

                                        IF (CHAMPZuordnungHolen."Wartungsvertragsnr." = '') AND ((LizenzTab.Benutzername <> '')
                                        OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')) THEN
                                          BEGIN
                                            Wartung.Status := Wartung.Status :: Auftrag;
                                            IF ACTS THEN
                                              Wartung.Status := Wartung.Status :: ACTS;
                                            IF ACHAT THEN
                                              Wartung.Status := Wartung.Status :: ACHAT;
                                            Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                            Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                            Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                            Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                            IF Wartung.Vertragsablaufdatum = 0D THEN
                                              Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                            IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                              Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                            IF LizenzTab.Basisgerät = TRUE THEN
                                              BEGIN
                                                Wartung.Basisgerät := LizenzTab."Artikelnr.";
                                                IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE) THEN
                                                  LizenzTab."Zu exportieren" := TRUE;
                                              END;
                                            Wartung.MODIFY(TRUE);
                                          END;
                                      END
                                    ELSE
                                      BEGIN
                                        MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                      END;
                                  END
                                ELSE
                                  BEGIN
                                    MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                  END;
                                LizenzTab."Gehört zu Lfd. Nr." := ServiceZugehörigkeitErmitteln(AUnr,LizenzTab."Lfd. Nr.",
                                                                  LizenzTab."Wartungsvertragsnr.");
                                LizenzTab.MODIFY;
                                zudrucken := TRUE;
                              END;
                          UNTIL HoleTempLizenzTab.NEXT = 0;
                        END
                      ELSE
                        ERROR(Text033);

                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art :: Temporär);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',CHAMPZuordnungHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',CHAMPZuordnungHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',CHAMPZuordnungHolen."Nr.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',CHAMPZuordnungHolen."Zeilennr.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN
                         HoleTempLizenzTab.DELETEALL;

                    END;

                  ZähleServiceVerlängerungen(LizenzTab."Wartungsvertragsnr.");

               UNTIL CHAMPZuordnungHolen.NEXT = 0;
           END;
      UNTIL Vkliefzeile.NEXT = 0;

    Debitor.GET(Vkliefkopf."Sell-to Customer No.");
    IF Debitor."Champs via EMail" = TRUE THEN
      nur_intern_drucken := TRUE
    ELSE
      nur_intern_drucken := FALSE;

    IF (NichtDrucken = FALSE) AND (zudrucken = TRUE) THEN
      BEGIN
        GetDruckWartung.RESET;
        GetDruckWartung.SETFILTER(Status,'%1|%2|%3',GetDruckWartung.Status :: System,GetDruckWartung.Status :: Auftrag,
        GetDruckWartung.Status :: ACHAT);
        GetDruckWartung.SETFILTER("Lieferscheinnr. Service",'%1',Vkliefzeile."Document No.");
        IF GetDruckWartung.FINDFIRST THEN
          REPEAT
            DruckeLizenz(GetDruckWartung."Wartungsvertragsnr.",nur_intern_drucken);
          UNTIL GetDruckWartung.NEXT = 0
        ELSE
          BEGIN
            letzte_wartungsnr := '';
            GetDruckÄnderung.RESET;
            GetDruckÄnderung.SETFILTER(Art,'%1',GetDruckÄnderung.Art :: Service);
            GetDruckÄnderung.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
            IF GetDruckÄnderung.FINDFIRST THEN
              BEGIN
                REPEAT
                  GetDruckWartung.RESET;
                  GetDruckWartung.SETFILTER(Status,'%1|%2|%3',GetDruckWartung.Status :: System,GetDruckWartung.Status :: Auftrag,
                  GetDruckWartung.Status :: ACHAT);
                  GetDruckWartung.SETFILTER("Wartungsvertragsnr.",'%1',GetDruckÄnderung."Wartungsvertragsnr.");
                  IF GetDruckWartung.FINDFIRST THEN
                    //REPEAT
                      IF letzte_wartungsnr <> GetDruckWartung."Wartungsvertragsnr." THEN
                        BEGIN
                          DruckeLizenz(GetDruckWartung."Wartungsvertragsnr.",nur_intern_drucken);
                          letzte_wartungsnr := GetDruckÄnderung."Wartungsvertragsnr.";
                        END;
                    //UNTIL GetDruckWartung.NEXT = 0;
                UNTIL GetDruckÄnderung.NEXT = 0;
              END;
          END;

      END;
  END;

PrüfeLizenzVerlängerung("Service Artikelnr" : Code[20];Lieferscheinnr : Code[20];Lieferscheinzeilennr : Integer;Seriennr : Code[20];Deb
//IF (STRPOS("Service Artikelnr",'HW') <> 0) OR ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01')
//OR (STRPOS("Service Artikelnr",'RPLC') <> 0) OR ("Service Artikelnr" = 'EXTD-HW-WARR/YR')
//OR ("Service Artikelnr" = 'SW-UPGRADE-ACS-1Y') THEN
//  EXIT(0D);

//Sonderfall: betrachet nun alle möglichen Konstellationen bei nachträglichen Zubuchungen und gibt ggf. auch
//das Ablaufdatum anstatt des Lizenzdatums aus

IF ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01') OR ("Service Artikelnr" = 'RE_INSTATEMENT_FEE') THEN EXIT(0D);

Ermittle_Servicegruppe.RESET;
Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',"Service Artikelnr");
IF (Ermittle_Servicegruppe.FINDFIRST) AND (Ermittle_Servicegruppe."Einordnung Servicegruppe" <> 0) THEN
  BEGIN
    //Prüft, ob die gleiche oder sich gegenseitig verlängerbare Service Artikel gebucht wurden
    Verbundene_Servicegruppe.RESET;
    Verbundene_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
    Verbundene_Servicegruppe.SETFILTER("Feld ID",'%1',44);
    Verbundene_Servicegruppe.SETFILTER("Einordnung Servicegruppe",'%1',Ermittle_Servicegruppe."Einordnung Servicegruppe");
    Verbundene_Servicegruppe.FINDFIRST;
      REPEAT
        PrüfeLizenzTab.RESET;
        PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
        PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
        //PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
        PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
        PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
        PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
        PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        PrüfeLizenzTab.ASCENDING(FALSE);
        IF PrüfeLizenzTab.FINDFIRST THEN
          REPEAT
            Artikel_Servicegruppe.RESET;
            Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
            Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
            Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PrüfeLizenzTab."SUP Artikelnr.");
            IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
            Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
              IF Ausgabedatum = Ausgabedatum :: Lizenzdatum THEN
                EXIT(PrüfeLizenzTab."Ablaufdatum Serviceleistung")
          UNTIL PrüfeLizenzTab.NEXT = 0
        ELSE
          //Nachträgliches Modul hinzu, das bisher noch nicht in Wartung steht, umweg über Systemposition
          BEGIN
            TempSystemTab.RESET;
            TempSystemTab.SETFILTER(Art,'%1',TempSystemTab.Art :: System);
            TempSystemTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
            TempSystemTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
            TempSystemTab.SETFILTER("Seriennr.",'%1',Seriennr);
            TempSystemTab.SETFILTER(Basisgerät,'%1',FALSE);
            TempSystemTab.SETFILTER(Inaktiv,'%1',FALSE);
            IF TempSystemTab.FINDLAST THEN
              BEGIN
                PrüfeLizenzTab.RESET;
                PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
                PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
                PrüfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',TempSystemTab."Wartungsvertragsnr.");
                //PrüfeLizenzTab.SETFILTER("Zu exportieren",'%1',TRUE);
                PrüfeLizenzTab.SETFILTER(Basisgerät,'%1',TRUE);
                PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
                PrüfeLizenzTab.ASCENDING(FALSE);
                IF PrüfeLizenzTab.FINDFIRST THEN
                  REPEAT
                    Artikel_Servicegruppe.RESET;
                    Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
                    Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
                    Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PrüfeLizenzTab."SUP Artikelnr.");
                    IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
                    Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
                      BEGIN
                        IF (Laufzeit <> '') AND (STRPOS(Laufzeit,'M') <> 0) THEN
                          //Muss hier runtergerechnet werden, da anschließend wieder drauf gerechnet wird
                          IF Ausgabedatum = Ausgabedatum :: Lizenzdatum THEN
                            EXIT(CALCDATE('-1T',CALCDATE('-'+PrüfeLizenzTab."Dauer Serviceleistung",
                            PrüfeLizenzTab."Ablaufdatum Serviceleistung")))
                          ELSE
                            EXIT(PrüfeLizenzTab."Ablaufdatum Serviceleistung");
                      END;
                UNTIL PrüfeLizenzTab.NEXT = 0;
              END;
          END;

      UNTIL Verbundene_Servicegruppe.NEXT = 0;
  END
ELSE
  //Nur die gleiche Service Artikelnr kann verlängert werden Bsp. EXT-HW
  BEGIN
    PrüfeLizenzTab.RESET;
    PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
    PrüfeLizenzTab.SETFILTER("SUP Artikelnr.",'%1',"Service Artikelnr");
    PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
    PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
    PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
    PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
    PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
    IF PrüfeLizenzTab.FINDLAST THEN
      BEGIN
        EXIT(PrüfeLizenzTab."Ablaufdatum Serviceleistung")
      END
    ELSE
      EXIT(0D);
  END;

PrüfeServiceVerlängerung("Service Artikelnr" : Code[20];Lieferscheinnr : Code[20];Lieferscheinzeilennr : Integer;Seriennr : Code[20]) :
IF ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01') OR ("Service Artikelnr" = 'RE_INSTATEMENT_FEE') THEN EXIT(FALSE);

Ermittle_Servicegruppe.RESET;
Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',"Service Artikelnr");
IF (Ermittle_Servicegruppe.FINDFIRST) AND (Ermittle_Servicegruppe."Einordnung Servicegruppe" <> 0) THEN
  BEGIN
    //Prüft, ob die gleiche oder sich gegenseitig verlängerbare Service Artikel gebucht wurden
    Verbundene_Servicegruppe.RESET;
    Verbundene_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
    Verbundene_Servicegruppe.SETFILTER("Feld ID",'%1',44);
    Verbundene_Servicegruppe.SETFILTER("Einordnung Servicegruppe",'%1',Ermittle_Servicegruppe."Einordnung Servicegruppe");
    Verbundene_Servicegruppe.FINDFIRST;
      REPEAT
        PrüfeLizenzTab.RESET;
        PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
        PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
        PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
        PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
        PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
        PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        IF PrüfeLizenzTab.FINDFIRST THEN
          REPEAT
            Artikel_Servicegruppe.RESET;
            Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
            Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
            Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PrüfeLizenzTab."SUP Artikelnr.");
            IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
            Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
              EXIT(TRUE);
          UNTIL PrüfeLizenzTab.NEXT = 0
      UNTIL Verbundene_Servicegruppe.NEXT = 0;
  END
ELSE
  EXIT(FALSE);

EXIT(FALSE);

ZähleServiceVerlängerungen(wartungsnr : Code[20])
IF wartungsnr = '' THEN
  EXIT;

Wartungsvertrag.RESET;
Wartungsvertrag.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
Wartungsvertrag.SETFILTER(Status,'%1|%2|%3',Wartungsvertrag.Status :: Auftrag,Wartungsvertrag.Status :: ACTS,
                          Wartungsvertrag.Status :: ACHAT);
IF Wartungsvertrag.FINDFIRST THEN
  BEGIN
    Wartungsvertrag.Verlängerungen := 0;
    temp_service_artikelnr := '';
    Servicepositionen.RESET;
    Servicepositionen.SETRANGE(Art,Servicepositionen.Art :: Service);
    Servicepositionen.SETRANGE("Wartungsvertragsnr.",Wartungsvertrag."Wartungsvertragsnr.");
    //Servicepositionen.SETRANGE(Basisgerät,TRUE);
    Servicepositionen.SETRANGE(Verlängerung,TRUE);
    Servicepositionen.SETRANGE(Inaktiv,FALSE);
    IF Servicepositionen.FINDFIRST THEN
      BEGIN
        REPEAT
          IF Servicepositionen.Benutzername <> '' THEN
            BEGIN
              IF Servicepositionen."Ablaufdatum Serviceleistung" <> temp_ablaufdatum THEN
                BEGIN
                  Wartungsvertrag.Verlängerungen += 1;
                  Wartungsvertrag.MODIFY;
                END;
            END;
            temp_ablaufdatum := Servicepositionen."Ablaufdatum Serviceleistung";
        UNTIL Servicepositionen.NEXT = 0;
      END;
  END;

PrüfeWartungvorhanden("Service Artikelnr" : Code[20];Lieferscheinnr : Code[20];Lieferscheinzeilennr : Integer;Seriennr : Code[20];Debnr
PrüfeLizenzTab.RESET;
PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
PrüfeLizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
PrüfeLizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
IF PrüfeLizenzTab.FINDLAST THEN
  BEGIN
    EXIT(TRUE);
  END
ELSE
  EXIT(FALSE);

DruckeLizenz(nr : Code[20];intern : Boolean)
DruckeWartung.RESET;
DruckeWartung.SETFILTER("Wartungsvertragsnr.",'%1',nr);
IF DruckeWartung.FINDFIRST THEN
  BEGIN
    IF intern = FALSE THEN
      REPORT.RUN(50176,FALSE,FALSE,DruckeWartung);
    REPORT.RUN(50177,FALSE,FALSE,DruckeWartung);
  END;

OpenServiceKalkulation(version : Integer)
ChampRelaDoc.RESET;
ChampRelaDoc.SETFILTER(Art,'SUP-AU');
ChampRelaDoc.SETFILTER("Nr.",'%1',"Auftragsnr.");
ChampRelaDoc.SETFILTER("Zeilennr.",'%1',"Auftragszeilennr.");
IF version = 0 THEN
  BEGIN
    IF ChampRelaDoc.FINDFIRST THEN ;
    FORM.RUNMODAL(50023,ChampRelaDoc);
  END
ELSE
  IF ChampRelaDoc.FINDFIRST THEN
    FORM.RUNMODAL(50023,ChampRelaDoc);

SystemZugehörigkeitErmitteln(Auftragsnr : Code[20];AktLfdNr : Code[20];Wartungsnr : Code[20]) : Code[20]
IF Wartungsnr = '' THEN
  EXIT('');

PrüfeSystemPos.RESET;
PrüfeSystemPos.SETFILTER(Art,'%1',PrüfeSystemPos.Art :: System);
PrüfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
PrüfeSystemPos.SETFILTER(Basisgerät,'%1',TRUE);
PrüfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
IF PrüfeSystemPos.FINDFIRST THEN
  EXIT(PrüfeSystemPos."Lfd. Nr.")
ELSE
  BEGIN
    PrüfeSystemPos.RESET;
    PrüfeSystemPos.SETFILTER(Art,'%1',PrüfeSystemPos.Art :: System);
    PrüfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
    PrüfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
    IF PrüfeSystemPos.FINDFIRST THEN
      EXIT(PrüfeSystemPos."Lfd. Nr.")
    ELSE
      EXIT(AktLfdNr);
  END;

FehlendeSystemZugehoerigkeit(Wartungsnr : Code[20];LfdNr : Code[20])
IF Wartungsnr = '' THEN
  EXIT;

PruefeSystemPos.RESET;
PruefeSystemPos.SETFILTER(Art,'%1',PruefeSystemPos.Art :: System);
PruefeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
PruefeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
PruefeSystemPos.SETFILTER("Lfd. Nr.",'<>%1',LfdNr);
PruefeSystemPos.SETFILTER("Gehört zu Lfd. Nr.",'%1','');
IF PruefeSystemPos.FINDFIRST THEN
  REPEAT
    PruefeSystemPos."Gehört zu Lfd. Nr." := LfdNr;
    PruefeSystemPos.MODIFY;
  UNTIL PruefeSystemPos.NEXT = 0;

FehlendeVertragsZugehoerigkeit(Nr : Code[20];Zeile : Integer;Belegnr : Code[20];Belegzeile : Integer;MoeglicheWartungsnr : Code[20])
Kalkulation.RESET;
Kalkulation.SETFILTER(Art,'SUP-AU');
Kalkulation.SETFILTER("Nr.",'%1',Nr);
Kalkulation.SETFILTER("Zeilennr.",'%1',Zeile);
Kalkulation.SETFILTER(Fremderwerb,'%1',FALSE);
IF Kalkulation.FINDFIRST THEN
  REPEAT
    //Wenn Pos. aus Lieferschein stammt
    SystemPosOhneWVnr.RESET;
    SystemPosOhneWVnr.SETFILTER(Art,'%1',SystemPosOhneWVnr.Art :: System);
    SystemPosOhneWVnr.SETFILTER("Nr.",'%1',Kalkulation."Belegnr.");
    SystemPosOhneWVnr.SETFILTER("Belegzeilennr.",'%1',Kalkulation."Belegzeilennr.");
    SystemPosOhneWVnr.SETFILTER("Wartungsvertragsnr.",'%1','');
    IF SystemPosOhneWVnr.FINDFIRST THEN
      BEGIN
        REPEAT
          Wartung.RESET;
          Wartung.SETFILTER("Lieferscheinnr.",'%1',Belegnr);
          Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Belegzeile);
          IF Wartung.FINDLAST THEN
            BEGIN
              IF MoeglicheWartungsnr <> Wartung."Wartungsvertragsnr." THEN
                MESSAGE(Text029,Nr,Zeile,MoeglicheWartungsnr);

              SystemPosOhneWVnr."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
              SystemPosOhneWVnr."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
              SystemPosOhneWVnr."Gehört zu Lfd. Nr." := SystemZugehörigkeitErmitteln(Nr,SystemPosOhneWVnr."Lfd. Nr.",
                                                SystemPosOhneWVnr."Wartungsvertragsnr.");
              SystemPosOhneWVnr.MODIFY;
            END;
        UNTIL SystemPosOhneWVnr.NEXT = 0;
      END
    ELSE
      BEGIN
        //Wenn Pos. direkt mit Champs geliefert wurde
        SystemPosOhneWVnr.RESET;
        SystemPosOhneWVnr.SETFILTER(Art,'%1',SystemPosOhneWVnr.Art :: System);
        SystemPosOhneWVnr.SETFILTER("Auftragsnr.",'%1',Kalkulation."Belegnr.");
        SystemPosOhneWVnr.SETFILTER("Auftragszeilennr.",'%1',Kalkulation."Belegzeilennr.");
        SystemPosOhneWVnr.SETFILTER("Wartungsvertragsnr.",'%1','');
        IF SystemPosOhneWVnr.FINDFIRST THEN
          BEGIN
            REPEAT
              Wartung.RESET;
              Wartung.SETFILTER("Lieferscheinnr.",'%1',Belegnr);
              Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Belegzeile);
              IF Wartung.FINDLAST THEN
                BEGIN
                  IF MoeglicheWartungsnr <> Wartung."Wartungsvertragsnr." THEN
                   MESSAGE(Text029,Nr,Zeile,MoeglicheWartungsnr);

                  SystemPosOhneWVnr."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                  SystemPosOhneWVnr."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                  SystemPosOhneWVnr."Gehört zu Lfd. Nr." := SystemZugehörigkeitErmitteln(Nr,SystemPosOhneWVnr."Lfd. Nr.",
                                                    SystemPosOhneWVnr."Wartungsvertragsnr.");
                  SystemPosOhneWVnr.MODIFY;
                END;
            UNTIL SystemPosOhneWVnr.NEXT = 0;
          END;
      END;
  UNTIL Kalkulation.NEXT = 0;

ServiceZugehörigkeitErmitteln(Auftragsnr : Code[20];AktLfdNr : Code[20];Wartungsnr : Code[20]) : Code[20]
IF Wartungsnr = '' THEN
  EXIT('');

PrüfeLizenzTab.RESET;
PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
PrüfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
PrüfeLizenzTab.SETFILTER(Basisgerät,'%1',TRUE);
PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
IF PrüfeLizenzTab.FINDFIRST THEN
  EXIT(PrüfeLizenzTab."Lfd. Nr.")
ELSE
  BEGIN
    PrüfeLizenzTab.RESET;
    PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
    PrüfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
    PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
    IF PrüfeLizenzTab.FINDFIRST THEN
      EXIT(PrüfeLizenzTab."Lfd. Nr.")
    ELSE
      EXIT(AktLfdNr);
  END;

WartungsStartErmitteln("SUP Artikelnr" : Code[20];Startdatum : Date;Buchungsdatum : Date;Wartungsnr : Code[20]) : Date
IF ("SUP Artikelnr"= 'CHAMPS-RE_INSTATE#01') OR ("SUP Artikelnr" = 'RE_INSTATEMENT_FEE') THEN
  EXIT(0D);

IF Wartungsnr <> '' THEN
  BEGIN
    PrüfeLizenzTab.RESET;
    PrüfeLizenzTab.SETFILTER(Art,'%1',PrüfeLizenzTab.Art :: Service);
    PrüfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
    PrüfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',Buchungsdatum);
    PrüfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
    PrüfeLizenzTab.SETFILTER("SUP Artikelnr.",'%1',"SUP Artikelnr");
    IF PrüfeLizenzTab.FINDFIRST THEN
      BEGIN
        IF PrüfeLizenzTab.Lizenzdatum > Buchungsdatum THEN
          EXIT(PrüfeLizenzTab.Lizenzdatum)
        ELSE
          EXIT(Buchungsdatum);
      END
    ELSE
      EXIT(Buchungsdatum);
  END
ELSE
  BEGIN
    IF Startdatum <> 0D THEN
      EXIT(Startdatum)
    ELSE
      BEGIN
        IF "SUP Artikelnr" = 'EXTD-HW-WARR/YR' THEN
          BEGIN
            vdatum := CALCDATE('1J',Buchungsdatum);
            EXIT(vdatum);
          END
        ELSE
          EXIT(Buchungsdatum);
      END;
  END;

WartungsLaufzeitErmitteln(SUPArtikelnr : Code[20];Laufzeit : Code[20]) : Code[20]
IF (SUPArtikelnr = 'CHAMPS-RE_INSTATE#01') OR (SUPArtikelnr = 'RE_INSTATEMENT_FEE') THEN
  EXIT;

IF Laufzeit <> '' THEN
  BEGIN
    EXIT(Laufzeit)
  END
ELSE
  BEGIN
    Opt.RESET;
    Opt.SETFILTER("Tabellen ID",'%1',50024);
    Opt.SETFILTER("Feld ID",'%1',44);
    Opt.SETFILTER("Nr.",'%1',SUPArtikelnr);
    IF Opt.FINDFIRST THEN
      BEGIN
        EXIT(Opt.Code);
      END
    ELSE
      EXIT('12M');
  END;

ServiceArtikelnrErmitteln(Artikelnr : Code[20];"SUP Artikelnr" : Code[20]) : Code[40]
Artikel.GET("SUP Artikelnr");
IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT')
OR (Artikel.Artikelgruppe = 'ACHAT') THEN
  ACTS := TRUE
ELSE
  ACTS := FALSE;

Champs.RESET;
Champs.SETFILTER("Zuordnung obsolete",'%1',FALSE);
IF ACTS THEN
  Champs.SETFILTER(Art,'%1',Champs.Art :: ACTS)
ELSE
  Champs.SETFILTER(Art,'%1',Champs.Art :: Champs);
Champs.SETFILTER("Artikelnr.",'%1',Artikelnr);
//Für ACHAT wird auf das ACTS pendant verwiesen, spart separate ACHAT Preisliste
IF "SUP Artikelnr" = 'ACHAT/SOFTWARE/24#01' THEN
  "SUP Artikelnr" := 'ACTS-SUPP-24x7/SO#01';
IF "SUP Artikelnr" = 'ACHAT/SOFTWARE/24#02' THEN
  "SUP Artikelnr" := 'ACTS-SUPP-24x7/SO#02';
IF "SUP Artikelnr" = 'ACHAT-ADV-HWREPLA#01' THEN
  "SUP Artikelnr" := 'ACTS-ADV-HWREPLAC#01';
Champs.SETFILTER("SUP Artikelnr.",'%1',"SUP Artikelnr");
Champs.SETFILTER(Währungscode,'%1','USD');
IF Champs.FINDFIRST THEN
  EXIT(Champs."Champ Artikelnr.")
ELSE
  IF "SUP Artikelnr" = 'CHAMPS-RE_INSTATE#01' THEN
    EXIT('CHAMPS-RE_INSTATEMENT_FEE');

NewPosFromRMA(LfdNr : Code[20];AlteSN : Code[20];NeueSN : Code[20];"RMA-Nr" : Code[20];CopyRec : Record "Serviceleist. & Leihstellungen"
IF CopyRec.Reklamiert = FALSE THEN
  BEGIN
    NewRec.INIT;
    NewRec.TRANSFERFIELDS(CopyRec);
    NewRec."Seriennr." := NeueSN;
    NewRec."Urspr. Seriennr." := AlteSN;
    NewRec.Ersatzverfahren := TRUE;
    NewRec."Ersatz für Lfd. Nr." := CopyRec."Lfd. Nr.";
    NewRec."Board ini" := '';
    IF KundenPool THEN
      BEGIN
        PrüfeSystemPos.RESET;
        PrüfeSystemPos.SETFILTER(Art,'%1',PrüfeSystemPos.Art :: System);
        PrüfeSystemPos.SETFILTER("Artikelnr.",'%1',Artikelnr);
        PrüfeSystemPos.SETFILTER("Seriennr.",'%1',NeueSN);
        PrüfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
        PrüfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',CopyRec."Wartungsvertragsnr.");
        IF PrüfeSystemPos.FINDFIRST THEN
          BEGIN
            NewRec."Urspr. Lieferscheinnr." := PrüfeSystemPos."Nr.";
            NewRec."Urspr. Lieferscheinzeilennr." := PrüfeSystemPos."Belegzeilennr.";
            NewRec."Urspr. Auftragsnr." := PrüfeSystemPos."Auftragsnr.";
            NewRec."Urspr. Auftragszeilennr." := PrüfeSystemPos."Auftragszeilennr.";
          END;
      END;
    NewRec.INSERT(TRUE);

    CopyRec.Reklamiert := TRUE;
    CopyRec."RMA-Nr." := "RMA-Nr";
    CopyRec.Ersatzverfahren := TRUE;
    //CopyRec."Ersatz durch Lfd. Nr." := NewRec."Lfd. Nr.";
    CopyRec.Inaktiv := TRUE;
    CopyRec.MODIFY(TRUE);
  END;

ServicePreiseNeuKalkulieren(Artikelnr : Code[20];"SUP Artikelnr" : Code[20];Laufzeit : Code[20];Feld : Code[20];Runden : Boolean;Währun
//06.12.2011-ST Für Übergang genutzt, bis eindeutig Champ Preise vor dem Buchen neu kalkuliert werden
//10.01.2014-ST Nun auch für ACTS
//27.01.2014-ST Nun auch für ACHAT
//18.06.2014-ST Nun auch für Misch ACTS/ACHAT

IF Laufzeit = '' THEN
  EXIT;

IF Runden THEN
  rundgs_faktor := 1
ELSE
  rundgs_faktor := 0.01;

Artikel.GET("SUP Artikelnr");
IF (Artikel."Software Upgrade Protection" = TRUE) THEN
  BEGIN

    IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') THEN
      ACTS := TRUE
    ELSE
      ACTS := FALSE;

    IF Artikel.Artikelgruppe = 'ACHAT' THEN
      ACHAT := TRUE
    ELSE
      ACHAT := FALSE;

    IF ACHAT THEN
      spezial_discount := 1 / 0.8 *0.58 // für ACHAT 1 / 0.8 (Zurückrechnung Champ DC auf 100 % MSRP) * 0.58 EK ACHAT
    ELSE
      spezial_discount := 1;

    EVALUATE(kalk_laufzeit,COPYSTR(Laufzeit,1,STRPOS(Laufzeit,'M')-1));

    Opt_laufzeit.RESET;
    Opt_laufzeit.SETFILTER("Tabellen ID",'%1',50024);
    Opt_laufzeit.SETFILTER("Feld ID",'%1',44);
    Opt_laufzeit.SETFILTER("Nr.",'%1',"SUP Artikelnr");
    IF Opt_laufzeit.FINDFIRST THEN
      EVALUATE(v_laufzeit,COPYSTR(Opt_laufzeit.Code,1,STRPOS(Opt_laufzeit.Code,'M')-1))
    ELSE
      v_laufzeit := 12;

    Champs.RESET;
    Champs.SETFILTER("Zuordnung obsolete",'%1',FALSE);
    IF (ACTS = TRUE) OR (ACHAT = TRUE) THEN
      Champs.SETFILTER(Art,'%1',Champs.Art :: ACTS)
    ELSE
      Champs.SETFILTER(Art,'%1',Champs.Art :: Champs);
    Champs.SETFILTER("Artikelnr.",'%1',Artikelnr);
    //Für ACHAT wird auf das ACTS pendant verwiesen, spart separate ACHAT Preisliste
    IF "SUP Artikelnr" = 'ACHAT/SOFTWARE/24#01' THEN
      "SUP Artikelnr" := 'ACTS-SUPP-24x7/SO#01';
    IF "SUP Artikelnr" = 'ACHAT/SOFTWARE/24#02' THEN
      "SUP Artikelnr" := 'ACTS-SUPP-24x7/SO#02';
    IF "SUP Artikelnr" = 'ACHAT-ADV-HWREPLA#01' THEN
      "SUP Artikelnr" := 'ACTS-ADV-HWREPLAC#01';
    Champs.SETFILTER("SUP Artikelnr.",'%1',"SUP Artikelnr");
    Champs.SETFILTER(Währungscode,'%1',Währung);
    IF Champs.FINDFIRST THEN
      BEGIN
        IF Feld = 'DC' THEN
          BEGIN

            //CHAMPS EK Konditionen
            v_service_laufzeit := kalk_laufzeit DIV 12;
            CASE v_service_laufzeit OF
              0..1 : champs_discount := 1;
              2 : champs_discount := 0.95; // -5%
              3 : champs_discount := 0.88; // -12%
              4 : champs_discount := 0.84; // -16%
              5..100 : champs_discount := 0.8; // -20%
            END;

            //ACTS EK Konditionen
            v_service_laufzeit := kalk_laufzeit DIV 12;
            CASE v_service_laufzeit OF
              0..1 : acts_discount := 1;
              2 : acts_discount := 0.95; // -5%
              3 : acts_discount := 0.88; // -12%
              4 : acts_discount := 0.84; // -16%
              5..100 : acts_discount := 0.8; // -20%
            END;

            IF (ACTS = FALSE) AND (ACHAT = FALSE) THEN
              EXIT((ROUND((((Champs.MSRP * 0.72) * Champs."Laufzeit in Jahren") * (kalk_laufzeit / v_laufzeit))
              * (champs_discount),rundgs_faktor)) * spezial_discount)
            ELSE
              IF (ACHAT = TRUE) THEN
                EXIT((ROUND((((Champs.MSRP * 0.8) * Champs."Laufzeit in Jahren") * (kalk_laufzeit / v_laufzeit)),
                rundgs_faktor)) * spezial_discount)
              ELSE
                IF (ACTS = TRUE) THEN
                  EXIT((ROUND((((Champs.MSRP * 0.8) * Champs."Laufzeit in Jahren") * (kalk_laufzeit / v_laufzeit))
                  * (acts_discount),rundgs_faktor)) * spezial_discount)
          END;

        IF Feld = 'MSRP' THEN
          EXIT(ROUND((Champs.MSRP * Champs."Laufzeit in Jahren") * (kalk_laufzeit / v_laufzeit),rundgs_faktor));
      END
    ELSE
      EXIT(0);
  END;

CheckDoubleSerialNo(Artnr : Code[20];SN : Code[20]) : Boolean
IF (Artnr = '') OR (SN = '') THEN
  EXIT(FALSE);

ServicePos.SETRANGE(Art,Art :: Service,Art :: System);
ServicePos.SETRANGE("Artikelnr.",Artnr);
ServicePos.SETRANGE("Seriennr.",SN);
ServicePos.SETRANGE(Inaktiv,FALSE);
IF ServicePos.FINDFIRST THEN
  BEGIN
    REPEAT
      IF wartungsnr <> '' THEN
        IF wartungsnr <> ServicePos."Wartungsvertragsnr." THEN
          ERROR(Text032,SN,wartungsnr,ServicePos."Wartungsvertragsnr.");
      wartungsnr := ServicePos."Wartungsvertragsnr.";
    UNTIL ServicePos.NEXT = 0;
  END;

EXIT(FALSE);

EndkundenInfoUpdate(Liefkopf : Record "Sales Shipment Header";Wartung : Record Wartungsvertrag)
WITH Wartung DO BEGIN
  IF (Liefkopf.Endkunde <> '') AND ((Endkunde = '') OR (("Endkunde Ort" = '') AND ("Endkunde E-Mail" = ''))) THEN
    BEGIN
      Wartung.Endkunde := Liefkopf.Endkunde;
      Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
      Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
      Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
      Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
      Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
      Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
      Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
      Wartung.MODIFY(TRUE);
    END;
END;

SystemPos_verschieben(Aktueller_WV : Code[20];Neuer_WV : Code[20]) : Boolean
aktion := FALSE;

IF NOT CONFIRM(Text070,TRUE) THEN
  EXIT(aktion);

NeuerVertrag.GET(Neuer_WV);
AlterVertrag.GET(Aktueller_WV);

SystemPos.RESET;
SystemPos.SETFILTER(Art,'%1',SystemPos.Art :: System);
SystemPos.SETFILTER("Zum Verschieben markieren",'%1',TRUE);
SystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Aktueller_WV);
IF SystemPos.FINDFIRST THEN
  REPEAT
    //IF SystemPos.Basisgerät = TRUE THEN ERROR(Text071);

    IF SystemPos_aktion_gesperrt(SystemPos."Artikelnr.",SystemPos."Seriennr.",SystemPos."Nr.",
    SystemPos."Belegzeilennr.") = FALSE THEN
      BEGIN
        SystemPos."Wartungsvertragsnr." := NeuerVertrag."Wartungsvertragsnr.";
        SystemPos."Hauptwartungsvertragsnr." := NeuerVertrag."Hauptwartungsvertragsnr.";
        SystemPos."Zum Verschieben markieren" := FALSE;

        NeueSystemPos.RESET;
        NeueSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
        NeueSystemPos.SETFILTER(Art,'%1',NeueSystemPos.Art :: System);
        NeueSystemPos.SETFILTER(Basisgerät,'%1',TRUE);
        NeueSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',NeuerVertrag."Wartungsvertragsnr.");
        IF NeueSystemPos.FINDFIRST THEN
          BEGIN
            SystemPos."Gehört zu Lfd. Nr." := NeueSystemPos."Gehört zu Lfd. Nr.";
          END
        ELSE
          BEGIN
            NeueSystemPos.RESET;
            NeueSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
            NeueSystemPos.SETFILTER(Art,'%1',NeueSystemPos.Art :: System);
            NeueSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',NeuerVertrag."Wartungsvertragsnr.");
            IF NeueSystemPos.FINDFIRST THEN
              BEGIN
                SystemPos."Gehört zu Lfd. Nr." := NeueSystemPos."Gehört zu Lfd. Nr.";
              END
            ELSE
              IF SystemPos.Basisgerät = TRUE THEN
                SystemPos."Gehört zu Lfd. Nr." := SystemPos."Lfd. Nr."
              ELSE
                MESSAGE(Text072,SystemPos."Seriennr.",SystemPos.FIELDCAPTION("Gehört zu Lfd. Nr."));
          END;

        IF SystemPos.Basisgerät = TRUE THEN
          BEGIN
            IF (NeuerVertrag.Basisgerät = '') OR (NeuerVertrag."Ablauf Gewährleistung" = 0D) THEN
              BEGIN
                NeuerVertrag."Debitornr." := AlterVertrag."Debitornr.";
                NeuerVertrag.Basisgerät := AlterVertrag.Basisgerät;
                NeuerVertrag."Ablauf Gewährleistung" := AlterVertrag."Ablauf Gewährleistung";
                NeuerVertrag.MODIFY(TRUE);
              END;

            IF AlterVertrag.Klasse = AlterVertrag.Klasse :: Mehrgeräte THEN
              BEGIN
                AlterVertrag.Volumen -= 1;
                AlterVertrag.MODIFY(TRUE);
                NeuerVertrag.Volumen += 1;
                NeuerVertrag.MODIFY(TRUE);
              END;

          END;

        SystemPos.MODIFY(TRUE);
        aktion :=  TRUE;
        MESSAGE(Text073,SystemPos."Seriennr.",Neuer_WV);
      END;
  UNTIL SystemPos.NEXT = 0;

EXIT(aktion);

SystemPos_aktion_gesperrt(Artikelnr : Code[20];Seriennr : Code[20];Lieferscheinnr : Code[20];Lieferscheinzeilennr : Integer) : Boolean
//Prüft, ob die Seriennr. auch temporär vorbelegt wurden, um Fehlbuchungen zu verhindern

TempSystemPos.RESET;
TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art :: Temporär);
TempSystemPos.SETFILTER("Artikelnr.",'%1',Artikelnr);
TempSystemPos.SETFILTER("Seriennr.",'%1',Seriennr);
TempSystemPos.SETFILTER("Nr.",'%1',Lieferscheinnr);
TempSystemPos.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
IF TempSystemPos.FINDFIRST THEN
  BEGIN
    IF CONFIRM(Text074,TRUE) THEN
      BEGIN
        TempSystemPos.MODIFYALL(Vormerkung,FALSE);
        EXIT(FALSE);
      END
    ELSE
      EXIT(TRUE);
  END
ELSE
  EXIT(FALSE);
